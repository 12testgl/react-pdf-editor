{"version":3,"sources":["entities/index.ts","components/MenuBar.tsx","modals/components/DrawingModal.tsx","entities/helpContent.ts","modals/components/HelpModal.tsx","utils/prepareAssets.ts","utils/asyncReader.ts","utils/helpers.ts","utils/pdf.ts","hooks/usePdf.ts","hooks/useAttachments.ts","hooks/useUploader.ts","components/Empty.tsx","components/Page.tsx","ui/components/Div.ts","components/ConfirmContent.tsx","components/Image.tsx","containers/Image.tsx","components/Drawing.tsx","containers/Drawing.tsx","components/Text.tsx","containers/Text.tsx","components/Attachments.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DragActions","Color","AttachmentTypes","TextMode","MenuBar","openHelp","uploadNewPdf","addDrawing","addText","addImage","isPdfLoaded","savingPdfStatus","savePdf","Menu","pointing","Item","header","position","Dropdown","item","closeOnBlur","icon","simple","onClick","name","disabled","Icon","DrawingModal","open","dismiss","confirm","drawing","svgRef","createRef","useState","paths","setPaths","path","setPath","svgX","setSvgX","svgY","setSvgY","Infinity","minX","setMinX","maxX","setMaxX","minY","setMinY","maxY","setMaxY","mouseDown","setMouseDown","strokeWidth","setStrokeWidth","BLACK","stroke","setStroke","strokeDropdownOpen","setStrokeDropdownOpen","useEffect","svg","current","getBoundingClientRect","x","y","closeModal","handleStrokeSelect","color","Modal","size","dimmer","onClose","Header","Content","text","map","key","selected","trigger","Label","onBlur","style","display","gridTemplateColumns","padding","Object","values","index","margin","onMouseDown","event","preventDefault","clientX","clientY","Math","min","max","onMouseMove","onMouseUp","ref","width","height","strokeLinejoin","strokeLinecap","fill","d","Actions","Button","content","labelPosition","length","dx","dy","reduce","fullPath","lineItem","positive","helpContent","title","HelpModal","activeIndex","setActiveIndex","handleClick","data","scrolling","Accordion","fluid","styled","Fragment","Title","active","scripts","src","assets","getAsset","scriptName","fonts","Courier","correction","lineHeight","Helvetica","readAsArrayBuffer","標楷體","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","window","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","ggID","id","getMovePosition","dragX","dragY","pageWidth","pageHeight","newPositionTop","newPositionLeft","top","left","normalize","value","parseFloat","toFixed","save","pdfFile","objects","PDFLib","download","PDFDocument","load","pdfDoc","console","log","pagesProcesses","getPages","page","pageIndex","pageObjects","getHeight","embedProcesses","object","type","embedJpg","embedPng","drawImage","fontFamily","embedFont","pdfFont","drawText","maxWidth","font","scale","pushGraphicsState","setLineCap","popGraphicsState","setLineJoin","LineCapStyle","LineJoinStyle","rgb","pushOperators","Round","w3color","toRgb","drawSvgPath","borderColor","r","g","b","borderWidth","all","forEach","p","pdfBytes","ActionType","UploadTypes","initialState","allPageAttachments","pageAttachments","reducer","state","action","ADD_ATTACHMENT","newAllPageAttachmentsAdd","attachments","attachment","REMOVE_ATTACHMENT","newAllPageAttachmentsRemove","otherPageAttachments","filter","_","_attachmentIndex","attachmentIndex","UPDATE_ATTACHMENT","newAllPageAttachmentsUpdate","oldAttachment","UPDATE_PAGE_INDEX","RESET","Array","numberOfPages","handlers","pdf","pages","numPages","getPage","Error","image","imageAttachemnt","IMAGE","useUploader","use","afterUploadPdf","afterUploadAttachment","isUploading","setIsUploading","inputRef","upload","files","currentTarget","dataTransfer","PDF","input","click","Empty","loading","uploadPdf","Segment","placeholder","primary","Page","dimensions","updateDimensions","canvasRef","useRef","setWidth","setHeight","_page","context","getContext","viewport","getViewport","render","canvasContext","newDimensions","renderPage","Div","div","ConfirmContent","onConfirm","onDismiss","as","inverted","negative","positionTop","positionLeft","handleMouseOut","handleMouseDown","handleMouseMove","handleMouseUp","handleImageScale","dimmerActive","cancelDelete","deleteImage","onMouseOut","onDoubleClick","borderStyle","cursor","Dimmer","Dimmable","dimmed","onClickOutside","data-direction","removeImage","updateImageAttachment","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","setPositionTop","setPositionLeft","direction","setDirection","NO_MOVEMENT","operation","setOperation","setDimmerActive","MOVE","movementX","movementY","SCALE","canvas","newCanvasWidth","newCanvasHeight","toBlob","renderImage","onCancelDelete","includes","directions","dataset","split","Drawing","deleteDrawing","removeDrawing","updateDrawingAttachment","setAttribute","Text","mode","onChangeText","toggleEditMode","border","fontSize","COMMAND","wordWrap","onChange","readOnly","outline","boxSizing","backgroundColor","updateTextAttachment","setContent","textMode","setTextMode","prepareTextAndUpdate","document","getSelection","removeAllRanges","lines","INSERT","focus","select","Attachments","pdfName","pageDimensions","removeAttachment","updateAttachment","handleAttachmentUpdate","DRAWING","TEXT","App","helpModalOpen","setHelpModalOpen","drawingModalOpen","setDrawingModalOpen","setName","setPageIndex","setDimensions","setFile","setPages","isMultiPage","setIsMultiPage","isFirstPage","setIsFirstPage","isLastPage","setIsLastPage","isSaving","setIsSaving","currentPage","useCallback","nextPage","newPageIndex","initialize","_pages","multi","previousPage","usePdf","useReducer","dispatch","add","newAttachment","reset","remove","update","useAttachments","addAttachment","resetAttachments","pdfDetails","pdfInput","handlePdfClick","imageInput","handleImageClick","onImageClick","uploadImage","useLayoutEffect","hiddenInputs","accept","Container","newTextAttachment","Grid","Row","Column","verticalAlign","textAlign","circular","compact","stacked","newDrawingAttachment","Boolean","location","hostname","match","script","createElement","body","appendChild","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b3c2f5de.chunk.js","sourcesContent":["export enum DragActions {\n  MOVE = 'MOVE',\n  SCALE = 'SCALE',\n  NO_MOVEMENT = 'NO_MOVEMENT',\n}\n\nexport enum Color {\n  RED = 'red',\n  ORANGE = 'orange',\n  YELLOW = 'yellow',\n  OLIVE = 'olive',\n  GREEN = 'green',\n  TEAL = 'teal',\n  BLUE = 'blue',\n  VIOLOET = 'violet',\n  PURPLE = 'purple',\n  BROWN = 'brown',\n  GREY = 'grey',\n  BLACK = 'black',\n}\n\nexport enum AttachmentTypes {\n  IMAGE = 'image',\n  DRAWING = 'drawing',\n  TEXT = 'text',\n}\n\nexport enum TextMode {\n  INSERT = 'insert',\n  COMMAND = 'command',\n}\n","import React from 'react';\nimport { Menu, Dropdown, Icon } from 'semantic-ui-react';\n\ninterface Props {\n  openHelp: () => void;\n  uploadNewPdf: () => void;\n  addText: () => void;\n  addImage: () => void;\n  addDrawing: () => void;\n  isPdfLoaded: boolean;\n  savingPdfStatus: boolean;\n  savePdf: () => void;\n}\n\nexport const MenuBar: React.FC<Props> = ({\n  openHelp,\n  uploadNewPdf,\n  addDrawing,\n  addText,\n  addImage,\n  isPdfLoaded,\n  savingPdfStatus,\n  savePdf,\n}) => (\n  <Menu pointing>\n    <Menu.Item header>PDF Editor</Menu.Item>\n    <Menu.Menu position=\"right\">\n      {isPdfLoaded && (\n        <>\n          <Dropdown item closeOnBlur icon=\"edit outline\" simple>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={addText}>Add Text</Dropdown.Item>\n              <Dropdown.Item onClick={addImage}>Add Image</Dropdown.Item>\n              <Dropdown.Item onClick={addDrawing}>Add Drawing</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Menu.Item\n            name={savingPdfStatus ? 'Saving...' : 'Save'}\n            disabled={savingPdfStatus}\n            onClick={savePdf}\n          />\n          <Menu.Item name=\"Upload New\" onClick={uploadNewPdf} />\n        </>\n      )}\n      <Menu.Item onClick={openHelp}>\n        <Icon name=\"question circle outline\" />\n      </Menu.Item>\n    </Menu.Menu>\n  </Menu>\n);\n","import React, { useState, createRef, useEffect } from 'react';\nimport { Modal, Button, Menu, Dropdown, Label } from 'semantic-ui-react';\nimport { Color } from '../../entities';\n\ninterface Props {\n  open: boolean;\n  dismiss: () => void;\n  confirm: (drawing?: {\n    width: number;\n    height: number;\n    path: string;\n    strokeWidth: number;\n    stroke: string;\n  }) => void;\n  drawing?: DrawingAttachment;\n}\n\nexport const DrawingModal = ({ open, dismiss, confirm, drawing }: Props) => {\n  const svgRef = createRef<SVGSVGElement>();\n  const [paths, setPaths] = useState<Array<[string, number, number]>>([]);\n  const [path, setPath] = useState((drawing && drawing.path) || '');\n  const [svgX, setSvgX] = useState(0);\n  const [svgY, setSvgY] = useState(0);\n  const [minX, setMinX] = useState(Infinity);\n  const [maxX, setMaxX] = useState(0);\n  const [minY, setMinY] = useState(Infinity);\n  const [maxY, setMaxY] = useState(0);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [strokeWidth, setStrokeWidth] = useState(5);\n  const [stroke, setStroke] = useState(Color.BLACK);\n  const [strokeDropdownOpen, setStrokeDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    const { x, y } = svg.getBoundingClientRect();\n    setSvgX(x);\n    setSvgY(y);\n  }, [svgRef]);\n\n  const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(true);\n\n    const x = event.clientX - svgX;\n    const y = event.clientY - svgY;\n    setMinX(Math.min(minX, x));\n    setMaxX(Math.max(maxX, x));\n    setMinY(Math.min(minY, y));\n    setMaxY(Math.max(maxY, y));\n    setPath(path + `M${x},${y}`);\n    setPaths([...paths, ['M', x, y]]);\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    if (!mouseDown) return;\n\n    const x = event.clientX - svgX;\n    const y = event.clientY - svgY;\n    setMinX(Math.min(minX, x));\n    setMaxX(Math.max(maxX, x));\n    setMinY(Math.min(minY, y));\n    setMaxY(Math.max(maxY, y));\n    setPath(path + `L${x},${y}`);\n    setPaths([...paths, ['L', x, y]]);\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(false);\n  };\n\n  const resetDrawingBoard = () => {\n    setPaths([]);\n    setPath('');\n    setMinX(Infinity);\n    setMaxX(0);\n    setMinY(Infinity);\n    setMaxY(0);\n    setStrokeWidth(5);\n    setStroke(Color.BLACK);\n  };\n\n  const handleDone = () => {\n    if (!paths.length) {\n      confirm();\n      return;\n    }\n\n    const boundingWidth = maxX - minX;\n    const boundingHeight = maxY - minY;\n\n    const dx = -(minX - 10);\n    const dy = -(minY - 10);\n\n    confirm({\n      stroke,\n      strokeWidth,\n      width: boundingWidth + 20,\n      height: boundingHeight + 20,\n      path: paths.reduce(\n        (fullPath, lineItem) =>\n          `${fullPath}${lineItem[0]}${lineItem[1] + dx}, ${lineItem[2] + dy}`,\n        ''\n      ),\n    });\n\n    closeModal();\n  };\n\n  const closeModal = () => {\n    resetDrawingBoard();\n    dismiss();\n  };\n\n  // TODO: Move to config\n  const strokeSizes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  const handleStrokeSelect = (color: Color) => () => {\n    setStroke(color);\n    setStrokeDropdownOpen(false);\n  };\n\n  return (\n    <Modal size=\"small\" dimmer=\"inverted\" open={open} onClose={closeModal}>\n      <Modal.Header>Add your Drawing</Modal.Header>\n      <Modal.Content>\n        <Menu size=\"tiny\">\n          <Menu.Item header>Tools</Menu.Item>\n          {/* <Menu.Item><Icon name=\"undo\" /></Menu.Item>\n                    <Menu.Item><Icon name=\"redo\" /></Menu.Item> */}\n          <Menu.Menu position=\"right\">\n            <Dropdown item text={`${strokeWidth}`}>\n              <Dropdown.Menu>\n                {strokeSizes.map((size) => (\n                  <Dropdown.Item\n                    key={size}\n                    selected={size === strokeWidth}\n                    onClick={() => setStrokeWidth(size)}\n                  >\n                    {size}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown\n              item\n              trigger={<Label color={stroke} />}\n              onClick={() => setStrokeDropdownOpen(true)}\n              onBlur={() => setStrokeDropdownOpen(false)}\n            >\n              <Dropdown.Menu open={strokeDropdownOpen}>\n                <div\n                  style={{\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(3, 1fr)',\n                    padding: 5,\n                  }}\n                >\n                  {Object.values(Color).map((color, index) => (\n                    <div \n                      style={{ margin: 2.5 }} \n                      key={index}\n                    >\n                      <Label\n                        color={color}\n                        onClick={handleStrokeSelect(color)}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </Dropdown.Menu>\n            </Dropdown>\n            {/* <Dropdown item text={stroke}>\n                            <Dropdown.Menu>\n                                <Card.Group itemsPerRow={3}>\n                                    {Object.values(Color).map((color, index) => (\n                                        <Card inverted key={index} color={color} />\n                                    ))}\n                                </Card.Group>\n                            </Dropdown.Menu>\n                        </Dropdown> */}\n          </Menu.Menu>\n        </Menu>\n        <div\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n        >\n          <svg\n            ref={svgRef}\n            style={{\n              width: '100%',\n              height: '50vh',\n            }}\n          >\n            <path\n              strokeWidth={strokeWidth}\n              strokeLinejoin=\"round\"\n              strokeLinecap=\"round\"\n              stroke={stroke}\n              fill=\"none\"\n              d={path}\n            />\n          </svg>\n        </div>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" content=\"Cancel\" onClick={closeModal} />\n        <Button\n          content=\"Done\"\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          onClick={handleDone}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","export const helpContent = [\n  {\n    title: `What's this?`,\n    content: [\n      'This is a piece of sofware that allows you to edit your PDFs. You can add images and drawings to your pdf.',\n      `And there are more features coming up like adding text.`,\n    ],\n  },\n  {\n    title: 'How do I delete an attached image or drawing?',\n    content: [\n      `Easy! Just double click the image or drawing. You will be asked to confirm delete and then, voila, it's gone!`,\n    ],\n  },\n  {\n    title: 'Can I add multiple images or drawings on a page?',\n    content: [`Yes.`],\n  },\n  {\n    title: 'How can I delete my uploaded pdf?',\n    content: [\n      `You can't delete the uploaded pdf.`,\n      `You will have to upload a new one. This is a client-side app so you did not actually uploaded it to any server. Don't worry :)`,\n    ],\n  },\n  {\n    title: 'Can I resize a drawing?',\n    content: [`No. Currently it is not possible to resize a drawing`],\n  },\n  {\n    title: 'Can I resize an image?',\n    content: [\n      `Yes you can. Move your mouse to the top-left corner of the image.`,\n      `The cursor should change and you should be able to resize from there`,\n    ],\n  },\n  {\n    title: 'Can I load multi-page pdf?',\n    content: ['Yes.'],\n  },\n  {\n    title: 'How do I add text to the pdf?',\n    content: [\n      '-  In the dropdown menu for edit, select add Text. This will add a text object to your pdf',\n      '-  You should see a textbox with placeholder text `Enter Text Here`',\n      '-  The textbox has two modes, edit mode and command mode, you can toggle between either by double clicking any area within the textbox.',\n      '-  In Edit Mode, you can enter your desired text',\n      `-  In Command Mode, you can move the textbox around to change it's position`,\n    ],\n  },\n  {\n    title: `Why can't I enter multi-line text?`,\n    content: [\n      'The textfield feature is in beta. There are more functionalities to be added like resizing, selecting fonts, changing font size etc which are in development.',\n      'These functionalities should be available in the next release',\n    ],\n  },\n];\n","import React, { useState } from 'react';\nimport { Modal, Accordion, Icon, AccordionTitleProps } from 'semantic-ui-react';\nimport { helpContent } from '../../entities/helpContent';\ninterface Props {\n  open: boolean;\n  dismiss: () => void;\n}\n\nexport const HelpModal: React.FC<Props> = ({ open, dismiss }) => {\n  const [activeIndex, setActiveIndex] = useState(-1);\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLDivElement>,\n    data: AccordionTitleProps\n  ) => {\n    const { index } = data;\n    const newIndex = activeIndex === index ? -1 : (index as number);\n    setActiveIndex(newIndex);\n  };\n\n  return (\n    <>\n      <Modal open={open} onClose={dismiss} size=\"small\" dimmer=\"inverted\">\n        <Modal.Header>\n          <Icon name=\"question\" />\n          FAQ\n        </Modal.Header>\n        <Modal.Content scrolling>\n          <Accordion fluid styled>\n            {helpContent.map((content, index) => (\n              <React.Fragment key={index}>\n                <Accordion.Title\n                  active={activeIndex === index}\n                  index={index}\n                  onClick={handleClick}\n                >\n                  <Icon name=\"dropdown\" />\n                  {content.title}\n                </Accordion.Title>\n                <Accordion.Content active={activeIndex === index}>\n                  {content.content.map((text, index) => (\n                    <p key={index}>{text}</p>\n                  ))}\n                </Accordion.Content>\n              </React.Fragment>\n            ))}\n          </Accordion>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n","type ScriptName =\n  | 'pdfjsLib'\n  | 'PDFLib'\n  | 'download'\n  | 'makeTextPDF'\n  | 'w3Color';\n\ninterface Script {\n  name: ScriptName;\n  src: string;\n}\n\nconst scripts: Script[] = [\n  {\n    name: 'pdfjsLib',\n    src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n  },\n  {\n    name: 'PDFLib',\n    src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n  },\n  {\n    name: 'download',\n    src: 'https://unpkg.com/downloadjs@1.4.7',\n  },\n  {\n    name: 'makeTextPDF',\n    src:\n      'https://cdn.jsdelivr.net/gh/snamoah/react-pdf-editor/public/makeTextPDF.js',\n  },\n  { name: 'w3Color', src: 'https://www.w3schools.com/lib/w3color.js' },\n];\n\nconst assets: Record<string, any> = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n\nexport const prepareAssets = (): void => {\n  // prepare scripts\n  scripts.forEach(({ name, src }) => {\n    assets[name] = new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => {\n        resolve(window[name as any]);\n        console.log(`${name} is loaded.`);\n      };\n      script.onerror = () =>\n        reject(`The script ${name} didn't load correctly.`);\n      document.body.appendChild(script);\n    });\n  });\n};\n\ninterface Font {\n  src?: string;\n  correction?: (size: number, lineHeight: number) => number;\n  [key: string]: any;\n}\n\ninterface FontsType {\n  [key: string]: Font;\n}\n\nconst fonts: FontsType = {\n  Courier: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 6;\n    },\n  },\n  Helvetica: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 10;\n    },\n  },\n  'Times-Roman': {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 7;\n    },\n  },\n};\n\n// Available fonts\nexport const Fonts = {\n  ...fonts,\n  標楷體: {\n    src: '/CK.ttf', // 9.9 MB\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2;\n    },\n  },\n};\n\nexport const fetchFont = (name: string) => {\n  if (fonts[name as any]) return fonts[name as any];\n\n  const font = Fonts[name as keyof typeof Fonts];\n  if (!font) throw new Error(`Font '${name}' not exists.`);\n\n  fonts[name] = fetch(font.src)\n    .then((r) => r.arrayBuffer())\n    .then((fontBuffer) => {\n      const fontFace = new (window as any).FontFace(name, fontBuffer);\n      fontFace.display = 'swap';\n      fontFace.load().then(() => (document as any).fonts.add(fontFace));\n      return {\n        ...font,\n        buffer: fontBuffer,\n      };\n    });\n};\n","import { getAsset } from './prepareAssets';\n\nexport const readAsArrayBuffer = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nexport const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    if (src instanceof Blob) {\n      const url = window.URL.createObjectURL(src);\n      img.src = url;\n    } else {\n      img.src = src;\n    }\n  });\n};\n\nexport const readAsDataURL = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n};\n\ninterface PDF {\n  numPages: number;\n  getPage: (index: number) => Promise<any>;\n}\nexport const readAsPDF = async (file: File): Promise<PDF> => {\n  const pdfjsLib = await getAsset('pdfjsLib');\n  // Safari possibly get webkitblobresource error 1 when using origin file blob\n  const blob = new Blob([file]);\n  const url = window.URL.createObjectURL(blob);\n  return pdfjsLib.getDocument(url).promise;\n};\n","interface Position {\n  top: number;\n  left: number;\n}\n\nexport function ggID(): () => number {\n  let id = 0;\n  return function genId() {\n    return id++;\n  };\n}\n\nexport const getMovePosition = (\n  x: number,\n  y: number,\n  dragX: number,\n  dragY: number,\n  width: number,\n  height: number,\n  pageWidth: number,\n  pageHeight: number\n): Position => {\n  const newPositionTop = y + dragY;\n  const newPositionLeft = x + dragX;\n  const newPositionRight = newPositionLeft + width;\n  const newPositionBottom = newPositionTop + height;\n\n  const top =\n    newPositionTop < 0\n      ? 0\n      : newPositionBottom > pageHeight\n      ? pageHeight - height\n      : newPositionTop;\n  const left =\n    newPositionLeft < 0\n      ? 0\n      : newPositionRight > pageWidth\n      ? pageWidth - width\n      : newPositionLeft;\n\n  return {\n    top,\n    left,\n  };\n};\n\nexport const normalize = (value: number): number =>\n  parseFloat((value / 255).toFixed(1));\n","import { readAsArrayBuffer } from './asyncReader';\nimport { getAsset } from './prepareAssets';\nimport { normalize } from './helpers';\n\nexport async function save(\n  pdfFile: File,\n  objects: Attachments[],\n  name: string\n) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  let pdfDoc: {\n    getPages: () => any[];\n    embedFont: (arg0: unknown) => any;\n    embedJpg: (arg0: unknown) => any;\n    embedPng: (arg0: unknown) => any;\n    embedPdf: (arg0: any) => [any] | PromiseLike<[any]>;\n    save: () => any;\n  };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const embedProcesses = pageObjects.map(async (object: Attachment) => {\n      if (object.type === 'image') {\n        const { file, x, y, width, height } = object as ImageAttachment;\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          throw e;\n        }\n      } else if (object.type === 'text') {\n        const {\n          x,\n          y,\n          text,\n          lineHeight,\n          size,\n          fontFamily,\n          width,\n        } = object as TextAttachment;\n        const pdfFont = await pdfDoc.embedFont(fontFamily);\n        return () =>\n          page.drawText(text, {\n            maxWidth: width,\n            font: pdfFont,\n            size,\n            lineHeight,\n            x,\n            y: pageHeight - size! - y,\n          });\n      } else if (object.type === 'drawing') {\n        const {\n          x,\n          y,\n          path,\n          scale,\n          stroke,\n          strokeWidth,\n        } = object as DrawingAttachment;\n        const {\n          pushGraphicsState,\n          setLineCap,\n          popGraphicsState,\n          setLineJoin,\n          LineCapStyle,\n          LineJoinStyle,\n          rgb,\n        } = PDFLib;\n        return () => {\n          page.pushOperators(\n            pushGraphicsState(),\n            setLineCap(LineCapStyle.Round),\n            setLineJoin(LineJoinStyle.Round)\n          );\n\n          const color = window.w3color(stroke!).toRgb();\n\n          page.drawSvgPath(path, {\n            borderColor: rgb(\n              normalize(color.r),\n              normalize(color.g),\n              normalize(color.b)\n            ),\n            borderWidth: strokeWidth,\n            scale,\n            x,\n            y: pageHeight - y,\n          });\n          page.pushOperators(popGraphicsState());\n        };\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}\n","import { useState, useCallback } from 'react';\nimport { save } from '../utils/pdf';\n\nexport interface Pdf {\n  name: string;\n  file: File;\n  pages: Promise<any>[];\n}\n\nexport const usePdf = () => {\n  const [name, setName] = useState('');\n  const [pageIndex, setPageIndex] = useState(-1);\n  const [dimensions, setDimensions] = useState<Dimensions>();\n  const [file, setFile] = useState<File>();\n  const [pages, setPages] = useState<any>([]);\n  const [isMultiPage, setIsMultiPage] = useState(false);\n  const [isFirstPage, setIsFirstPage] = useState(false);\n  const [isLastPage, setIsLastPage] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const currentPage = pages[pageIndex];\n\n  const setDimensionsHandler = useCallback(setDimensions, [setDimensions]);\n\n  const nextPage = () => {\n    const newPageIndex = pageIndex + 1;\n    setPageIndex(pageIndex + 1);\n    setIsFirstPage(newPageIndex === 0);\n    setIsLastPage(newPageIndex === pages.length - 1);\n  };\n\n  const previousPage = () => {\n    const newPageIndex = pageIndex - 1;\n    setPageIndex(newPageIndex);\n    setIsFirstPage(newPageIndex === 0);\n    setIsLastPage(newPageIndex === pages.length - 1);\n  };\n\n  const initialize = ({ name, file, pages: _pages }: Pdf) => {\n    const multi = _pages.length > 1;\n    setName(name);\n    setFile(file);\n    setPages(_pages);\n    setPageIndex(0);\n    setIsMultiPage(multi);\n    setIsFirstPage(true);\n    setIsLastPage(_pages.length === 1);\n  };\n\n  const savePdf = async (attachments: Attachments[]) => {\n    if (isSaving || !file) return;\n\n    setIsSaving(true);\n\n    try {\n      await save(file, attachments, name);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return {\n    currentPage,\n    dimensions,\n    setDimensions: setDimensionsHandler,\n    name,\n    setName,\n    pageIndex,\n    setPageIndex,\n    file,\n    setFile,\n    nextPage,\n    pages,\n    savePdf,\n    initialize,\n    isMultiPage,\n    previousPage,\n    isFirstPage,\n    isLastPage,\n    isSaving,\n  };\n};\n","import { useReducer, useCallback } from 'react';\n\nenum ActionType {\n  RESET = 'RESET',\n  ADD_ATTACHMENT = 'ADD_ATTACHMENT',\n  REMOVE_ATTACHMENT = 'REMOVE_ATTACHMENT',\n  UPDATE_ATTACHMENT = 'UPDATE_ATTACHMENT',\n  UPDATE_PAGE_INDEX = 'UPDATE_PAGE_INDEX',\n}\n\ninterface State {\n  pageIndex: number;\n  allPageAttachments: Attachments[];\n  pageAttachments: Attachments;\n}\n\ntype Action =\n  | { type: ActionType.UPDATE_PAGE_INDEX; pageIndex: number }\n  | { type: ActionType.ADD_ATTACHMENT; attachment: Attachment }\n  | { type: ActionType.REMOVE_ATTACHMENT; attachmentIndex: number }\n  | {\n      type: ActionType.UPDATE_ATTACHMENT;\n      attachmentIndex: number;\n      attachment: Partial<Attachment>;\n    }\n  | { type: ActionType.RESET; numberOfPages: number };\n\nconst initialState: State = {\n  pageIndex: -1,\n  allPageAttachments: [],\n  pageAttachments: [],\n};\n\nconst reducer = (state: State, action: Action) => {\n  const { pageIndex, allPageAttachments, pageAttachments } = state;\n\n  switch (action.type) {\n    case ActionType.ADD_ATTACHMENT: {\n      const newAllPageAttachmentsAdd = allPageAttachments.map(\n        (attachments, index) =>\n          pageIndex === index\n            ? [...attachments, action.attachment]\n            : attachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsAdd,\n        pageAttachments: newAllPageAttachmentsAdd[pageIndex],\n      };\n    }\n    case ActionType.REMOVE_ATTACHMENT: {\n      const newAllPageAttachmentsRemove = allPageAttachments.map(\n        (otherPageAttachments, index) =>\n          pageIndex === index\n            ? pageAttachments.filter(\n                (_, _attachmentIndex) =>\n                  _attachmentIndex !== action.attachmentIndex\n              )\n            : otherPageAttachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsRemove,\n        pageAttachments: newAllPageAttachmentsRemove[pageIndex],\n      };\n    }\n    case ActionType.UPDATE_ATTACHMENT: {\n      if (pageIndex === -1) {\n        return state;\n      }\n\n      const newAllPageAttachmentsUpdate = allPageAttachments.map(\n        (otherPageAttachments, index) =>\n          pageIndex === index\n            ? pageAttachments.map((oldAttachment, _attachmentIndex) =>\n                _attachmentIndex === action.attachmentIndex\n                  ? { ...oldAttachment, ...action.attachment }\n                  : oldAttachment\n              )\n            : otherPageAttachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsUpdate,\n        pageAttachments: newAllPageAttachmentsUpdate[pageIndex],\n      };\n    }\n    case ActionType.UPDATE_PAGE_INDEX: {\n      return {\n        ...state,\n        pageIndex: action.pageIndex,\n        pageAttachments: allPageAttachments[action.pageIndex],\n      };\n    }\n    case ActionType.RESET: {\n      return {\n        pageIndex: 0,\n        pageAttachments: [],\n        allPageAttachments: Array(action.numberOfPages).fill([]),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const useAttachments = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { allPageAttachments, pageAttachments } = state;\n\n  const add = (newAttachment: Attachment) =>\n    dispatch({ type: ActionType.ADD_ATTACHMENT, attachment: newAttachment });\n\n  const remove = (attachmentIndex: number) =>\n    dispatch({ type: ActionType.REMOVE_ATTACHMENT, attachmentIndex });\n\n  const update = (attachmentIndex: number, attachment: Partial<Attachment>) =>\n    dispatch({\n      type: ActionType.UPDATE_ATTACHMENT,\n      attachmentIndex,\n      attachment,\n    });\n\n  const reset = (numberOfPages: number) =>\n    dispatch({ type: ActionType.RESET, numberOfPages });\n\n  const setPageIndex = useCallback(\n    (index: number) =>\n      dispatch({ type: ActionType.UPDATE_PAGE_INDEX, pageIndex: index }),\n    [dispatch]\n  );\n\n  return {\n    add,\n    reset,\n    remove,\n    update,\n    setPageIndex,\n    pageAttachments,\n    allPageAttachments,\n  };\n};\n","import React, { useState, createRef } from 'react';\nimport { readAsPDF, readAsDataURL, readAsImage } from '../utils/asyncReader';\nimport { ggID } from '../utils/helpers';\nimport { Pdf } from './usePdf';\nimport { AttachmentTypes } from '../entities';\n\ntype ActionEvent<T> = React.TouchEvent<T> | React.MouseEvent<T>;\n\nexport enum UploadTypes {\n  PDF = 'pdf',\n  IMAGE = 'image',\n}\n\nconst handlers = {\n  pdf: async (file: File) => {\n    try {\n      const pdf = await readAsPDF(file);\n      return {\n        file,\n        name: file.name,\n        pages: Array(pdf.numPages)\n          .fill(0)\n          .map((_, index) => pdf.getPage(index + 1)),\n      } as Pdf;\n    } catch (error) {\n      console.log('Failed to load pdf', error);\n      throw new Error('Failed to load PDF');\n    }\n  },\n  image: async (file: File) => {\n    try {\n      const url = await readAsDataURL(file);\n      const img = await readAsImage(url as string);\n      const id = ggID();\n      const { width, height } = img;\n\n      const imageAttachemnt: ImageAttachment = {\n        id,\n        type: AttachmentTypes.IMAGE,\n        width,\n        height,\n        x: 0,\n        y: 0,\n        img,\n        file,\n      };\n      return imageAttachemnt;\n    } catch (error) {\n      console.log('Failed to load image', error);\n      throw new Error('Failed to load image');\n    }\n  },\n};\n\n/**\n * @function useUploader\n *\n * @description This hook handles pdf and image uploads\n *\n * @\n * @param use UploadTypes\n */\nexport const useUploader = ({\n  use,\n  afterUploadPdf,\n  afterUploadAttachment,\n}: {\n  use: UploadTypes;\n  afterUploadPdf?: (upload: Pdf) => void;\n  afterUploadAttachment?: (upload: Attachment) => void;\n}) => {\n  const [isUploading, setIsUploading] = useState(false);\n  const inputRef = createRef<HTMLInputElement>();\n\n  const onClick = (event: ActionEvent<HTMLInputElement>) => {\n    event.currentTarget.value = '';\n  };\n\n  const handleClick = () => {\n    const input = inputRef.current;\n\n    if (input) {\n      setIsUploading(true);\n      input.click();\n    }\n  };\n\n  const upload = async (\n    event: React.ChangeEvent<HTMLInputElement> & { dataTransfer?: DataTransfer }\n  ) => {\n    if (!isUploading) {\n      return;\n    }\n\n    const files: FileList | undefined =\n      event.currentTarget.files ||\n      (event.dataTransfer && event.dataTransfer.files);\n    if (!files) {\n      setIsUploading(false);\n      return;\n    }\n\n    const file = files[0];\n\n    const result = await handlers[use](file);\n\n    if (use === UploadTypes.PDF && afterUploadPdf) {\n      afterUploadPdf(result as Pdf);\n    }\n\n    if (use === UploadTypes.IMAGE && afterUploadAttachment) {\n      console.log('===> was this also called');\n      afterUploadAttachment(result as ImageAttachment);\n    }\n    setIsUploading(false);\n    return;\n  };\n\n  return {\n    upload,\n    onClick,\n    inputRef,\n    isUploading,\n    handleClick,\n  };\n};\n","import React from 'react';\nimport { Segment, Header, Icon, Button } from 'semantic-ui-react';\n\ninterface Props {\n  loading: boolean;\n  uploadPdf: () => void;\n}\nexport const Empty: React.FC<Props> = ({ loading, uploadPdf }) => (\n  <Segment placeholder loading={loading} style={{ height: '80vh' }}>\n    <Header icon>\n      <Icon name=\"file pdf outline\" />\n      Upload your PDF to start editing!\n    </Header>\n    <Button primary onClick={uploadPdf}>\n      Load PDF\n    </Button>\n  </Segment>\n);\n","import React, { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  page: any;\n  dimensions?: Dimensions;\n  updateDimensions: ({ width, height }: Dimensions) => void;\n}\n\nexport const Page = ({ page, dimensions, updateDimensions }: Props) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [width, setWidth] = useState((dimensions && dimensions.width) || 0);\n  const [height, setHeight] = useState((dimensions && dimensions.height) || 0);\n\n  useEffect(() => {\n    const renderPage = async (p: Promise<any>) => {\n      const _page = await p;\n      if (_page) {\n        const context = canvasRef.current?.getContext('2d');\n        const viewport = _page.getViewport({ scale: 1 });\n\n        setWidth(viewport.width);\n        setHeight(viewport.height);\n\n        if (context) {\n          await _page.render({\n            canvasContext: canvasRef.current?.getContext('2d'),\n            viewport,\n          }).promise;\n\n          const newDimensions = {\n            width: viewport.width,\n            height: viewport.height,\n          };\n\n          updateDimensions(newDimensions as Dimensions);\n        }\n      }\n    };\n\n    renderPage(page);\n  }, [page, updateDimensions]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={width} height={height} />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    position: relative\n`;\n\n","import React from 'react';\nimport { Header, Button } from 'semantic-ui-react';\n\ninterface Props {\n  onConfirm: () => void;\n  onDismiss: () => void;\n  title: string;\n}\n\nexport const ConfirmContent: React.FC<Props> = ({\n  title,\n  onConfirm,\n  onDismiss,\n}) => (\n  <div>\n    <Header as=\"h4\" inverted>\n      {title}\n    </Header>\n\n    <Button onClick={onDismiss}>No</Button>\n    <Button negative onClick={onConfirm}>\n      Yes\n    </Button>\n  </div>\n);\n","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\nconst ADJUSTERS_DIMENSIONS = 20;\n\ninterface Props {\n  dimmerActive: boolean;\n  cancelDelete: () => void;\n  deleteImage: () => void;\n  width: number;\n  height: number;\n  canvasRef: RefObject<HTMLCanvasElement>;\n  positionTop: number;\n  positionLeft: number;\n  onClick: DragEventListener<HTMLDivElement>;\n  handleMouseOut: DragEventListener<HTMLDivElement>;\n  handleMouseDown: DragEventListener<HTMLDivElement>;\n  handleMouseMove: DragEventListener<HTMLDivElement>;\n  handleMouseUp: DragEventListener<HTMLDivElement>;\n  handleImageScale: DragEventListener<HTMLDivElement>;\n}\n\nexport const Image: React.FC<Props> = ({\n  canvasRef,\n  positionTop,\n  positionLeft,\n  width,\n  height,\n  handleMouseOut,\n  handleMouseDown,\n  handleMouseMove,\n  handleMouseUp,\n  handleImageScale,\n  dimmerActive,\n  cancelDelete,\n  deleteImage,\n  onClick,\n}) => {\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onDoubleClick={onClick}\n      style={{\n        position: 'absolute',\n        top: positionTop,\n        left: positionLeft,\n        borderStyle: 'dashed',\n        borderWidth: 1,\n        borderColor: 'grey',\n        width: width + 2,\n        height: height + 2,\n        cursor: 'move',\n      }}\n    >\n      <Dimmer.Dimmable as={Div} size=\"medium\" dimmed={dimmerActive}>\n        <canvas\n          ref={canvasRef}\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        />\n        <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n          <ConfirmContent\n            title=\"Delete?\"\n            onConfirm={deleteImage}\n            onDismiss={cancelDelete}\n          />\n        </Dimmer>\n      </Dimmer.Dimmable>\n      <div\n        data-direction=\"top-left\"\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        onMouseMove={handleImageScale}\n        style={{\n          position: 'absolute',\n          cursor: 'nwse-resize',\n          top: -5,\n          left: -5,\n          width: ADJUSTERS_DIMENSIONS,\n          height: ADJUSTERS_DIMENSIONS,\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Image as ImageComponent } from '../components/Image';\n\nconst IMAGE_MAX_SIZE = 300;\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeImage: () => void;\n  updateImageAttachment: (imageObject: Partial<ImageAttachment>) => void;\n}\n\nexport const Image = ({\n  x,\n  y,\n  img,\n  width,\n  height,\n  pageWidth,\n  removeImage,\n  pageHeight,\n  updateImageAttachment,\n}: ImageAttachment & Props) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [canvasWidth, setCanvasWidth] = useState(width);\n  const [canvasHeight, setCanvasHeight] = useState(height);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [positionTop, setPositionTop] = useState(y);\n  const [positionLeft, setPositionLeft] = useState(x);\n  const [direction, setDirection] = useState<string[]>([]);\n  const [operation, setOperation] = useState<DragActions>(\n    DragActions.NO_MOVEMENT\n  );\n\n  const [dimmerActive, setDimmerActive] = useState(false);\n\n  const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(true);\n    setOperation(DragActions.MOVE);\n    const directions = event.currentTarget.dataset.direction;\n    if (directions) {\n      setDirection(directions.split('-'));\n      setOperation(DragActions.SCALE);\n    }\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        canvasWidth,\n        canvasHeight,\n        pageWidth,\n        pageHeight\n      );\n\n      setPositionTop(top);\n      setPositionLeft(left);\n    }\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(false);\n\n    if (operation === DragActions.MOVE) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        canvasWidth,\n        canvasHeight,\n        pageWidth,\n        pageHeight\n      );\n\n      updateImageAttachment({\n        x: left,\n        y: top,\n      });\n    }\n\n    if (operation === DragActions.SCALE) {\n      updateImageAttachment({\n        x: positionLeft,\n        y: positionTop,\n      });\n    }\n\n    setOperation(DragActions.NO_MOVEMENT);\n  };\n\n  const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (operation === DragActions.MOVE) {\n      handleMouseUp(event);\n    }\n  };\n\n  const handleImageScale = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      if (direction.includes('left')) {\n        setPositionLeft(positionLeft + event.movementX);\n        setCanvasWidth(canvasWidth - event.movementX);\n      }\n\n      if (direction.includes('top')) {\n        setPositionTop(positionTop + event.movementY);\n        setCanvasHeight(canvasHeight - event.movementY);\n      }\n\n      if (direction.includes('right')) {\n        setCanvasWidth(canvasWidth + event.movementX);\n      }\n\n      if (direction.includes('bottom')) {\n        setCanvasHeight(canvasHeight + event.movementY);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const renderImage = (img: HTMLImageElement) => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const context = canvas.getContext('2d');\n      if (!context) return;\n\n      let scale = 1;\n      if (canvasWidth > IMAGE_MAX_SIZE) {\n        scale = IMAGE_MAX_SIZE / canvasWidth;\n      }\n\n      if (canvasHeight > IMAGE_MAX_SIZE) {\n        scale = Math.min(scale, IMAGE_MAX_SIZE / canvasHeight);\n      }\n\n      const newCanvasWidth = canvasWidth * scale;\n      const newCanvasHeight = canvasHeight * scale;\n\n      setCanvasWidth(newCanvasWidth);\n      setCanvasHeight(newCanvasHeight);\n\n      canvas.width = newCanvasWidth;\n      canvas.height = newCanvasHeight;\n\n      context.drawImage(img, 0, 0, newCanvasWidth, newCanvasHeight);\n      canvas.toBlob((blob) => {\n        updateImageAttachment({\n          file: blob as File,\n          width: newCanvasWidth,\n          height: newCanvasHeight,\n        });\n      });\n    };\n\n    renderImage(img);\n  }, [img, canvasWidth, canvasHeight, updateImageAttachment]);\n\n  const handleClick = () => setDimmerActive(true);\n  const onCancelDelete = () => setDimmerActive(false);\n\n  const deleteImage = () => {\n    onCancelDelete();\n    removeImage();\n  };\n\n  return (\n    <ImageComponent\n      onClick={handleClick}\n      dimmerActive={dimmerActive}\n      cancelDelete={onCancelDelete}\n      deleteImage={deleteImage}\n      positionLeft={positionLeft}\n      positionTop={positionTop}\n      canvasRef={canvasRef}\n      width={canvasWidth}\n      height={canvasHeight}\n      handleImageScale={handleImageScale}\n      handleMouseDown={handleMouseDown}\n      handleMouseUp={handleMouseUp}\n      handleMouseMove={handleMouseMove}\n      handleMouseOut={handleMouseOut}\n    />\n  );\n};\n","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\ninterface Props {\n  path?: string;\n  stroke?: string;\n  width: number;\n  height: number;\n  strokeWidth?: number;\n  positionTop: number;\n  positionLeft: number;\n  dimmerActive: boolean;\n  cancelDelete: () => void;\n  deleteDrawing: () => void;\n  onClick: () => void;\n  svgRef: RefObject<SVGSVGElement>;\n  handleMouseDown: DragEventListener<HTMLDivElement>;\n  handleMouseUp: DragEventListener<HTMLDivElement>;\n  handleMouseMove: DragEventListener<HTMLDivElement>;\n  handleMouseOut: DragEventListener<HTMLDivElement>;\n}\nexport const Drawing: React.FC<Props> = ({\n  dimmerActive,\n  cancelDelete,\n  deleteDrawing,\n  positionTop,\n  positionLeft,\n  width,\n  height,\n  svgRef,\n  path,\n  stroke,\n  strokeWidth,\n  handleMouseDown,\n  handleMouseMove,\n  handleMouseOut,\n  handleMouseUp,\n  onClick,\n}) => {\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onDoubleClick={onClick}\n      style={{\n        position: 'absolute',\n        top: positionTop,\n        left: positionLeft,\n        width,\n        height,\n        cursor: 'move',\n      }}\n    >\n      <Dimmer.Dimmable as={Div} dimmed={dimmerActive}>\n        <svg ref={svgRef}>\n          <path\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            stroke={stroke}\n            fill=\"none\"\n            d={path}\n          />\n        </svg>\n        <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n          <ConfirmContent\n            title=\"Delete?\"\n            onConfirm={deleteDrawing}\n            onDismiss={cancelDelete}\n          />\n        </Dimmer>\n      </Dimmer.Dimmable>\n    </div>\n  );\n};\n","import React, { createRef, useEffect, useState } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Drawing as DrawingComponent } from '../components/Drawing';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeDrawing: () => void;\n  updateDrawingAttachment: (drawingObject: Partial<DrawingAttachment>) => void;\n}\n\nexport const Drawing = ({\n  x,\n  y,\n  width,\n  height,\n  stroke,\n  strokeWidth,\n  path,\n  pageWidth,\n  pageHeight,\n  removeDrawing,\n  updateDrawingAttachment,\n}: DrawingAttachment & Props) => {\n  const svgRef = createRef<SVGSVGElement>();\n  const [mouseDown, setMouseDown] = useState(false);\n  const [positionTop, setPositionTop] = useState(y);\n  const [positionLeft, setPositionLeft] = useState(x);\n  const [operation, setOperation] = useState<DragActions>(\n    DragActions.NO_MOVEMENT\n  );\n  const [dimmerActive, setDimmerActive] = useState(false);\n\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (svg) {\n      svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    }\n  }, [svgRef, width, height]);\n\n  const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    setOperation(DragActions.MOVE);\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      setPositionTop(top);\n      setPositionLeft(left);\n    }\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(false);\n\n    if (operation === DragActions.MOVE) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      updateDrawingAttachment({\n        x: left,\n        y: top,\n      });\n    }\n\n    if (operation === DragActions.SCALE) {\n      updateDrawingAttachment({\n        x: positionLeft,\n        y: positionTop,\n      });\n    }\n\n    setOperation(DragActions.NO_MOVEMENT);\n  };\n\n  const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (operation === DragActions.MOVE) {\n      handleMouseUp(event);\n    }\n  };\n\n  const handleClick = () => setDimmerActive(true);\n  const cancelDelete = () => setDimmerActive(false);\n\n  const confirmDelete = () => {\n    cancelDelete();\n    removeDrawing();\n  };\n  return (\n    <DrawingComponent\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      path={path}\n      width={width}\n      svgRef={svgRef}\n      height={height}\n      onClick={handleClick}\n      cancelDelete={cancelDelete}\n      dimmerActive={dimmerActive}\n      deleteDrawing={confirmDelete}\n      handleMouseDown={handleMousedown}\n      handleMouseMove={handleMouseMove}\n      handleMouseOut={handleMouseOut}\n      handleMouseUp={handleMouseUp}\n      positionLeft={positionLeft}\n      positionTop={positionTop}\n    />\n  );\n};\n","import React, { RefObject } from 'react';\nimport { TextMode } from '../entities';\n\ninterface Props {\n  inputRef: RefObject<HTMLInputElement>;\n  text?: string;\n  mode: string;\n  width: number;\n  size?: number;\n  height: number;\n  lineHeight?: number;\n  fontFamily?: string;\n  positionTop: number;\n  positionLeft: number;\n  toggleEditMode: () => void;\n  handleMouseDown: DragEventListener<HTMLDivElement>;\n  handleMouseUp: DragEventListener<HTMLDivElement>;\n  handleMouseMove: DragEventListener<HTMLDivElement>;\n  handleMouseOut: DragEventListener<HTMLDivElement>;\n  onChangeText: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Text: React.FC<Props> = ({\n  text,\n  width,\n  height,\n  inputRef,\n  mode,\n  size,\n  fontFamily,\n  positionTop,\n  positionLeft,\n  onChangeText,\n  toggleEditMode,\n  handleMouseDown,\n  handleMouseMove,\n  handleMouseOut,\n  handleMouseUp,\n  lineHeight,\n}) => {\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onDoubleClick={toggleEditMode}\n      style={{\n        width,\n        border: 1,\n        height,\n        fontFamily,\n        fontSize: size,\n        lineHeight,\n        cursor: mode === TextMode.COMMAND ? 'move' : 'default',\n        top: positionTop,\n        left: positionLeft,\n        borderColor: 'gray',\n        borderStyle: 'solid',\n        wordWrap: 'break-word',\n        padding: 0,\n        position: 'absolute',\n      }}\n    >\n      <input\n        type=\"text\"\n        ref={inputRef}\n        onChange={onChangeText}\n        readOnly={mode === TextMode.COMMAND}\n        style={{\n          width: '100%',\n          borderStyle: 'none',\n          borderWidth: 0,\n          fontFamily,\n          fontSize: size,\n          outline: 'none',\n          padding: 0,\n          boxSizing: 'border-box',\n          lineHeight,\n          height,\n          margin: 0,\n          backgroundColor: 'transparent',\n          cursor: mode === TextMode.COMMAND ? 'move' : 'text',\n        }}\n        value={text}\n      />\n    </div>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { Text as Component } from '../components/Text';\nimport { getMovePosition } from '../utils/helpers';\nimport { DragActions, TextMode } from '../entities';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  updateTextAttachment: (textObject: Partial<TextAttachment>) => void;\n}\n\nexport const Text = ({\n  x,\n  y,\n  text,\n  width,\n  height,\n  lineHeight,\n  size,\n  fontFamily,\n  pageHeight,\n  pageWidth,\n  updateTextAttachment,\n}: TextAttachment & Props) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [content, setContent] = useState(text || '');\n  const [mouseDown, setMouseDown] = useState(false);\n  const [positionTop, setPositionTop] = useState(y);\n  const [positionLeft, setPositionLeft] = useState(x);\n  const [operation, setOperation] = useState<DragActions>(\n    DragActions.NO_MOVEMENT\n  );\n  const [textMode, setTextMode] = useState<TextMode>(TextMode.COMMAND);\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      setPositionTop(top);\n      setPositionLeft(left);\n    }\n  };\n\n  const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (textMode !== TextMode.COMMAND) {\n      return;\n    }\n\n    setMouseDown(true);\n    setOperation(DragActions.MOVE);\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (textMode !== TextMode.COMMAND) {\n      return;\n    }\n\n    setMouseDown(false);\n\n    if (operation === DragActions.MOVE) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      updateTextAttachment({\n        x: left,\n        y: top,\n      });\n    }\n\n    // if (operation === DragActions.SCALE) {\n    //     updateTextObject({\n    //         x: positionLeft,\n    //         y: positionTop,\n    //     });\n\n    // }\n\n    setOperation(DragActions.NO_MOVEMENT);\n  };\n\n  const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (operation === DragActions.MOVE) {\n      handleMouseUp(event);\n    }\n\n    if (textMode === TextMode.INSERT) {\n      setTextMode(TextMode.COMMAND);\n      prepareTextAndUpdate();\n    }\n  };\n\n  const prepareTextAndUpdate = () => {\n    // Deselect any selection when returning to command mode\n    document.getSelection()?.removeAllRanges();\n\n    const lines = [content];\n    updateTextAttachment({\n      lines,\n      text: content,\n    });\n  };\n\n  const toggleEditMode = () => {\n    const input = inputRef.current;\n    const mode =\n      textMode === TextMode.COMMAND ? TextMode.INSERT : TextMode.COMMAND;\n\n    setTextMode(mode);\n\n    if (input && mode === TextMode.INSERT) {\n      input.focus();\n      input.select();\n    } else {\n      prepareTextAndUpdate();\n    }\n  };\n\n  const onChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    setContent(value);\n  };\n\n  return (\n    <Component\n      text={content}\n      width={width}\n      height={height}\n      mode={textMode}\n      size={size}\n      lineHeight={lineHeight}\n      inputRef={inputRef}\n      fontFamily={fontFamily}\n      positionTop={positionTop}\n      onChangeText={onChangeText}\n      positionLeft={positionLeft}\n      handleMouseUp={handleMouseUp}\n      toggleEditMode={toggleEditMode}\n      handleMouseOut={handleMouseOut}\n      handleMouseDown={handleMousedown}\n      handleMouseMove={handleMouseMove}\n    />\n  );\n};\n","import React from 'react';\nimport { AttachmentTypes } from '../entities';\nimport { Image } from '../containers/Image';\nimport { Drawing } from '../containers/Drawing';\nimport { Text } from '../containers/Text';\n\ninterface Props {\n  attachments: Attachment[];\n  pdfName: string;\n  pageDimensions: Dimensions;\n  removeAttachment: (index: number) => void;\n  updateAttachment: (index: number, attachment: Partial<Attachment>) => void;\n}\n\nexport const Attachments: React.FC<Props> = ({\n  attachments,\n  pdfName,\n  pageDimensions,\n  removeAttachment,\n  updateAttachment,\n}) => {\n  const handleAttachmentUpdate = (index: number) => (\n    attachment: Partial<Attachment>\n  ) => updateAttachment(index, attachment);\n\n  return attachments ? (\n    <>\n      {attachments.length\n        ? attachments.map((attachment, index) => {\n            const key = `${pdfName}-${index}`;\n\n            if (attachment.type === AttachmentTypes.IMAGE) {\n              return (\n                <Image\n                  key={key}\n                  pageWidth={pageDimensions.width}\n                  pageHeight={pageDimensions.height}\n                  removeImage={() => removeAttachment(index)}\n                  updateImageAttachment={handleAttachmentUpdate(index)}\n                  {...(attachment as ImageAttachment)}\n                />\n              );\n            }\n\n            if (attachment.type === AttachmentTypes.DRAWING) {\n              return (\n                <Drawing\n                  key={key}\n                  pageWidth={pageDimensions.width}\n                  pageHeight={pageDimensions.height}\n                  removeDrawing={() => removeAttachment(index)}\n                  updateDrawingAttachment={handleAttachmentUpdate(index)}\n                  {...(attachment as DrawingAttachment)}\n                />\n              );\n            }\n\n            if (attachment.type === AttachmentTypes.TEXT) {\n              return (\n                <Text\n                  key={key}\n                  pageWidth={pageDimensions.width}\n                  pageHeight={pageDimensions.height}\n                  updateTextAttachment={handleAttachmentUpdate(index)}\n                  {...(attachment as TextAttachment)}\n                />\n              );\n            }\n            return null;\n          })\n        : null}\n    </>\n  ) : null;\n};\n","import React, { useState, useLayoutEffect } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Container, Grid, Button, Segment } from 'semantic-ui-react';\nimport { MenuBar } from './components/MenuBar';\nimport { DrawingModal } from './modals/components/DrawingModal';\nimport { HelpModal } from './modals/components/HelpModal';\nimport { usePdf, Pdf } from './hooks/usePdf';\nimport { AttachmentTypes } from './entities';\nimport { ggID } from './utils/helpers';\nimport { useAttachments } from './hooks/useAttachments';\nimport { useUploader, UploadTypes } from './hooks/useUploader';\nimport { Empty } from './components/Empty';\nimport { Page } from './components/Page';\nimport { Attachments } from './components/Attachments';\n\nconst App: React.FC<{}> = () => {\n    const [helpModalOpen, setHelpModalOpen] = useState(false);\n    const [drawingModalOpen, setDrawingModalOpen] = useState(false);\n    const { file, initialize, pageIndex, isMultiPage, isFirstPage, isLastPage, currentPage, isSaving, savePdf, previousPage, nextPage, setDimensions, name, dimensions } = usePdf();\n    const { add: addAttachment, allPageAttachments, pageAttachments, reset: resetAttachments, update, remove, setPageIndex } = useAttachments();\n    \n    const initializePageAndAttachments = (pdfDetails: Pdf) => {\n      initialize(pdfDetails);\n      const numberOfPages = pdfDetails.pages.length;\n      resetAttachments(numberOfPages);\n    };\n    \n    const { inputRef: pdfInput, handleClick: handlePdfClick, isUploading, onClick, upload: uploadPdf } = useUploader({ \n      use: UploadTypes.PDF,\n      afterUploadPdf: initializePageAndAttachments,\n   });\n    const { inputRef: imageInput, handleClick: handleImageClick, onClick: onImageClick, upload: uploadImage  } = useUploader({ \n      use: UploadTypes.IMAGE,\n      afterUploadAttachment: addAttachment,\n    });\n\n    const addText = () => {\n        const newTextAttachment: TextAttachment = {\n            id: ggID(),\n            type: AttachmentTypes.TEXT,\n            x: 0,\n            y: 0,\n            width: 120,\n            height: 25,\n            size: 16,\n            lineHeight: 1.4,\n            fontFamily: 'Times-Roman',\n            text: 'Enter Text Here',\n        };\n        addAttachment(newTextAttachment);\n    };\n\n    const addDrawing = (drawing?: { width: number, height: number, path: string }) => {\n        if (!drawing) return;\n\n        const newDrawingAttachment: DrawingAttachment = {\n            id: ggID(),\n            type: AttachmentTypes.DRAWING,\n            ...drawing,\n            x: 0,\n            y: 0,\n            scale: 1,\n        }\n        addAttachment(newDrawingAttachment);\n    }\n\n    useLayoutEffect(() => setPageIndex(pageIndex), [pageIndex, setPageIndex]);\n\n    const hiddenInputs = (\n      <>\n        <input\n          ref={pdfInput}\n          type=\"file\"\n          name=\"pdf\"\n          id=\"pdf\"\n          accept=\"application/pdf\"\n          onChange={uploadPdf}\n          onClick={onClick}\n          style={{ display: 'none' }} \n        />\n        <input\n              ref={imageInput}\n              type=\"file\"\n              id=\"image\"\n              name=\"image\"\n              accept=\"image/*\"\n              onClick={onImageClick}\n              style={{ display: 'none' }}\n              onChange={uploadImage} \n        />\n      </>\n    )\n\n    const handleSavePdf = () => savePdf(allPageAttachments);\n\n    return (\n        <Container \n            style={{ margin: 30 }}\n        >\n            { hiddenInputs }\n            <MenuBar\n                openHelp={() => setHelpModalOpen(true)}\n                savePdf={handleSavePdf}\n                addText={addText}\n                addImage={handleImageClick}\n                addDrawing={() => setDrawingModalOpen(true)}\n                savingPdfStatus={isSaving}\n                uploadNewPdf={handlePdfClick}\n                isPdfLoaded={!!file}\n            />\n\n            { !file ? (\n                <Empty\n                    loading={isUploading}\n                    uploadPdf={handlePdfClick}\n                />\n            ) : (\n                <Grid>\n                <Grid.Row>\n                  <Grid.Column width={3} verticalAlign=\"middle\" textAlign=\"left\">\n                    {isMultiPage && !isFirstPage && (\n                      <Button circular icon=\"angle left\" onClick={previousPage} />\n                    )}\n                  </Grid.Column>\n                  <Grid.Column width={10}>\n                      { currentPage && (\n                        <Segment\n                        compact\n                        stacked={isMultiPage && !isLastPage}\n                      >\n                        <div \n                          style={{ position: 'relative' }}\n                        >\n                          <Page\n                            dimensions={dimensions}\n                            updateDimensions={setDimensions}\n                            page={currentPage} \n                          />\n                          { dimensions && (\n                            <Attachments\n                              pdfName={name}\n                              removeAttachment={remove}\n                              updateAttachment={update}\n                              pageDimensions={dimensions}\n                              attachments={pageAttachments}\n                            /> \n                          )}\n                        </div>\n                      </Segment>\n                      )}\n                        \n                  </Grid.Column>\n                  <Grid.Column width={3} verticalAlign=\"middle\" textAlign=\"right\">\n                    {isMultiPage && !isLastPage && (\n                      <Button circular icon=\"angle right\" onClick={nextPage}/>\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            )}\n            <DrawingModal \n                open={drawingModalOpen} \n                dismiss={() => setDrawingModalOpen(false)}\n                confirm={addDrawing}\n            />\n\n            <HelpModal \n                open={helpModalOpen}\n                dismiss={() => setHelpModalOpen(false)}\n            />\n        </Container>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}