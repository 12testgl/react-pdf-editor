{"version":3,"sources":["utils/prepareAssets.ts","utils/asyncReader.ts","utils/helpers.ts","utils/pdf.ts","entities/index.ts","components/PdfPage.tsx","ui/components/Div.ts","components/ConfirmContent.tsx","components/Image.tsx","containers/Image.tsx","components/Text.tsx","containers/Text.tsx","components/Drawing.tsx","containers/Drawing.tsx","entities/helpContent.ts","components/HelpModal.tsx","components/DrawingModal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scripts","name","src","assets","getAsset","scriptName","fonts","Courier","correction","size","lineHeight","Helvetica","readAsArrayBuffer","標楷體","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","window","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","ggID","id","getMovePosition","x","y","dragX","dragY","width","height","pageWidth","pageHeight","newPositionTop","newPositionLeft","top","left","normalize","value","parseFloat","toFixed","save","pdfFile","objects","PDFLib","download","PDFDocument","load","pdfDoc","console","log","pagesProcesses","getPages","map","page","pageIndex","pageObjects","getHeight","embedProcesses","object","type","embedJpg","embedPng","drawImage","text","fontFamily","embedFont","pdfFont","drawText","maxWidth","font","path","scale","stroke","strokeWidth","pushGraphicsState","setLineCap","popGraphicsState","setLineJoin","LineCapStyle","LineJoinStyle","rgb","pushOperators","Round","color","w3color","toRgb","drawSvgPath","borderColor","r","g","b","borderWidth","all","forEach","p","pdfBytes","DragActions","Color","Attachment","TextMode","PdfPage","updateDimensions","canvasRef","useRef","useState","setWidth","innerHeight","setHeight","useEffect","_page","context","current","getContext","viewport","getViewport","render","canvasContext","renderPage","ref","Div","styled","div","ConfirmContent","title","onConfirm","onDismiss","Header","as","inverted","Button","onClick","negative","positionTop","positionLeft","handleMouseOut","handleMouseDown","handleMouseMove","handleMouseUp","handleImageScale","dimmerActive","cancelDelete","deleteImage","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onDoubleClick","style","position","borderStyle","cursor","Dimmer","Dimmable","dimmed","active","onClickOutside","data-direction","payload","removeImage","updateImageObject","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","mouseDown","setMouseDown","setPositionTop","setPositionLeft","direction","setDirection","NO_MOVEMENT","operation","setOperation","setDimmerActive","event","preventDefault","MOVE","movementX","movementY","SCALE","canvas","Math","min","newCanvasWidth","newCanvasHeight","toBlob","renderImage","onCancelDelete","includes","directions","currentTarget","dataset","split","Text","inputRef","mode","onChangeText","toggleEditMode","border","fontSize","COMMAND","wordWrap","padding","onChange","readOnly","outline","boxSizing","margin","backgroundColor","updateTextObject","content","setContent","textMode","setTextMode","prepareTextAndUpdate","document","getSelection","removeAllRanges","lines","input","INSERT","focus","select","Drawing","deleteDrawing","svgRef","strokeLinecap","strokeLinejoin","fill","d","removeDrawing","updateDrawingObject","createRef","svg","setAttribute","helpContent","HelpModal","open","dismiss","activeIndex","setActiveIndex","handleClick","data","index","Modal","onClose","dimmer","Icon","Content","scrolling","Accordion","fluid","Fragment","key","Title","DrawingModal","confirm","drawing","paths","setPaths","setPath","svgX","setSvgX","svgY","setSvgY","Infinity","minX","setMinX","maxX","setMaxX","minY","setMinY","maxY","setMaxY","setStrokeWidth","BLACK","setStroke","strokeDropdownOpen","setStrokeDropdownOpen","getBoundingClientRect","closeModal","handleStrokeSelect","Menu","Item","header","Dropdown","item","selected","trigger","Label","onBlur","display","gridTemplateColumns","Object","values","clientX","clientY","max","Actions","labelPosition","icon","length","dx","dy","reduce","fullPath","lineItem","positive","App","props","pdfInput","imageInput","state","undefined","selectedPageIndex","pdfName","pages","allObjects","pagesScale","pageDimensions","saving","uploading","selectedDrawing","helpModalOpen","onUploadPDF","e","setState","files","target","dataTransfer","addPDF","pdf","Array","numPages","_","i","getPage","savePDF","clearInput","renderHiddenInputs","accept","onUploadImage","addImage","pIndex","handleFileInput","inputName","click","renderEmpty","Segment","placeholder","loading","primary","nextPage","prevState","previousPage","updateObject","objectToUpdate","newObject","updatePageDimensions","dimensions","removeObject","splice","openDrawingModal","closeDrawingModal","addDrawing","addText","React","this","isMultiplePages","isLastPage","currentPage","allObjectsForCurrentPage","currentPageDimensions","Container","pointing","closeOnBlur","simple","disabled","Grid","Row","Column","verticalAlign","circular","compact","stacked","image","textObject","textAlign","drawingAttachment","PureComponent","Boolean","location","hostname","match","script","createElement","body","appendChild","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61cf628d.chunk.js","sourcesContent":["type ScriptName =\n  | 'pdfjsLib'\n  | 'PDFLib'\n  | 'download'\n  | 'makeTextPDF'\n  | 'w3Color';\n\ninterface Script {\n  name: ScriptName;\n  src: string;\n}\n\nconst scripts: Script[] = [\n  {\n    name: 'pdfjsLib',\n    src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n  },\n  {\n    name: 'PDFLib',\n    src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n  },\n  {\n    name: 'download',\n    src: 'https://unpkg.com/downloadjs@1.4.7',\n  },\n  {\n    name: 'makeTextPDF',\n    src:\n      'https://cdn.jsdelivr.net/gh/snamoah/react-pdf-editor/public/makeTextPDF.js',\n  },\n  { name: 'w3Color', src: 'https://www.w3schools.com/lib/w3color.js' },\n];\n\nconst assets: { [key: string]: any } = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n\nexport const prepareAssets = () => {\n  // prepare scripts\n  scripts.forEach(({ name, src }) => {\n    assets[name] = new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => {\n        resolve(window[name as any]);\n        console.log(`${name} is loaded.`);\n      };\n      script.onerror = () =>\n        reject(`The script ${name} didn't load correctly.`);\n      document.body.appendChild(script);\n    });\n  });\n};\n\ninterface Font {\n  src?: string;\n  correction?: (size: number, lineHeight: number) => number;\n  [key: string]: any;\n}\n\ninterface FontsType {\n  [key: string]: Font;\n}\n\nconst fonts: FontsType = {\n  Courier: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 6;\n    },\n  },\n  Helvetica: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 10;\n    },\n  },\n  'Times-Roman': {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 7;\n    },\n  },\n};\n\n// Available fonts\nexport const Fonts = {\n  ...fonts,\n  標楷體: {\n    src: '/CK.ttf', // 9.9 MB\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2;\n    },\n  },\n};\n\nexport const fetchFont = (name: string) => {\n  if (fonts[name as any]) return fonts[name as any];\n\n  const font = Fonts[name as keyof typeof Fonts];\n  if (!font) throw new Error(`Font '${name}' not exists.`);\n\n  fonts[name] = fetch(font.src)\n    .then((r) => r.arrayBuffer())\n    .then((fontBuffer) => {\n      const fontFace = new (window as any).FontFace(name, fontBuffer);\n      fontFace.display = 'swap';\n      fontFace.load().then(() => (document as any).fonts.add(fontFace));\n      return {\n        ...font,\n        buffer: fontBuffer,\n      };\n    });\n};\n","import { getAsset } from './prepareAssets';\n\nexport const readAsArrayBuffer = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nexport const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    if (src instanceof Blob) {\n      const url = window.URL.createObjectURL(src);\n      img.src = url;\n    } else {\n      img.src = src;\n    }\n  });\n};\n\nexport const readAsDataURL = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n};\n\ninterface PDF {\n  numPages: number;\n  getPage: (index: number) => Promise<any>;\n}\nexport const readAsPDF = async (file: File): Promise<PDF> => {\n  const pdfjsLib = await getAsset('pdfjsLib');\n  // Safari possibly get webkitblobresource error 1 when using origin file blob\n  const blob = new Blob([file]);\n  const url = window.URL.createObjectURL(blob);\n  return pdfjsLib.getDocument(url).promise;\n};\n","const PADDING = 25;\n\ninterface Position {\n  top: number;\n  left: number;\n}\n\nexport function ggID(): () => number {\n  let id = 0;\n  return function genId() {\n    return id++;\n  };\n}\n\nexport const getMovePosition = (\n  x: number,\n  y: number,\n  dragX: number,\n  dragY: number,\n  width: number,\n  height: number,\n  pageWidth: number,\n  pageHeight: number\n): Position => {\n  const newPositionTop = y + dragY;\n  const newPositionLeft = x + dragX;\n  const newPositionRight = newPositionLeft + width;\n  const newPositionBottom = newPositionTop + height;\n\n  const top =\n    newPositionTop < 0\n      ? 0\n      : newPositionBottom > pageHeight + PADDING\n      ? pageHeight - height + PADDING\n      : newPositionTop;\n  const left =\n    newPositionLeft < 0\n      ? 0\n      : newPositionRight > pageWidth + PADDING\n      ? pageWidth - width + PADDING\n      : newPositionLeft;\n\n  return {\n    top,\n    left,\n  };\n};\n\nexport const normalize = (value: number): number =>\n  parseFloat((value / 255).toFixed(1));\n","import { readAsArrayBuffer } from './asyncReader';\nimport { getAsset } from './prepareAssets';\nimport { normalize } from './helpers';\n\nexport async function save(pdfFile: File, objects: AllObjects[], name: string) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  let pdfDoc: {\n    getPages: () => any[];\n    embedFont: (arg0: unknown) => any;\n    embedJpg: (arg0: unknown) => any;\n    embedPng: (arg0: unknown) => any;\n    embedPdf: (arg0: any) => [any] | PromiseLike<[any]>;\n    save: () => any;\n  };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const embedProcesses = pageObjects.map(async (object: Attachment) => {\n      if (object.type === 'image') {\n        const { file, x, y, width, height } = object as ImageObject;\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          throw e;\n        }\n      } else if (object.type === 'text') {\n        const {\n          x,\n          y,\n          text,\n          lineHeight,\n          size,\n          fontFamily,\n          width,\n        } = object as TextObject;\n        const pdfFont = await pdfDoc.embedFont(fontFamily);\n        return () =>\n          page.drawText(text, {\n            maxWidth: width,\n            font: pdfFont,\n            size,\n            lineHeight,\n            x,\n            y: pageHeight - size! - y,\n          });\n      } else if (object.type === 'drawing') {\n        const {\n          x,\n          y,\n          path,\n          scale,\n          stroke,\n          strokeWidth,\n        } = object as DrawingObject;\n        const {\n          pushGraphicsState,\n          setLineCap,\n          popGraphicsState,\n          setLineJoin,\n          LineCapStyle,\n          LineJoinStyle,\n          rgb,\n        } = PDFLib;\n        return () => {\n          page.pushOperators(\n            pushGraphicsState(),\n            setLineCap(LineCapStyle.Round),\n            setLineJoin(LineJoinStyle.Round)\n          );\n\n          const color = window.w3color(stroke!).toRgb();\n\n          page.drawSvgPath(path, {\n            borderColor: rgb(\n              normalize(color.r),\n              normalize(color.g),\n              normalize(color.b)\n            ),\n            borderWidth: strokeWidth,\n            scale,\n            x,\n            y: pageHeight - y,\n          });\n          page.pushOperators(popGraphicsState());\n        };\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}\n","export enum DragActions {\n  MOVE = 'MOVE',\n  SCALE = 'SCALE',\n  NO_MOVEMENT = 'NO_MOVEMENT',\n}\n\nexport enum Color {\n  RED = 'red',\n  ORANGE = 'orange',\n  YELLOW = 'yellow',\n  OLIVE = 'olive',\n  GREEN = 'green',\n  TEAL = 'teal',\n  BLUE = 'blue',\n  VIOLOET = 'violet',\n  PURPLE = 'purple',\n  BROWN = 'brown',\n  GREY = 'grey',\n  BLACK = 'black',\n}\n\nexport enum Attachment {\n  IMAGE = 'image',\n  DRAWING = 'drawing',\n  TEXT = 'text',\n}\n\nexport enum TextMode {\n  INSERT = 'insert',\n  COMMAND = 'command',\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\ninterface Props {\n  page: any;\n  updateDimensions: ({\n    width,\n    height,\n  }: {\n    width: number;\n    height: number;\n  }) => void;\n}\n\nexport const PdfPage = ({ page, updateDimensions }: Props) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [width, setWidth] = useState(500);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    const renderPage = async (p: Promise<any>) => {\n      const _page = await p;\n      if (_page) {\n        const context = canvasRef.current?.getContext('2d');\n        const viewport = _page.getViewport({ scale: 1 });\n  \n        setWidth(viewport.width);\n        setHeight(viewport.height);\n  \n        if (context) {\n          await _page.render({\n            canvasContext: canvasRef.current?.getContext('2d'),\n            viewport,\n          }).promise;\n  \n          updateDimensions({ width: viewport.width, height: viewport.height });\n        }\n      }\n    };\n\n    renderPage(page);\n  }, [page, width, height, updateDimensions]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={width} height={height} />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    position: relative\n`;\n\n","import React from 'react';\nimport { Header, Button } from 'semantic-ui-react';\n\ninterface Props {\n  onConfirm: () => void;\n  onDismiss: () => void;\n  title: string;\n}\n\nexport const ConfirmContent: React.FC<Props> = ({\n  title,\n  onConfirm,\n  onDismiss,\n}) => (\n  <div>\n    <Header as=\"h4\" inverted>\n      {title}\n    </Header>\n\n    <Button onClick={onDismiss}>No</Button>\n    <Button negative onClick={onConfirm}>\n      Yes\n    </Button>\n  </div>\n);\n","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\nconst ADJUSTERS_DIMENSIONS = 20;\n\ninterface Props {\n  dimmerActive: boolean;\n  cancelDelete: () => void;\n  deleteImage: () => void;\n  width: number;\n  height: number;\n  canvasRef: RefObject<HTMLCanvasElement>;\n  positionTop: number;\n  positionLeft: number;\n  onClick: DragEventListener<HTMLDivElement>;\n  handleMouseOut: DragEventListener<HTMLDivElement>;\n  handleMouseDown: DragEventListener<HTMLDivElement>;\n  handleMouseMove: DragEventListener<HTMLDivElement>;\n  handleMouseUp: DragEventListener<HTMLDivElement>;\n  handleImageScale: DragEventListener<HTMLDivElement>;\n}\n\nexport const Image: React.FC<Props> = ({\n  canvasRef,\n  positionTop,\n  positionLeft,\n  width,\n  height,\n  handleMouseOut,\n  handleMouseDown,\n  handleMouseMove,\n  handleMouseUp,\n  handleImageScale,\n  dimmerActive,\n  cancelDelete,\n  deleteImage,\n  onClick,\n}) => {\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onDoubleClick={onClick}\n      style={{\n        position: 'absolute',\n        top: positionTop,\n        left: positionLeft,\n        borderStyle: 'dashed',\n        borderWidth: 1,\n        borderColor: 'grey',\n        width: width + 2,\n        height: height + 2,\n        cursor: 'move',\n      }}\n    >\n      <Dimmer.Dimmable as={Div} size=\"medium\" dimmed={dimmerActive}>\n        <canvas\n          ref={canvasRef}\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        />\n        <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n          <ConfirmContent\n            title=\"Delete?\"\n            onConfirm={deleteImage}\n            onDismiss={cancelDelete}\n          />\n        </Dimmer>\n      </Dimmer.Dimmable>\n      <div\n        data-direction=\"top-left\"\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        onMouseMove={handleImageScale}\n        style={{\n          position: 'absolute',\n          cursor: 'nwse-resize',\n          top: -5,\n          left: -5,\n          width: ADJUSTERS_DIMENSIONS,\n          height: ADJUSTERS_DIMENSIONS,\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Image as ImageComponent } from '../components/Image';\n\nconst IMAGE_MAX_SIZE = 300;\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeImage: () => void;\n  updateImageObject: (imageObject: Partial<ImageObject>) => void;\n}\n\nexport const Image = ({\n  x,\n  y,\n  payload,\n  width,\n  height,\n  pageWidth,\n  removeImage,\n  pageHeight,\n  updateImageObject,\n}: ImageObject & Props) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [canvasWidth, setCanvasWidth] = useState(width);\n  const [canvasHeight, setCanvasHeight] = useState(height);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [positionTop, setPositionTop] = useState(y);\n  const [positionLeft, setPositionLeft] = useState(x);\n  const [direction, setDirection] = useState<string[]>([]);\n  const [operation, setOperation] = useState<DragActions>(\n    DragActions.NO_MOVEMENT\n  );\n\n  const [dimmerActive, setDimmerActive] = useState(false);\n\n  const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(true);\n    setOperation(DragActions.MOVE);\n    const directions = event.currentTarget.dataset.direction;\n    if (directions) {\n      setDirection(directions.split('-'));\n      setOperation(DragActions.SCALE);\n    }\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        canvasWidth,\n        canvasHeight,\n        pageWidth,\n        pageHeight\n      );\n\n      setPositionTop(top);\n      setPositionLeft(left);\n    }\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(false);\n\n    if (operation === DragActions.MOVE) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        canvasWidth,\n        canvasHeight,\n        pageWidth,\n        pageHeight\n      );\n\n      updateImageObject({\n        x: left,\n        y: top,\n      });\n    }\n\n    if (operation === DragActions.SCALE) {\n      updateImageObject({\n        x: positionLeft,\n        y: positionTop,\n      });\n    }\n\n    setOperation(DragActions.NO_MOVEMENT);\n  };\n\n  const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (operation === DragActions.MOVE) {\n      handleMouseUp(event);\n    }\n  };\n\n  const handleImageScale = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      if (direction.includes('left')) {\n        setPositionLeft(positionLeft + event.movementX);\n        setCanvasWidth(canvasWidth - event.movementX);\n      }\n\n      if (direction.includes('top')) {\n        setPositionTop(positionTop + event.movementY);\n        setCanvasHeight(canvasHeight - event.movementY);\n      }\n\n      if (direction.includes('right')) {\n        setCanvasWidth(canvasWidth + event.movementX);\n      }\n\n      if (direction.includes('bottom')) {\n        setCanvasHeight(canvasHeight + event.movementY);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const renderImage = (img: HTMLImageElement) => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n  \n      const context = canvas.getContext('2d');\n      if (!context) return;\n  \n      let scale = 1;\n      if (canvasWidth > IMAGE_MAX_SIZE) {\n        scale = IMAGE_MAX_SIZE / canvasWidth;\n      }\n  \n      if (canvasHeight > IMAGE_MAX_SIZE) {\n        scale = Math.min(scale, IMAGE_MAX_SIZE / canvasHeight);\n      }\n  \n      const newCanvasWidth = canvasWidth * scale;\n      const newCanvasHeight = canvasHeight * scale;\n  \n      setCanvasWidth(newCanvasWidth);\n      setCanvasHeight(newCanvasHeight);\n  \n      canvas.width = newCanvasWidth;\n      canvas.height = newCanvasHeight;\n  \n      context.drawImage(payload, 0, 0, newCanvasWidth, newCanvasHeight);\n      canvas.toBlob((blob) => {\n        updateImageObject({\n          file: blob as File,\n          width: newCanvasWidth,\n          height: newCanvasHeight,\n        });\n      });\n    };\n\n    renderImage(payload);\n  }, [payload, canvasWidth, canvasHeight, updateImageObject]);\n\n  const handleClick = () => setDimmerActive(true);\n  const onCancelDelete = () => setDimmerActive(false);\n\n  const deleteImage = () => {\n    onCancelDelete();\n    removeImage();\n  };\n\n  return (\n    <ImageComponent\n      onClick={handleClick}\n      dimmerActive={dimmerActive}\n      cancelDelete={onCancelDelete}\n      deleteImage={deleteImage}\n      positionLeft={positionLeft}\n      positionTop={positionTop}\n      canvasRef={canvasRef}\n      width={canvasWidth}\n      height={canvasHeight}\n      handleImageScale={handleImageScale}\n      handleMouseDown={handleMouseDown}\n      handleMouseUp={handleMouseUp}\n      handleMouseMove={handleMouseMove}\n      handleMouseOut={handleMouseOut}\n    />\n  );\n};\n","import React, { RefObject } from 'react';\nimport { TextMode } from '../entities';\n\ninterface Props {\n  inputRef: RefObject<HTMLInputElement>;\n  text?: string;\n  mode: string;\n  width: number;\n  size?: number;\n  height: number;\n  lineHeight?: number;\n  fontFamily?: string;\n  positionTop: number;\n  positionLeft: number;\n  toggleEditMode: () => void;\n  handleMouseDown: DragEventListener<HTMLDivElement>;\n  handleMouseUp: DragEventListener<HTMLDivElement>;\n  handleMouseMove: DragEventListener<HTMLDivElement>;\n  handleMouseOut: DragEventListener<HTMLDivElement>;\n  onChangeText: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Text: React.FC<Props> = ({\n  text,\n  width,\n  height,\n  inputRef,\n  mode,\n  size,\n  fontFamily,\n  positionTop,\n  positionLeft,\n  onChangeText,\n  toggleEditMode,\n  handleMouseDown,\n  handleMouseMove,\n  handleMouseOut,\n  handleMouseUp,\n  lineHeight,\n}) => {\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onDoubleClick={toggleEditMode}\n      style={{\n        width,\n        border: 1,\n        height,\n        fontFamily,\n        fontSize: size,\n        lineHeight,\n        cursor: mode === TextMode.COMMAND ? 'move' : 'default',\n        top: positionTop,\n        left: positionLeft,\n        borderColor: 'gray',\n        borderStyle: 'solid',\n        wordWrap: 'break-word',\n        padding: 0,\n        position: 'absolute',\n      }}\n    >\n      <input\n        type=\"text\"\n        ref={inputRef}\n        onChange={onChangeText}\n        readOnly={mode === TextMode.COMMAND}\n        style={{\n          width: '100%',\n          borderStyle: 'none',\n          borderWidth: 0,\n          fontFamily,\n          fontSize: size,\n          outline: 'none',\n          padding: 0,\n          boxSizing: 'border-box',\n          lineHeight,\n          height,\n          margin: 0,\n          backgroundColor: 'transparent',\n          cursor: mode === TextMode.COMMAND ? 'move' : 'text',\n        }}\n        value={text}\n      />\n    </div>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { Text as Component } from '../components/Text';\nimport { getMovePosition } from '../utils/helpers';\nimport { DragActions, TextMode } from '../entities';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  updateTextObject: (textObject: Partial<TextObject>) => void;\n}\n\nexport const Text = ({\n  x,\n  y,\n  text,\n  width,\n  height,\n  lineHeight,\n  size,\n  fontFamily,\n  pageHeight,\n  pageWidth,\n  updateTextObject,\n}: TextObject & Props) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [content, setContent] = useState(text || '');\n  const [mouseDown, setMouseDown] = useState(false);\n  const [positionTop, setPositionTop] = useState(y);\n  const [positionLeft, setPositionLeft] = useState(x);\n  const [operation, setOperation] = useState<DragActions>(\n    DragActions.NO_MOVEMENT\n  );\n  const [textMode, setTextMode] = useState<TextMode>(TextMode.COMMAND);\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      setPositionTop(top);\n      setPositionLeft(left);\n    }\n  };\n\n  const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (textMode !== TextMode.COMMAND) {\n      return;\n    }\n\n    setMouseDown(true);\n    setOperation(DragActions.MOVE);\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (textMode !== TextMode.COMMAND) {\n      return;\n    }\n\n    setMouseDown(false);\n\n    if (operation === DragActions.MOVE) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      updateTextObject({\n        x: left,\n        y: top,\n      });\n    }\n\n    // if (operation === DragActions.SCALE) {\n    //     updateTextObject({\n    //         x: positionLeft,\n    //         y: positionTop,\n    //     });\n\n    // }\n\n    setOperation(DragActions.NO_MOVEMENT);\n  };\n\n  const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (operation === DragActions.MOVE) {\n      handleMouseUp(event);\n    }\n\n    if (textMode === TextMode.INSERT) {\n      setTextMode(TextMode.COMMAND);\n      prepareTextAndUpdate();\n    }\n  };\n\n  const prepareTextAndUpdate = () => {\n    // Deselect any selection when returning to command mode\n    document.getSelection()?.removeAllRanges();\n\n    const lines = [content];\n    updateTextObject({\n      lines,\n      text: content,\n    });\n  };\n\n  const toggleEditMode = () => {\n    const input = inputRef.current;\n    const mode =\n      textMode === TextMode.COMMAND ? TextMode.INSERT : TextMode.COMMAND;\n\n    setTextMode(mode);\n\n    if (input && mode === TextMode.INSERT) {\n      input.focus();\n      input.select();\n    } else {\n      prepareTextAndUpdate();\n    }\n  };\n\n  const onChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    setContent(value);\n  };\n\n  return (\n    <Component\n      text={content}\n      width={width}\n      height={height}\n      mode={textMode}\n      size={size}\n      lineHeight={lineHeight}\n      inputRef={inputRef}\n      fontFamily={fontFamily}\n      positionTop={positionTop}\n      onChangeText={onChangeText}\n      positionLeft={positionLeft}\n      handleMouseUp={handleMouseUp}\n      toggleEditMode={toggleEditMode}\n      handleMouseOut={handleMouseOut}\n      handleMouseDown={handleMousedown}\n      handleMouseMove={handleMouseMove}\n    />\n  );\n};\n","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\ninterface Props {\n  path?: string;\n  stroke?: string;\n  width: number;\n  height: number;\n  strokeWidth?: number;\n  positionTop: number;\n  positionLeft: number;\n  dimmerActive: boolean;\n  cancelDelete: () => void;\n  deleteDrawing: () => void;\n  onClick: () => void;\n  svgRef: RefObject<SVGSVGElement>;\n  handleMouseDown: DragEventListener<HTMLDivElement>;\n  handleMouseUp: DragEventListener<HTMLDivElement>;\n  handleMouseMove: DragEventListener<HTMLDivElement>;\n  handleMouseOut: DragEventListener<HTMLDivElement>;\n}\nexport const Drawing: React.FC<Props> = ({\n  dimmerActive,\n  cancelDelete,\n  deleteDrawing,\n  positionTop,\n  positionLeft,\n  width,\n  height,\n  svgRef,\n  path,\n  stroke,\n  strokeWidth,\n  handleMouseDown,\n  handleMouseMove,\n  handleMouseOut,\n  handleMouseUp,\n  onClick,\n}) => {\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onDoubleClick={onClick}\n      style={{\n        position: 'absolute',\n        top: positionTop,\n        left: positionLeft,\n        width,\n        height,\n        cursor: 'move',\n      }}\n    >\n      <Dimmer.Dimmable as={Div} dimmed={dimmerActive}>\n        <svg ref={svgRef}>\n          <path\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            stroke={stroke}\n            fill=\"none\"\n            d={path}\n          />\n        </svg>\n        <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n          <ConfirmContent\n            title=\"Delete?\"\n            onConfirm={deleteDrawing}\n            onDismiss={cancelDelete}\n          />\n        </Dimmer>\n      </Dimmer.Dimmable>\n    </div>\n  );\n};\n","import React, { createRef, useEffect, useState } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Drawing as DrawingComponent } from '../components/Drawing';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeDrawing: () => void;\n  updateDrawingObject: (drawingObject: Partial<DrawingObject>) => void;\n}\n\nexport const Drawing = ({\n  x,\n  y,\n  width,\n  height,\n  stroke,\n  strokeWidth,\n  path,\n  pageWidth,\n  pageHeight,\n  removeDrawing,\n  updateDrawingObject,\n}: DrawingObject & Props) => {\n  const svgRef = createRef<SVGSVGElement>();\n  const [mouseDown, setMouseDown] = useState(false);\n  const [positionTop, setPositionTop] = useState(y);\n  const [positionLeft, setPositionLeft] = useState(x);\n  const [operation, setOperation] = useState<DragActions>(\n    DragActions.NO_MOVEMENT\n  );\n  const [dimmerActive, setDimmerActive] = useState(false);\n\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (svg) {\n      svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    }\n  }, [svgRef, width, height]);\n\n  const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    setOperation(DragActions.MOVE);\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (mouseDown) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      setPositionTop(top);\n      setPositionLeft(left);\n    }\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(false);\n\n    if (operation === DragActions.MOVE) {\n      const { top, left } = getMovePosition(\n        positionLeft,\n        positionTop,\n        event.movementX,\n        event.movementY,\n        width,\n        height,\n        pageWidth,\n        pageHeight\n      );\n\n      updateDrawingObject({\n        x: left,\n        y: top,\n      });\n    }\n\n    if (operation === DragActions.SCALE) {\n      updateDrawingObject({\n        x: positionLeft,\n        y: positionTop,\n      });\n    }\n\n    setOperation(DragActions.NO_MOVEMENT);\n  };\n\n  const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (operation === DragActions.MOVE) {\n      handleMouseUp(event);\n    }\n  };\n\n  const handleClick = () => setDimmerActive(true);\n  const cancelDelete = () => setDimmerActive(false);\n\n  const confirmDelete = () => {\n    cancelDelete();\n    removeDrawing();\n  };\n  return (\n    <DrawingComponent\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      path={path}\n      width={width}\n      svgRef={svgRef}\n      height={height}\n      onClick={handleClick}\n      cancelDelete={cancelDelete}\n      dimmerActive={dimmerActive}\n      deleteDrawing={confirmDelete}\n      handleMouseDown={handleMousedown}\n      handleMouseMove={handleMouseMove}\n      handleMouseOut={handleMouseOut}\n      handleMouseUp={handleMouseUp}\n      positionLeft={positionLeft}\n      positionTop={positionTop}\n    />\n  );\n};\n","export const helpContent = [\n  {\n    title: `What's this?`,\n    content: [\n      'This is a piece of sofware that allows you to edit your PDFs. You can add images and drawings to your pdf.',\n      `And there are more features coming up like adding text.`,\n    ],\n  },\n  {\n    title: 'How do I delete an attached image or drawing?',\n    content: [\n      `Easy! Just double click the image or drawing. You will be asked to confirm delete and then, voila, it's gone!`,\n    ],\n  },\n  {\n    title: 'Can I add multiple images or drawings on a page?',\n    content: [`Yes.`],\n  },\n  {\n    title: 'How can I delete my uploaded pdf?',\n    content: [\n      `You can't delete the uploaded pdf.`,\n      `You will have to upload a new one. This is a client-side app so you did not actually uploaded it to any server. Don't worry :)`,\n    ],\n  },\n  {\n    title: 'Can I resize a drawing?',\n    content: [`No. Currently it is not possible to resize a drawing`],\n  },\n  {\n    title: 'Can I resize an image?',\n    content: [\n      `Yes you can. Move your mouse to the top-left corner of the image.`,\n      `The cursor should change and you should be able to resize from there`,\n    ],\n  },\n  {\n    title: 'Can I load multi-page pdf?',\n    content: ['Yes.'],\n  },\n  {\n    title: 'How do I add text to the pdf?',\n    content: [\n      '-  In the dropdown menu for edit, select add Text. This will add a text object to your pdf',\n      '-  You should see a textbox with placeholder text `Enter Text Here`',\n      '-  The textbox has two modes, edit mode and command mode, you can toggle between either by double clicking any area within the textbox.',\n      '-  In Edit Mode, you can enter your desired text',\n      `-  In Command Mode, you can move the textbox around to change it's position`,\n    ],\n  },\n  {\n    title: `Why can't I enter multi-line text?`,\n    content: [\n      'The textfield feature is in beta. There are more functionalities to be added like resizing, selecting fonts, changing font size etc which are in development.',\n      'These functionalities should be available in the next release',\n    ],\n  },\n];\n","import React, { useState } from 'react';\nimport { Modal, Accordion, Icon, AccordionTitleProps } from 'semantic-ui-react';\nimport { helpContent } from '../entities/helpContent';\ninterface Props {\n  open: boolean;\n  dismiss: () => void;\n}\n\nexport const HelpModal: React.FC<Props> = ({ open, dismiss }) => {\n  const [activeIndex, setActiveIndex] = useState(-1);\n\n  const handleClick = (\n    event: React.MouseEvent<HTMLDivElement>,\n    data: AccordionTitleProps\n  ) => {\n    const { index } = data;\n    const newIndex = activeIndex === index ? -1 : (index as number);\n    setActiveIndex(newIndex);\n  };\n\n  return (\n    <>\n      <Modal open={open} onClose={dismiss} size=\"small\" dimmer=\"inverted\">\n        <Modal.Header>\n          <Icon name=\"question\" />\n          FAQ\n        </Modal.Header>\n        <Modal.Content scrolling>\n          <Accordion fluid styled>\n            {helpContent.map((content, index) => (\n              <React.Fragment key={index}>\n                <Accordion.Title\n                  active={activeIndex === index}\n                  index={index}\n                  onClick={handleClick}\n                >\n                  <Icon name=\"dropdown\" />\n                  {content.title}\n                </Accordion.Title>\n                <Accordion.Content active={activeIndex === index}>\n                  {content.content.map((text, index) => (\n                    <p key={index}>{text}</p>\n                  ))}\n                </Accordion.Content>\n              </React.Fragment>\n            ))}\n          </Accordion>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, createRef, useEffect } from 'react';\nimport { Modal, Button, Menu, Dropdown, Label } from 'semantic-ui-react';\nimport { Color } from '../entities';\n\ninterface Props {\n  open: boolean;\n  dismiss: () => void;\n  confirm: (drawing?: {\n    width: number;\n    height: number;\n    path: string;\n    strokeWidth: number;\n    stroke: string;\n  }) => void;\n  drawing?: DrawingObject;\n}\n\nexport const DrawingModal = ({ open, dismiss, confirm, drawing }: Props) => {\n  const svgRef = createRef<SVGSVGElement>();\n  const [paths, setPaths] = useState<Array<[string, number, number]>>([]);\n  const [path, setPath] = useState((drawing && drawing.path) || '');\n  const [svgX, setSvgX] = useState(0);\n  const [svgY, setSvgY] = useState(0);\n  const [minX, setMinX] = useState(Infinity);\n  const [maxX, setMaxX] = useState(0);\n  const [minY, setMinY] = useState(Infinity);\n  const [maxY, setMaxY] = useState(0);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [strokeWidth, setStrokeWidth] = useState(5);\n  const [stroke, setStroke] = useState(Color.BLACK);\n  const [strokeDropdownOpen, setStrokeDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    const { x, y } = svg.getBoundingClientRect();\n    setSvgX(x);\n    setSvgY(y);\n  }, [svgRef]);\n\n  const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(true);\n\n    const x = event.clientX - svgX;\n    const y = event.clientY - svgY;\n    setMinX(Math.min(minX, x));\n    setMaxX(Math.max(maxX, x));\n    setMinY(Math.min(minY, y));\n    setMaxY(Math.max(maxY, y));\n    setPath(path + `M${x},${y}`);\n    setPaths([...paths, ['M', x, y]]);\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    if (!mouseDown) return;\n\n    const x = event.clientX - svgX;\n    const y = event.clientY - svgY;\n    setMinX(Math.min(minX, x));\n    setMaxX(Math.max(maxX, x));\n    setMinY(Math.min(minY, y));\n    setMaxY(Math.max(maxY, y));\n    setPath(path + `L${x},${y}`);\n    setPaths([...paths, ['L', x, y]]);\n  };\n\n  const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setMouseDown(false);\n  };\n\n  const resetDrawingBoard = () => {\n    setPaths([]);\n    setPath('');\n    setMinX(Infinity);\n    setMaxX(0);\n    setMinY(Infinity);\n    setMaxY(0);\n    setStrokeWidth(5);\n    setStroke(Color.BLACK);\n  };\n\n  const handleDone = () => {\n    if (!paths.length) {\n      confirm();\n      return;\n    }\n\n    const boundingWidth = maxX - minX;\n    const boundingHeight = maxY - minY;\n\n    const dx = -(minX - 10);\n    const dy = -(minY - 10);\n\n    confirm({\n      stroke,\n      strokeWidth,\n      width: boundingWidth + 20,\n      height: boundingHeight + 20,\n      path: paths.reduce(\n        (fullPath, lineItem) =>\n          `${fullPath}${lineItem[0]}${lineItem[1] + dx}, ${lineItem[2] + dy}`,\n        ''\n      ),\n    });\n\n    closeModal();\n  };\n\n  const closeModal = () => {\n    resetDrawingBoard();\n    dismiss();\n  };\n\n  // TODO: Move to config\n  const strokeSizes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  const handleStrokeSelect = (color: Color) => () => {\n    setStroke(color);\n    setStrokeDropdownOpen(false);\n  };\n\n  return (\n    <Modal size=\"small\" dimmer=\"inverted\" open={open} onClose={closeModal}>\n      <Modal.Header>Add your Drawing</Modal.Header>\n      <Modal.Content>\n        <Menu size=\"tiny\">\n          <Menu.Item header>Tools</Menu.Item>\n          {/* <Menu.Item><Icon name=\"undo\" /></Menu.Item>\n                    <Menu.Item><Icon name=\"redo\" /></Menu.Item> */}\n          <Menu.Menu position=\"right\">\n            <Dropdown item text={`${strokeWidth}`}>\n              <Dropdown.Menu>\n                {strokeSizes.map((size) => (\n                  <Dropdown.Item\n                    key={size}\n                    selected={size === strokeWidth}\n                    onClick={() => setStrokeWidth(size)}\n                  >\n                    {size}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown\n              item\n              trigger={<Label color={stroke} />}\n              onClick={() => setStrokeDropdownOpen(true)}\n              onBlur={() => setStrokeDropdownOpen(false)}\n            >\n              <Dropdown.Menu open={strokeDropdownOpen}>\n                <div\n                  style={{\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(3, 1fr)',\n                    padding: 5,\n                  }}\n                >\n                  {Object.values(Color).map((color, index) => (\n                    <div \n                      style={{ margin: 2.5 }} \n                      key={index}\n                    >\n                      <Label\n                        color={color}\n                        onClick={handleStrokeSelect(color)}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </Dropdown.Menu>\n            </Dropdown>\n            {/* <Dropdown item text={stroke}>\n                            <Dropdown.Menu>\n                                <Card.Group itemsPerRow={3}>\n                                    {Object.values(Color).map((color, index) => (\n                                        <Card inverted key={index} color={color} />\n                                    ))}\n                                </Card.Group>\n                            </Dropdown.Menu>\n                        </Dropdown> */}\n          </Menu.Menu>\n        </Menu>\n        <div\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n        >\n          <svg\n            ref={svgRef}\n            style={{\n              width: '100%',\n              height: '50vh',\n            }}\n          >\n            <path\n              strokeWidth={strokeWidth}\n              strokeLinejoin=\"round\"\n              strokeLinecap=\"round\"\n              stroke={stroke}\n              fill=\"none\"\n              d={path}\n            />\n          </svg>\n        </div>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" content=\"Cancel\" onClick={closeModal} />\n        <Button\n          content=\"Done\"\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          onClick={handleDone}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","\nimport React, { RefObject } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Menu, Container, Segment, Header, Icon, Button, Grid, Dropdown } from 'semantic-ui-react';\nimport { readAsPDF, readAsDataURL, readAsImage } from './utils/asyncReader';\nimport { save } from './utils/pdf';\nimport { PdfPage } from './components/PdfPage';\nimport { Image } from './containers/Image';\nimport { ggID } from './utils/helpers';\nimport { Text } from './containers/Text';\nimport { Drawing } from './containers/Drawing';\nimport { HelpModal } from './components/HelpModal';\nimport { DrawingModal } from './components/DrawingModal';\n\n\ninterface State {\n  pdfFile?: File;\n    selectedPageIndex: number;\n    pdfName: string;\n    pages: any[];\n    allObjects: AllObjects[];\n    pagesScale: any[];\n    pageDimensions: Dimensions[];\n    saving: boolean;\n    drawing: boolean;\n    uploading: boolean;\n    selectedDrawing: number;\n    helpModalOpen: boolean;\n}\n\nclass App extends React.PureComponent {\n  pdfInput: RefObject<HTMLInputElement>;\n  imageInput: RefObject<HTMLInputElement>;\n\n  state: State = {\n    pdfFile: undefined,\n    selectedPageIndex: -1,\n    pdfName: '',\n    pages: [],\n    allObjects: [],\n    pagesScale: [],\n    pageDimensions: [],\n    saving: false,\n    drawing: false,\n    uploading: false,\n    selectedDrawing: 0,\n    helpModalOpen: false,\n  }\n\n  constructor(props: any) {\n    super(props);\n\n    this.pdfInput = React.createRef<HTMLInputElement>();\n    this.imageInput = React.createRef<HTMLInputElement>();\n  }\n\n  onUploadPDF = async (e: React.ChangeEvent<HTMLInputElement>  & { dataTransfer?: DataTransfer }) => {\n    this.setState({ uploading: true });\n    const files: FileList | undefined =  e.target.files || (e.dataTransfer && e.dataTransfer.files);\n    if (!files) return;\n    \n    const file = files[0];\n    if (!file || file.type !== \"application/pdf\") return;\n\n    this.setState({\n      selectedPageIndex: -1\n    });\n\n    try {\n      await this.addPDF(file);\n\n      this.setState({\n        selectedPageIndex: 0\n      });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ uploading: false })\n    }\n  }\n\n  addPDF = async (file: File) => {\n    try {\n      const pdf = await readAsPDF(file);\n      this.setState({\n        pdfName: file.name,\n        pdfFile: file,\n        pages: Array(pdf.numPages)\n          .fill(0)\n          .map((_, i) => pdf.getPage(i + 1)),\n        allObjects: Array(pdf.numPages).fill([]),\n        pagesScale: Array(pdf.numPages).fill(1),\n        pageDimensions: Array(pdf.numPages).fill({ width: 0, height: 0 }) \n      });\n    } catch (e) {\n      console.log(\"Failed to add pdf.\");\n      throw e;\n    }\n  }\n\n  savePDF = async () => {\n    const { pdfFile, saving, pages, allObjects, pdfName } = this.state;\n    if (!pdfFile || saving || !pages.length) return;\n\n    this.setState({ saving: true });\n    \n    try {\n      await save(pdfFile, allObjects, pdfName);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ saving: false });\n    }\n  }\n\n  clearInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.value = '';\n  }\n\n  renderHiddenInputs = () => (\n    <>\n      <input\n        ref={this.pdfInput}\n        type=\"file\"\n        name=\"pdf\"\n        id=\"pdf\"\n        accept=\"application/pdf\"\n        onChange={this.onUploadPDF}\n        onClick={this.clearInput}\n        style={{ display: 'none' }} />\n      { this.state.selectedPageIndex > -1 && (\n          <input\n            ref={this.imageInput}\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            onClick={this.clearInput}\n            style={{ display: 'none' }}\n            onChange={this.onUploadImage} \n          /> \n        ) \n      }\n    </>\n  )\n\n  onUploadImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { selectedPageIndex } = this.state;\n    const file: File | null = e.target.files && e.target.files[0];\n    if (file && selectedPageIndex >= 0) {\n      this.addImage(file);\n    }\n  }\n\n  addImage = async (file: File) => {\n    const { allObjects, selectedPageIndex } = this.state;\n    try {\n      // get dataURL to prevent canvas from tainted\n      const url = await readAsDataURL(file);\n      const img = await readAsImage(url as any);\n      const id = ggID();\n      const { width, height } = img;\n      const object: ImageObject = {\n        id,\n        type: \"image\",\n        width,\n        height,\n        x: 0,\n        y: 0,\n        payload: img,\n        file\n      };\n      this.setState({\n        allObjects: allObjects.map((objects, pIndex) =>\n          pIndex === selectedPageIndex ? [...objects, object] : objects\n        )\n      });\n    } catch (e) {\n      console.log(`Fail to add image.`, e);\n    }\n  }\n\n  handleFileInput = (inputName: string) => () => {\n    const input = inputName === 'pdf' \n    ? this.pdfInput.current\n    : inputName === 'image'\n    ? this.imageInput.current\n    : null;\n\n    if (input) {\n      input.click();\n    }\n  }\n\n  renderEmpty = () => (\n    <Segment placeholder loading={this.state.uploading} style={{ height: '80vh' }}>\n      <Header icon>\n        <Icon name='file pdf outline' />\n        Upload your PDF to start editing!\n      </Header>\n      <Button primary onClick={this.handleFileInput('pdf')}>Load PDF</Button>\n    </Segment>\n  );\n\n  nextPage = () => {\n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex + 1,\n    }))\n  }\n\n  previousPage = () => { \n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex - 1,\n    }))\n  }\n\n  updateObject = (id: number, pageIndex: number, payload: Partial<Attachment>) => {\n    const { allObjects } = this.state;\n    let pageObjects = allObjects[pageIndex];\n    const objectToUpdate = pageObjects[id];\n    const newObject: Attachment = { ...objectToUpdate, ...(payload as Attachment)};\n    pageObjects[id] = newObject;\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? pageObjects : objects\n      )\n    })\n  }\n\n  updatePageDimensions = (pageIndex: number, dimensions: { width: number, height: number }) => {\n    this.setState({\n      pageDimensions: this.state.pageDimensions.map((page, index) => \n        pageIndex === index ? dimensions : page\n      )\n    });\n  }\n\n  removeObject = (id: number, pageIndex: number) => {\n    const { allObjects } = this.state;\n    const pageObjects = allObjects[pageIndex];\n    pageObjects.splice(id, 1);\n    allObjects[pageIndex] = pageObjects;\n    this.setState({ allObjects });\n  }\n\n  openDrawingModal = () => {\n    this.setState({\n      drawing: true\n    });\n  }\n\n  closeDrawingModal = () => {\n    this.setState({\n      drawing: false\n    })\n  }\n\n  addDrawing = (pageIndex: number, drawing?: { width: number, height: number, path: string }) => {\n    const { allObjects } = this.state;\n    if (!drawing) return;\n\n    const newObject: DrawingObject = {\n      id: ggID(),\n      type: 'drawing',\n      ...drawing,\n      x: 0,\n      y: 0,\n      scale: 1,\n    }\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? [...objects, newObject] : objects\n      )\n    })\n  }\n\n  addText = () => {\n    const { allObjects, selectedPageIndex } = this.state;\n\n    const newObject: TextObject = {\n      id: ggID(),\n      type: 'text',\n      x: 0,\n      y: 0,\n      width: 120,\n      height: 25,\n      size: 16,\n      lineHeight: 1.4,\n      fontFamily: 'Times-Roman',\n      text: 'Enter Text Here',\n    };\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        selectedPageIndex === index ? [...objects, newObject] : objects\n      )\n    })    \n  }\n\n  render() {\n    const { allObjects, pdfName, pdfFile, pages, saving, selectedPageIndex, pageDimensions } = this.state;\n    const isMultiplePages = pages.length > 1;\n    const isLastPage = selectedPageIndex === pages.length - 1;\n    const currentPage = pages[selectedPageIndex];\n    const allObjectsForCurrentPage = allObjects[selectedPageIndex];\n    const currentPageDimensions = pageDimensions[selectedPageIndex];\n  \n    return (\n      <Container style={{ margin: 30 }}>\n        {this.renderHiddenInputs()}\n          <Menu pointing>\n            <Menu.Item header>PDF Editor</Menu.Item>\n            <Menu.Menu position=\"right\">\n              {pdfFile && (\n                <>\n                  <Dropdown \n                    item \n                    closeOnBlur\n                    icon=\"edit outline\" \n                    simple>\n                    <Dropdown.Menu>\n                    <Dropdown.Item\n                        onClick={this.addText}>\n                          Add Text\n                      </Dropdown.Item>\n                      <Dropdown.Item \n                        onClick={this.handleFileInput('image')}\n                      >\n                        Add Image\n                      </Dropdown.Item>\n                      <Dropdown.Item \n                        onClick={this.openDrawingModal}\n                      >\n                        Add Drawing\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  <Menu.Item\n                    name={saving ? 'Saving...' : 'Save'}\n                    disabled={saving}\n                    onClick={this.savePDF} \n                  />\n                  <Menu.Item \n                    name=\"Upload New\"\n                    onClick={this.handleFileInput('pdf')} \n                  />\n                </>\n              )}\n              <Menu.Item onClick={() => this.setState({ helpModalOpen: true })}>\n                <Icon name=\"question circle outline\" />\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        \n        \n        {!pdfFile ? this.renderEmpty() : (\n          <Grid>\n              <Grid.Row>\n                <Grid.Column width={3} verticalAlign=\"middle\">\n                  {isMultiplePages && selectedPageIndex !== 0 && (\n                    <Button circular icon=\"angle left\" onClick={this.previousPage} />\n                  )}\n                </Grid.Column>\n                <Grid.Column width={10}>\n                  {currentPage && (\n                      <Segment\n                        style={{ position: 'relative' }}\n                        compact\n                        stacked={isMultiplePages && !isLastPage}\n                      >\n                        <PdfPage\n                          updateDimensions={(dimensions) => this.updatePageDimensions(selectedPageIndex, dimensions)}\n                          page={currentPage} />\n                          {allObjectsForCurrentPage && allObjectsForCurrentPage.map((data, index) => {\n                            const key = `${pdfName}-${index}`;\n                            if (data.type === 'image') {\n                              return (\n                                  <Image\n                                    removeImage={() => this.removeObject(index, selectedPageIndex)}\n                                    key={key}\n                                    pageWidth={currentPageDimensions.width}\n                                    pageHeight={currentPageDimensions.height}\n                                    updateImageObject={(image) => this.updateObject(index, selectedPageIndex, image)}\n                                    {...(data as ImageObject)}  \n                                  />\n                              )\n                            }\n\n                            if (data.type === 'drawing') {\n                              return (\n                                <Drawing\n                                  key={key}\n                                  removeDrawing={() => this.removeObject(index, selectedPageIndex)}\n                                  pageWidth={currentPageDimensions.width}\n                                  pageHeight={currentPageDimensions.height}\n                                  updateDrawingObject={(drawing) => this.updateObject(index, selectedPageIndex, drawing)}\n                                  {...data as DrawingObject}\n                                />\n                              )\n                            }\n\n                            if (data.type === 'text') {\n                              return (\n                                <Text\n                                  key={key}\n                                  pageWidth={currentPageDimensions.width}\n                                  pageHeight={currentPageDimensions.height}\n                                  updateTextObject={(textObject) => this.updateObject(index, selectedPageIndex, textObject)}\n                                  {...data as TextObject}\n                                />\n                              )\n                            }\n                            return null;\n                          })}\n                      </Segment>\n                    )\n                  }\n                </Grid.Column>\n                <Grid.Column width={3} verticalAlign=\"middle\" textAlign=\"right\">\n                  {isMultiplePages && selectedPageIndex !== pages.length - 1 && (\n                    <Button circular icon=\"angle right\" onClick={this.nextPage}/>\n                  )}\n                </Grid.Column>\n              </Grid.Row>\n          </Grid>\n        )}\n\n        {\n          <DrawingModal \n            open={this.state.drawing} \n            dismiss={this.closeDrawingModal}\n            confirm={(drawingAttachment) => this.addDrawing(selectedPageIndex, drawingAttachment)}\n          />\n        }\n\n        {<HelpModal \n          open={this.state.helpModalOpen}\n          dismiss={() => this.setState({ helpModalOpen: false })}\n           />}\n      </Container>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}