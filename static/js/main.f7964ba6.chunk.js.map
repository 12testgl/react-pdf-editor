{"version":3,"sources":["utils/prepareAssets.ts","utils/asyncReader.ts","utils/helpers.ts","utils/pdf.ts","components/PdfPage.tsx","entities/index.ts","ui/components/Div.ts","components/ConfirmContent.tsx","components/Image.tsx","containers/Image.tsx","components/DrawingModal.tsx","components/Drawing.tsx","containers/Drawing.tsx","entities/helpContent.ts","components/HelpModal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scripts","name","src","assets","getAsset","scriptName","fonts","Courier","correction","size","lineHeight","Helvetica","Fonts","標楷體","fetchFont","font","Error","fetch","then","r","arrayBuffer","fontBuffer","fontFace","window","FontFace","display","load","document","add","buffer","readAsArrayBuffer","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","ggID","id","noop","getMovePosition","x","y","dragX","dragY","width","height","pageWidth","pageHeight","newPositionTop","newPositionLeft","top","left","normalize","value","parseFloat","toFixed","save","pdfFile","objects","PDFLib","download","makeTextPDF","PDFDocument","pdfDoc","console","log","pagesProcesses","getPages","map","page","pageIndex","pageObjects","getHeight","getWidth","embedProcesses","object","type","embedJpg","embedPng","drawImage","lines","fontFamily","fontSize","dy","embedPdf","textPage","drawPage","path","scale","stroke","strokeWidth","pushGraphicsState","setLineCap","popGraphicsState","setLineJoin","LineCapStyle","LineJoinStyle","rgb","pushOperators","Round","color","w3color","toRgb","drawSvgPath","borderColor","g","b","borderWidth","all","forEach","p","pdfBytes","DragActions","Color","PdfPage","updateDimensions","canvasRef","createRef","useState","setWidth","innerHeight","setHeight","renderPage","_page","context","current","getContext","viewport","getViewport","render","canvasContext","useEffect","ref","Div","styled","div","ConfirmContent","title","onConfirm","onDismiss","Header","as","inverted","Button","onClick","negative","positionTop","positionLeft","handleMouseOut","handleMouseDown","handleMouseMove","handleMouseUp","handleImageScale","dimmerActive","cancelDelete","deleteImage","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onDoubleClick","style","position","borderStyle","cursor","Dimmer","Dimmable","dimmed","active","onClickOutside","data-direction","payload","removeImage","updateImageObject","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","mouseDown","setMouseDown","setPositionTop","setPositionLeft","direction","setDirection","NO_MOVEMENT","operation","setOperation","setDimmerActive","event","preventDefault","MOVE","movementX","movementY","SCALE","canvas","Math","min","newCanvasWidth","newCanvasHeight","toBlob","renderImage","onCancelDelete","includes","directions","currentTarget","dataset","split","DrawingModal","open","dismiss","confirm","drawing","svgRef","paths","setPaths","setPath","svgX","setSvgX","svgY","setSvgY","Infinity","minX","setMinX","maxX","setMaxX","minY","setMinY","maxY","setMaxY","setStrokeWidth","BLACK","setStroke","strokeDropdownOpen","setStrokeDropdownOpen","svg","getBoundingClientRect","closeModal","handleStrokeSelect","Modal","dimmer","onClose","Content","Menu","Item","header","Dropdown","item","text","key","selected","trigger","Label","onBlur","gridTemplateColumns","padding","Object","values","index","margin","clientX","clientY","max","strokeLinejoin","strokeLinecap","fill","d","Actions","content","labelPosition","icon","length","dx","reduce","fullPath","lineItem","positive","Drawing","deleteDrawing","removeDrawing","updateDrawingObject","setAttribute","helpContent","HelpModal","activeIndex","setActiveIndex","handleClick","data","Icon","scrolling","Accordion","fluid","Fragment","Title","App","pdfInput","imageInput","state","undefined","selectedPageIndex","pdfName","pages","allObjects","pagesScale","pageDimensions","saving","uploading","selectedDrawing","helpModalOpen","onUploadPDF","e","setState","files","target","dataTransfer","addPDF","pdf","Array","numPages","_","i","getPage","savePDF","clearInput","renderHiddenInputs","accept","onChange","onUploadImage","addImage","pIndex","handleFileInput","inputName","input","click","renderEmpty","Segment","placeholder","loading","primary","nextPage","prevState","previousPage","updateObject","objectToUpdate","newObject","updatePageDimensions","dimensions","removeObject","splice","openDrawingModal","closeDrawingModal","addDrawing","React","this","isMultiplePages","isLastPage","currentPage","allObjectsForCurrentPage","currentPageDimensions","Container","pointing","closeOnBlur","simple","disabled","Grid","Row","Column","verticalAlign","circular","compact","stacked","image","textAlign","drawingAttachment","Component","Boolean","location","hostname","match","script","createElement","body","appendChild","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f7964ba6.chunk.js","sourcesContent":["type ScriptName = 'pdfjsLib' | 'PDFLib' | 'download' | 'makeTextPDF' | 'w3Color';\n\ninterface Script {\n    name: ScriptName;\n    src: string;\n};\n\nconst scripts: Script[] = [\n    {\n      name: 'pdfjsLib',\n      src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n    },\n    {\n      name: 'PDFLib',\n      src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n    },\n    {\n      name: 'download',\n      src: 'https://unpkg.com/downloadjs@1.4.7',\n    },\n    { name: 'makeTextPDF', src: 'https://cdn.jsdelivr.net/gh/snamoah/react-pdf-editor/public/makeTextPDF.js' },\n    { name: 'w3Color', src: 'https://www.w3schools.com/lib/w3color.js' }\n];\n  \nconst assets: { [key: string]: any } = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n  \n  export const prepareAssets = () => {\n    // prepare scripts\n    scripts.forEach(({ name, src }) => {\n      assets[name] = new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = src;\n        script.onload = () => {\n          resolve(window[name as any]);\n          console.log(`${name} is loaded.`);\n        };\n        script.onerror = () =>\n          reject(`The script ${name} didn't load correctly.`);\n        document.body.appendChild(script);\n      });\n    });\n}\n\ninterface Font {\n    src?: string;\n    correction?: (size: number, lineHeight: number) => number;\n    [key: string]: any;\n};\n\ninterface FontsType {\n    [key: string]: Font\n}\n\nconst fonts: FontsType = {\n    Courier: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 6;\n      },\n    },\n    Helvetica: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 10;\n      },\n    },\n    'Times-Roman': {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 7;\n      },\n    },\n  };\n\n  // Available fonts\n  export const Fonts = {\n    ...fonts,\n    標楷體: {\n      src: '/CK.ttf', // 9.9 MB\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2;\n      },\n    },\n  };\n\n\n\n  export const fetchFont = (name: string) => {\n    if (fonts[name as any]) return fonts[name as any];\n\n    const font = Fonts[name as keyof typeof Fonts];\n    if (!font) throw new Error(`Font '${name}' not exists.`);\n\n    fonts[name] = fetch(font.src)\n      .then((r) => r.arrayBuffer())\n      .then((fontBuffer) => {\n        const fontFace = new (window as any).FontFace(name, fontBuffer);\n        fontFace.display = 'swap';\n        fontFace.load().then(() => (document as any).fonts.add(fontFace));\n        return {\n          ...font,\n          buffer: fontBuffer,\n        };\n      });\n  }","import { getAsset } from \"./prepareAssets\";\n\nexport const readAsArrayBuffer = (file: File) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  }\n  \n  export const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n      if (src instanceof Blob) {\n        const url = window.URL.createObjectURL(src);\n        img.src = url;\n      } else {\n        img.src = src;\n      }\n    });\n  }\n  \n  export function readAsDataURL(file: File) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  }\n  \n  export async function readAsPDF(file: File) {\n    const pdfjsLib = await getAsset('pdfjsLib');\n    // Safari possibly get webkitblobresource error 1 when using origin file blob\n    const blob = new Blob([file]);\n    const url = window.URL.createObjectURL(blob);\n    return pdfjsLib.getDocument(url).promise;\n  }","\nconst PADDING = 25;\n\nexport function ggID() {\n    let id = 0;\n    return function genId() {\n      return id++;\n    };\n}\n\nexport function timeout(ms: number) {\n    return new Promise((res) => setTimeout(res, ms));\n}\n\nexport const noop = () => {};\n\nexport const getMovePosition = (x: number, y: number, dragX: number, dragY: number, width: number, height: number, pageWidth: number, pageHeight: number) => {\n  const newPositionTop = y + dragY;\n  const newPositionLeft = x + dragX;\n  const newPositionRight = newPositionLeft + width;\n  const newPositionBottom = newPositionTop + height;\n\n  const top = newPositionTop < 0 \n          ? 0 \n          : newPositionBottom > pageHeight + PADDING\n          ? pageHeight - height + PADDING\n          : newPositionTop;\n  const left = newPositionLeft < 0 \n      ? 0 \n      : newPositionRight > pageWidth + PADDING\n      ? pageWidth - width + PADDING\n      : newPositionLeft\n\n  return {\n      top,\n      left,\n  }\n};\n\nexport const normalize = (value: number) => parseFloat((value / 255).toFixed(1))","import { readAsArrayBuffer } from './asyncReader';\nimport { fetchFont, getAsset } from './prepareAssets';\nimport { noop, normalize } from './helpers';\n\nexport async function save(pdfFile: File, objects: any[], name: string) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  const makeTextPDF = await getAsset('makeTextPDF');\n  let pdfDoc: { getPages: () => any[]; embedJpg: (arg0: unknown) => any; embedPng: (arg0: unknown) => any; embedPdf: (arg0: any) => [any] | PromiseLike<[any]>; save: () => any; };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const pageWidth = page.getWidth();\n    const embedProcesses = pageObjects.map(async (object: { type?: any; file?: any; x?: any; y?: any; width?: any; height?: any; lines?: any; lineHeight?: any; size?: any; fontFamily?: any; path?: any; scale?: any; stroke?: string, strokeWidth?: number }) => {\n      if (object.type === 'image') {\n        let { file, x, y, width, height } = object;\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          return noop;\n        }\n      } else if (object.type === 'text') {\n        let { x, y, lines, lineHeight, size, fontFamily } = object;\n        const font = await fetchFont(fontFamily);\n        const [textPage] = await pdfDoc.embedPdf(\n          await makeTextPDF({\n            lines,\n            fontSize: size,\n            lineHeight,\n            width: pageWidth,\n            height: pageHeight,\n            font: font?.buffer || fontFamily, // built-in font family\n            dy: font && font.correction && font.correction(size as number, lineHeight as number),\n          })\n        );\n        return () =>\n          page.drawPage(textPage, {\n            width: pageWidth,\n            height: pageHeight,\n            x,\n            y: -y,\n          });\n      } else if (object.type === 'drawing') {\n        let { x, y, path, scale, stroke, strokeWidth } = object;\n        const {\n          pushGraphicsState,\n          setLineCap,\n          popGraphicsState,\n          setLineJoin,\n          LineCapStyle,\n          LineJoinStyle,\n          rgb,\n        } = PDFLib;\n        return () => {\n          page.pushOperators(\n            pushGraphicsState(),\n            setLineCap(LineCapStyle.Round),\n            setLineJoin(LineJoinStyle.Round)\n          );\n          \n          const color = window.w3color(stroke!).toRgb();\n\n          page.drawSvgPath(path, {\n            borderColor: rgb(\n              normalize(color.r), \n              normalize(color.g), \n              normalize(color.b),\n            ),\n            borderWidth: strokeWidth,\n            scale,\n            x,\n            y: pageHeight - y,\n          });\n          page.pushOperators(popGraphicsState());\n        };\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}","import React, { useState, createRef, useEffect } from 'react';\n\ninterface Props {\n    page: any;\n    updateDimensions: ({ width, height }: { width: number, height: number}) => void;\n}\n\nexport const PdfPage = ({ page, updateDimensions }: Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [ width, setWidth ] = useState(500);\n    const [ height, setHeight ] = useState(window.innerHeight);\n\n    const renderPage = async (p: Promise<any>) => {\n       const _page = await p;\n       if (_page) {\n           const context = canvasRef.current?.getContext('2d');\n           const viewport = _page.getViewport({ scale: 1 });\n    \n           setWidth(viewport.width);\n           setHeight(viewport.height);\n           \n           \n           if (context) {\n                await _page.render({\n                   canvasContext: canvasRef.current?.getContext('2d'),\n                   viewport \n                }).promise;\n            \n                updateDimensions({ width: viewport.width, height: viewport.height });\n           }\n       }\n    }\n\n    useEffect(() => {\n        renderPage(page);\n    }, [page, width, height])\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={width} \n                height={height} />\n        </div>\n    )\n}","export enum DragActions {\n    MOVE = 'MOVE',\n    SCALE = 'SCALE',\n    NO_MOVEMENT = 'NO_MOVEMENT'\n}\n\nexport enum Color {\n  RED = 'red',\n  ORANGE = 'orange',\n  YELLOW = 'yellow',\n  OLIVE = 'olive',\n  GREEN = 'green',\n  TEAL = 'teal',\n  BLUE = 'blue',\n  VIOLOET = 'violet',\n  PURPLE = 'purple',\n  BROWN = 'brown',\n  GREY = 'grey',\n  BLACK = 'black',\n}","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    position: relative\n`;\n\n","import React from 'react';\nimport { Header, Button } from 'semantic-ui-react';\n\ninterface Props {\n    onConfirm: () => void;\n    onDismiss: () => void;\n    title: string;\n}\n\nexport const ConfirmContent: React.FC<Props> = ({\n    title,\n    onConfirm,\n    onDismiss\n}) => (\n    <div>\n        <Header as='h4' inverted>{title}</Header>\n\n        <Button onClick={onDismiss}>No</Button>\n        <Button negative onClick={onConfirm}>Yes</Button>\n    </div>\n);","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\nconst ADJUSTERS_DIMENSIONS = 20;\n\ninterface Props {\n    dimmerActive: boolean;\n    cancelDelete: () => void;\n    deleteImage: () => void;\n    width: number;\n    height: number;\n    canvasRef: RefObject<HTMLCanvasElement>;\n    positionTop: number;\n    positionLeft: number;\n    onClick: DragEventListener<HTMLDivElement>;\n    handleMouseOut: DragEventListener<HTMLDivElement>;\n    handleMouseDown: DragEventListener<HTMLDivElement>;\n    handleMouseMove: DragEventListener<HTMLDivElement>;\n    handleMouseUp : DragEventListener<HTMLDivElement>;\n    handleImageScale: DragEventListener<HTMLDivElement>;\n}\n\nexport const Image: React.FC<Props> = ({\n    canvasRef,\n    positionTop,\n    positionLeft,\n    width,\n    height,\n    handleMouseOut,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleImageScale,\n    dimmerActive,\n    cancelDelete,\n    deleteImage,\n    onClick\n}) => {\n\n\n    return ( \n        <div\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseOut}\n            onDoubleClick={onClick}\n            style={{\n                position: \"absolute\",\n                top: positionTop,\n                left: positionLeft,\n                borderStyle: \"dashed\",\n                borderWidth: 1,\n                borderColor:  'grey',\n                width: width + 2,\n                height: height + 2,\n                cursor: 'move',\n            }}\n        >\n            <Dimmer.Dimmable \n                as={Div}\n                size='medium'\n                dimmed={dimmerActive}\n            >\n                <canvas \n                    ref={canvasRef}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                />\n                <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n                    <ConfirmContent \n                        title=\"Delete?\" \n                        onConfirm={deleteImage}\n                        onDismiss={cancelDelete}\n                    />\n                </Dimmer>\n            </Dimmer.Dimmable>\n            <div\n                    data-direction=\"top-left\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleImageScale}\n                    style={{\n                        position: 'absolute',\n                        cursor: 'nwse-resize',\n                        top: -5,\n                        left: -5,\n                        width: ADJUSTERS_DIMENSIONS,\n                        height: ADJUSTERS_DIMENSIONS,\n                    }} \n                />\n        </div>\n    )\n\n}","import React, { useState, createRef, useEffect } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Image as ImageComponent } from '../components/Image';\n\nconst IMAGE_MAX_SIZE = 300;\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    removeImage: () => void;\n    updateImageObject: (imageObject: Partial<ImageObject>) => void;\n}\n\nexport const Image = ({ x, y, payload, width, height, pageWidth, removeImage, pageHeight, updateImageObject }: ImageObject & Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [canvasWidth, setCanvasWidth] = useState(width);\n    const [canvasHeight, setCanvasHeight] = useState(height);\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [direction, setDirection] = useState<string[]>([]);\n    const [operation, setOperation] = useState<DragActions>(DragActions.NO_MOVEMENT);\n\n    const [dimmerActive, setDimmerActive] = useState(false);\n\n    const renderImage = (img: HTMLImageElement) => {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n\n        const context = canvas.getContext('2d');\n        if (!context) return;\n\n        let scale = 1;\n        if (canvasWidth > IMAGE_MAX_SIZE) {\n            scale = IMAGE_MAX_SIZE / canvasWidth;\n        } \n\n        if (canvasHeight > IMAGE_MAX_SIZE) {\n            scale = Math.min(scale, IMAGE_MAX_SIZE / canvasHeight);\n        }\n\n        const newCanvasWidth = canvasWidth * scale;\n        const newCanvasHeight = canvasHeight * scale;\n\n        setCanvasWidth(newCanvasWidth);\n        setCanvasHeight(newCanvasHeight);\n\n        canvas.width = newCanvasWidth;\n        canvas.height = newCanvasHeight;\n\n        context.drawImage(payload, 0, 0, newCanvasWidth, newCanvasHeight);\n        canvas.toBlob(blob => {\n            updateImageObject({ \n                file: blob as File, \n                 width: newCanvasWidth,\n                 height: newCanvasHeight,\n            });\n        });\n    }\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(true);\n        setOperation(DragActions.MOVE);\n        const directions = event.currentTarget.dataset.direction;\n        if (directions) {\n            setDirection(directions.split('-'));\n            setOperation(DragActions.SCALE);\n        }\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                canvasWidth,\n                canvasHeight,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n\n        if (operation === DragActions.MOVE) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                canvasWidth,\n                canvasHeight,\n                pageWidth,\n                pageHeight\n            );\n        \n            updateImageObject({\n                x: left,\n                y: top,\n            });\n        }\n\n        if (operation === DragActions.SCALE) {\n            updateImageObject({\n                x: positionLeft,\n                y: positionTop,\n            });\n\n        }\n\n        setOperation(DragActions.NO_MOVEMENT);\n    }\n\n    const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (operation === DragActions.MOVE) {\n            handleMouseUp(event);\n        }\n    }\n\n    const handleImageScale = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            if (direction.includes('left')) {\n                setPositionLeft(positionLeft + event.movementX);\n                setCanvasWidth(canvasWidth - event.movementX);\n            }\n\n            if (direction.includes('top')) {\n                setPositionTop(positionTop + event.movementY);\n                setCanvasHeight(canvasHeight - event.movementY);\n            }\n\n            if (direction.includes('right')) {\n                setCanvasWidth(canvasWidth + event.movementX);\n            }\n\n            if (direction.includes('bottom')) {\n                setCanvasHeight(canvasHeight + event.movementY);\n            }\n        }\n    }\n\n    useEffect(() => {\n        renderImage(payload);\n    }, [payload, canvasWidth, canvasHeight]);\n\n    const handleClick = () =>  setDimmerActive(true);\n    const onCancelDelete = () => setDimmerActive(false);\n\n    const deleteImage = () => {\n        onCancelDelete();\n        removeImage();\n    }\n\n    return (\n        <ImageComponent\n            onClick={handleClick}\n            dimmerActive={dimmerActive}\n            cancelDelete={onCancelDelete}\n            deleteImage={deleteImage}\n            positionLeft={positionLeft}\n            positionTop={positionTop}\n            canvasRef={canvasRef}\n            width={canvasWidth}\n            height={canvasHeight}\n            handleImageScale={handleImageScale}\n            handleMouseDown={handleMouseDown}\n            handleMouseUp={handleMouseUp}\n            handleMouseMove={handleMouseMove}\n            handleMouseOut={handleMouseOut}\n        />\n    );\n}\n","import React, { useState, createRef, useEffect } from 'react';\nimport { Modal, Button, Menu, Dropdown, Label } from \"semantic-ui-react\";\nimport { Color } from '../entities';\n\ninterface Props {\n    open: boolean;\n    dismiss: () => void;\n    confirm: (drawing?: { width: number, height: number, path: string, strokeWidth: number, stroke: string }) => void;\n    drawing?: DrawingObject;\n}\n\nexport const DrawingModal = ({ open, dismiss, confirm, drawing }: Props) => {\n    const svgRef = createRef<SVGSVGElement>();\n    const [paths, setPaths] = useState<Array<[string, number, number]>>([]);\n    const [path, setPath] = useState((drawing && drawing.path) || '');\n    const [svgX, setSvgX] = useState(0);\n    const [svgY, setSvgY] = useState(0);\n    const [minX, setMinX] = useState(Infinity);\n    const [maxX, setMaxX] = useState(0);\n    const [minY, setMinY] = useState(Infinity);\n    const[ maxY, setMaxY] = useState(0);\n    const [mouseDown, setMouseDown] = useState(false);\n    const [strokeWidth, setStrokeWidth] = useState(5);\n    const [stroke, setStroke] = useState(Color.BLACK);\n    const [strokeDropdownOpen, setStrokeDropdownOpen] = useState(false)\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        if (!svg) return;\n        const { x, y } = svg.getBoundingClientRect();\n        setSvgX(x);\n        setSvgY(y);\n    }, [svgRef]);\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(true);\n\n        const x = event.clientX - svgX;\n        const y = event.clientY - svgY;\n        setMinX(Math.min(minX, x));\n        setMaxX(Math.max(maxX, x));\n        setMinY(Math.min(minY, y));\n        setMaxY(Math.max(maxY, y));\n        setPath(path + `M${x},${y}`);\n        setPaths([...paths, ['M', x, y]]);\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        if (!mouseDown) return;\n\n        const x = event.clientX - svgX;\n        const y = event.clientY - svgY;\n        setMinX(Math.min(minX, x));\n        setMaxX(Math.max(maxX, x));\n        setMinY(Math.min(minY, y));\n        setMaxY(Math.max(maxY, y));\n        setPath(path + `L${x},${y}`);\n        setPaths([...paths, ['L', x, y]]);\n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n    }\n\n    const resetDrawingBoard = () => {\n        setPaths([]);\n        setPath('');\n        setMinX(Infinity);\n        setMaxX(0);\n        setMinY(Infinity);\n        setMaxY(0);\n        setStrokeWidth(5);\n        setStroke(Color.BLACK);\n    }\n\n    const handleDone = () => {\n        if (!paths.length) {\n            confirm();\n            return;\n        }\n        \n        const boundingWidth = maxX - minX;\n        const boundingHeight = maxY - minY;\n        \n        const dx = -(minX - 10);\n        const dy = -(minY - 10);\n\n        confirm({\n            stroke,\n            strokeWidth,\n            width: boundingWidth + 20,\n            height: boundingHeight + 20,\n            path: paths.reduce((fullPath, lineItem) => \n                `${fullPath}${lineItem[0]}${lineItem[1] + dx}, ${lineItem[2] + dy}`\n            , ''),\n        });  \n\n        closeModal();\n    }\n\n    const closeModal = () => {\n        resetDrawingBoard();\n        dismiss();\n    }\n\n    // TODO: Move to config\n    const strokeSizes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleStrokeSelect = (color: Color) => () => {\n        setStroke(color);\n        setStrokeDropdownOpen(false);\n    }\n\n    return (\n        <Modal \n            size=\"small\"\n            dimmer=\"inverted\"\n            open={open}\n            onClose={closeModal}\n        >\n            <Modal.Header>Add your Drawing</Modal.Header>\n            <Modal.Content>\n                <Menu size='tiny'>\n                    <Menu.Item header>Tools</Menu.Item>\n                    {/* <Menu.Item><Icon name=\"undo\" /></Menu.Item>\n                    <Menu.Item><Icon name=\"redo\" /></Menu.Item> */}\n                    <Menu.Menu position=\"right\">\n                        <Dropdown item text={`${strokeWidth}`}>\n                            <Dropdown.Menu>\n                            {strokeSizes.map(size => (\n                                <Dropdown.Item \n                                    key={size} \n                                    selected={size === strokeWidth}\n                                    onClick={() => setStrokeWidth(size)}\n                                >\n                                    {size}\n                                </Dropdown.Item>\n                            )) }\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <Dropdown\n                            item \n                            trigger={(\n                              <Label color={stroke} /> \n                            )}\n                            onClick={() => setStrokeDropdownOpen(true)} \n                            onBlur={() => setStrokeDropdownOpen(false)}\n                        >\n                            <Dropdown.Menu open={strokeDropdownOpen}>\n                                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', padding: 5 }}>\n                                    {Object.values(Color).map((color, index) => (\n                                        <div style={{ margin: 2.5 }}>\n                                            <Label\n                                                key={index} \n                                                color={color} \n                                                onClick={handleStrokeSelect(color)} \n                                            />\n                                        </div>\n                                    ))}\n                                </div>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        {/* <Dropdown item text={stroke}>\n                            <Dropdown.Menu>\n                                <Card.Group itemsPerRow={3}>\n                                    {Object.values(Color).map((color, index) => (\n                                        <Card inverted key={index} color={color} />\n                                    ))}\n                                </Card.Group>\n                            </Dropdown.Menu>\n                        </Dropdown> */}\n                    </Menu.Menu>\n                </Menu>\n                <div\n                    onMouseDown={handleMouseDown}\n                    onMouseMove={handleMouseMove}\n                    onMouseUp={handleMouseUp}\n                >\n                    <svg \n                        ref={svgRef}\n                        style={{\n                            width: '100%',\n                            height: '50vh',\n                        }}>\n                        <path\n                            strokeWidth={strokeWidth}\n                            strokeLinejoin=\"round\"\n                            strokeLinecap=\"round\"\n                            stroke={stroke}\n                            fill=\"none\"\n                            d={path}\n                        />\n                    </svg>\n                </div>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button\n                    color=\"black\"\n                    content=\"Cancel\"\n                    onClick={closeModal} />\n                <Button\n                    content=\"Done\"\n                    labelPosition=\"right\"\n                    icon=\"checkmark\"\n                    onClick={handleDone}\n                    positive />\n            </Modal.Actions>\n        </Modal>\n    )\n}","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\ninterface Props {\n    path?: string;\n    stroke?: string;\n    width: number;\n    height: number;\n    strokeWidth?: number;\n    positionTop: number;\n    positionLeft: number;\n    dimmerActive: boolean;\n    cancelDelete: () => void;\n    deleteDrawing: () => void;\n    onClick: () => void;\n    svgRef: RefObject<SVGSVGElement>;\n    handleMouseDown: DragEventListener<HTMLDivElement>\n    handleMouseUp: DragEventListener<HTMLDivElement>\n    handleMouseMove: DragEventListener<HTMLDivElement>\n    handleMouseOut: DragEventListener<HTMLDivElement>\n}\nexport const Drawing: React.FC<Props> = ({\n    dimmerActive,\n    cancelDelete,\n    deleteDrawing,\n    positionTop,\n    positionLeft,\n    width,\n    height,\n    svgRef,\n    path,\n    stroke,\n    strokeWidth,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseOut,\n    handleMouseUp,\n    onClick,\n}) => {\n\n    return (\n        <div\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseOut}\n            onDoubleClick={onClick}\n            style={{\n                position: 'absolute',\n                top: positionTop,\n                left: positionLeft,\n                width,\n                height,\n                cursor: 'move',\n            }}\n        >\n            <Dimmer.Dimmable as={Div} dimmed={dimmerActive}>\n                <svg\n                    ref={svgRef}\n                >\n                        <path\n                            strokeWidth={strokeWidth}\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            stroke={stroke}\n                            fill=\"none\"\n                            d={path}\n                        />\n                </svg>\n                <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n                    <ConfirmContent \n                        title=\"Delete?\" \n                        onConfirm={deleteDrawing}\n                        onDismiss={cancelDelete}\n                    />\n                </Dimmer>\n            </Dimmer.Dimmable>\n        </div>\n    )\n}","import React, { createRef, useEffect, useState } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Drawing as DrawingComponent } from '../components/Drawing';\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    removeDrawing: () => void;\n    updateDrawingObject: (drawingObject: Partial<DrawingObject>) => void;\n}\n\nexport const Drawing = ({ x, y, width, height, stroke, strokeWidth, path, pageWidth, pageHeight, removeDrawing, updateDrawingObject }: DrawingObject & Props) => {\n    const svgRef = createRef<SVGSVGElement>();\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [operation, setOperation] = useState<DragActions>(DragActions.NO_MOVEMENT);\n    const [dimmerActive, setDimmerActive] = useState(false);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        if (svg) {\n            svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n        }\n    }, [svgRef, width, height]);\n\n    const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n        setMouseDown(true);\n        setOperation(DragActions.MOVE);\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n\n        if (operation === DragActions.MOVE) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n        \n            updateDrawingObject({\n                x: left,\n                y: top,\n            });\n        }\n\n        if (operation === DragActions.SCALE) {\n            updateDrawingObject({\n                x: positionLeft,\n                y: positionTop,\n            });\n\n        }\n\n        setOperation(DragActions.NO_MOVEMENT);\n    }\n\n    const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (operation === DragActions.MOVE) {\n            handleMouseUp(event);\n        }\n    }\n\n    const handleClick = () => setDimmerActive(true);\n    const cancelDelete = () => setDimmerActive(false);\n\n    const confirmDelete = () => {\n        cancelDelete();\n        removeDrawing();\n    }\n    return (\n        <DrawingComponent\n            stroke={stroke} \n            strokeWidth={strokeWidth}\n            path={path}\n            width={width}\n            svgRef={svgRef}\n            height={height}\n            onClick={handleClick}\n            cancelDelete={cancelDelete}\n            dimmerActive={dimmerActive}\n            deleteDrawing={confirmDelete}\n            handleMouseDown={handleMousedown}\n            handleMouseMove={handleMouseMove}\n            handleMouseOut={handleMouseOut}\n            handleMouseUp={handleMouseUp}\n            positionLeft={positionLeft}\n            positionTop={positionTop}\n        />\n    )\n}","export const helpContent = [\n    {\n        title: `What's this?`,\n        content: [\n            'This is a piece of sofware that allows you to edit your PDFs. You can add images and drawings to your pdf.',\n            `And there are more features coming up like adding text.`,\n        ]\n    },\n    {\n        title: 'How do I delete an attached image or drawing?',\n        content: [\n            `Easy! Just double click the image or drawing. You will be asked to confirm delete and then, voila, it's gone!`\n        ]\n    },\n    {\n        title: 'Can I add multiple images or drawings on a page?',\n        content: [\n            `Yes.`\n        ]\n    },\n    {\n        title: 'How can I delete my uploaded pdf?',\n        content: [\n            `You can't delete the uploaded pdf.`,\n            `You will have to upload a new one. This is a client-side app so you did not actually uploaded it to any server. Don't worry :)`\n        ]\n    },\n    {\n        title: 'Can I resize a drawing?',\n        content: [\n            `No. Currently it is not possible to resize a drawing`,\n        ]\n    },\n    {\n        title: 'Can I resize an image?',\n        content: [\n            `Yes you can. Move your mouse to the top-left corner of the image.`,\n            `The cursor should change and you should be able to resize from there`\n        ]\n    },\n    {\n        title: 'Can I load multi-page pdf?',\n        content: [\n            'Yes.'\n        ]\n    }\n]","import React, { useState } from 'react';\nimport { Modal, Accordion, Icon, AccordionTitleProps } from 'semantic-ui-react';\nimport { helpContent } from '../entities/helpContent';\ninterface Props {\n    open: boolean;\n    dismiss: () => void;\n}\n\nexport const HelpModal: React.FC<Props> = ({ open, dismiss }) => {\n    const [activeIndex, setActiveIndex] = useState(-1);\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>, data: AccordionTitleProps) => {\n        const { index } = data;\n        const newIndex = activeIndex === index ? -1 : (index as number);\n        setActiveIndex(newIndex);\n    }\n\n    return (\n    <>\n        <Modal \n            open={open}\n            onClose={dismiss}\n            size='small'\n            dimmer='inverted'\n        >\n            <Modal.Header>\n                <Icon name=\"question\" />\n                FAQ\n            </Modal.Header>\n            <Modal.Content scrolling>\n                <Accordion fluid styled>\n                    {helpContent.map((content, index) => (\n                        <React.Fragment key={index}>\n                            <Accordion.Title\n                                active={activeIndex === index} \n                                index={index}\n                                onClick={handleClick}\n                            >\n                                <Icon name=\"dropdown\" />\n                                {content.title}\n                            </Accordion.Title>\n                            <Accordion.Content active={activeIndex === index}>\n                                {content.content.map((text, index) => (\n                                    <p key={index}>{text}</p>\n                                ))}\n                            </Accordion.Content>\n                        </React.Fragment>\n                    ))}\n                </Accordion>\n            </Modal.Content>\n        </Modal>\n    </>\n)\n                    \n};","\nimport React, { RefObject } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Menu, Container, Segment, Header, Icon, Button, Grid, Dropdown } from 'semantic-ui-react';\nimport { readAsPDF, readAsDataURL, readAsImage } from './utils/asyncReader';\nimport { save } from './utils/pdf';\nimport { PdfPage } from './components/PdfPage';\nimport { Image } from './containers/Image';\nimport { ggID } from './utils/helpers';\nimport { DrawingModal } from './components/DrawingModal';\nimport { Drawing } from './containers/Drawing';\nimport { HelpModal } from './components/HelpModal';\n\n\ninterface State {\n  pdfFile?: File;\n    selectedPageIndex: number;\n    pdfName: string;\n    pages: any[];\n    allObjects: AllObjects[];\n    pagesScale: any[];\n    pageDimensions: Dimensions[];\n    saving: boolean;\n    drawing: boolean;\n    uploading: boolean;\n    selectedDrawing: number;\n    helpModalOpen: boolean;\n}\n\nclass App extends React.Component {\n  pdfInput: RefObject<HTMLInputElement>;\n  imageInput: RefObject<HTMLInputElement>;\n\n  state: State = {\n    pdfFile: undefined,\n    selectedPageIndex: -1,\n    pdfName: '',\n    pages: [],\n    allObjects: [],\n    pagesScale: [],\n    pageDimensions: [],\n    saving: false,\n    drawing: false,\n    uploading: false,\n    selectedDrawing: 0,\n    helpModalOpen: false,\n  }\n\n  constructor() {\n    super({});\n\n    this.pdfInput = React.createRef<HTMLInputElement>();\n    this.imageInput = React.createRef<HTMLInputElement>();\n  }\n\n  onUploadPDF = async (e: React.ChangeEvent<HTMLInputElement>  & { dataTransfer?: DataTransfer }) => {\n    this.setState({ uploading: true });\n    const files: FileList | undefined =  e.target.files || (e.dataTransfer && e.dataTransfer.files);\n    if (!files) return;\n    \n    const file = files[0];\n    if (!file || file.type !== \"application/pdf\") return;\n\n    this.setState({\n      selectedPageIndex: -1\n    });\n\n    try {\n      await this.addPDF(file);\n\n      this.setState({\n        selectedPageIndex: 0\n      });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ uploading: false })\n    }\n  }\n\n  addPDF = async (file: File) => {\n    try {\n      const pdf = await readAsPDF(file);\n      this.setState({\n        pdfName: file.name,\n        pdfFile: file,\n        pages: Array(pdf.numPages)\n          .fill(0)\n          .map((_, i) => pdf.getPage(i + 1)),\n        allObjects: Array(pdf.numPages).fill([]),\n        pagesScale: Array(pdf.numPages).fill(1),\n        pageDimensions: Array(pdf.numPages).fill({ width: 0, height: 0 }) \n      });\n    } catch (e) {\n      console.log(\"Failed to add pdf.\");\n      throw e;\n    }\n  }\n\n  savePDF = async () => {\n    const { pdfFile, saving, pages, allObjects, pdfName } = this.state;\n    if (!pdfFile || saving || !pages.length) return;\n\n    this.setState({ saving: true });\n    \n    try {\n      await save(pdfFile, allObjects, pdfName);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ saving: false });\n    }\n  }\n\n  clearInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.value = '';\n  }\n\n  renderHiddenInputs = () => (\n    <>\n      <input\n        ref={this.pdfInput}\n        type=\"file\"\n        name=\"pdf\"\n        id=\"pdf\"\n        accept=\"application/pdf\"\n        onChange={this.onUploadPDF}\n        onClick={this.clearInput}\n        style={{ display: 'none' }} />\n      { this.state.selectedPageIndex > -1 && (\n          <input\n            ref={this.imageInput}\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            onClick={this.clearInput}\n            style={{ display: 'none' }}\n            onChange={this.onUploadImage} \n          /> \n        ) \n      }\n    </>\n  )\n\n  onUploadImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { selectedPageIndex } = this.state;\n    const file: File | null = e.target.files && e.target.files[0];\n    if (file && selectedPageIndex >= 0) {\n      this.addImage(file);\n    }\n  }\n\n  addImage = async (file: File) => {\n    const { allObjects, selectedPageIndex } = this.state;\n    try {\n      // get dataURL to prevent canvas from tainted\n      const url = await readAsDataURL(file);\n      const img = await readAsImage(url as any);\n      const id = ggID();\n      const { width, height } = img;\n      const object: ImageObject = {\n        id,\n        type: \"image\",\n        width,\n        height,\n        x: 0,\n        y: 0,\n        payload: img,\n        file\n      };\n      this.setState({\n        allObjects: allObjects.map((objects, pIndex) =>\n          pIndex === selectedPageIndex ? [...objects, object] : objects\n        )\n      });\n    } catch (e) {\n      console.log(`Fail to add image.`, e);\n    }\n  }\n\n  handleFileInput = (inputName: string) => () => {\n    const input = inputName === 'pdf' \n    ? this.pdfInput.current\n    : inputName === 'image'\n    ? this.imageInput.current\n    : null;\n\n    if (input) {\n      input.click();\n    }\n  }\n\n  renderEmpty = () => (\n    <Segment placeholder loading={this.state.uploading} style={{ height: '80vh' }}>\n      <Header icon>\n        <Icon name='file pdf outline' />\n        Upload your PDF to start editing!\n      </Header>\n      <Button primary onClick={this.handleFileInput('pdf')}>Load PDF</Button>\n    </Segment>\n  );\n\n  nextPage = () => {\n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex + 1,\n    }))\n  }\n\n  previousPage = () => { \n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex - 1,\n    }))\n  }\n\n  updateObject = (id: number, pageIndex: number, payload: Partial<ImageObject>) => {\n    const { allObjects } = this.state;\n    let pageObjects = allObjects[pageIndex];\n    const objectToUpdate = pageObjects[id];\n    const newObject: Attachment = { ...objectToUpdate, ...(payload as Attachment)};\n    pageObjects[id] = newObject;\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? pageObjects : objects\n      )\n    })\n  }\n\n  updatePageDimensions = (pageIndex: number, dimensions: { width: number, height: number }) => {\n    this.setState({\n      pageDimensions: this.state.pageDimensions.map((page, index) => \n        pageIndex === index ? dimensions : page\n      )\n    });\n  }\n\n  removeObject = (id: number, pageIndex: number) => {\n    const { allObjects } = this.state;\n    const pageObjects = allObjects[pageIndex];\n    pageObjects.splice(id, 1);\n    allObjects[pageIndex] = pageObjects;\n    this.setState({ allObjects });\n  }\n\n  openDrawingModal = () => {\n    this.setState({\n      drawing: true\n    });\n  }\n\n  closeDrawingModal = () => {\n    this.setState({\n      drawing: false\n    })\n  }\n\n  addDrawing = (pageIndex: number, drawing?: { width: number, height: number, path: string }) => {\n    const { allObjects } = this.state;\n    if (!drawing) return;\n\n    const newObject: DrawingObject = {\n      id: ggID(),\n      type: 'drawing',\n      ...drawing,\n      x: 0,\n      y: 0,\n    }\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? [...objects, newObject] : objects\n      )\n    })\n  }\n\n  render() {\n    const { allObjects, pdfName, pdfFile, pages, saving, selectedPageIndex, pageDimensions } = this.state;\n    const isMultiplePages = pages.length > 1;\n    const isLastPage = selectedPageIndex === pages.length - 1;\n    const currentPage = pages[selectedPageIndex];\n    const allObjectsForCurrentPage = allObjects[selectedPageIndex];\n    const currentPageDimensions = pageDimensions[selectedPageIndex];\n  \n    return (\n      <Container style={{ margin: 30 }}>\n        {this.renderHiddenInputs()}\n          <Menu pointing>\n            <Menu.Item header>PDF Editor</Menu.Item>\n            <Menu.Menu position=\"right\">\n              {pdfFile && (\n                <>\n                  <Dropdown \n                    item \n                    closeOnBlur\n                    icon=\"edit outline\" \n                    simple>\n                    <Dropdown.Menu>\n                      <Dropdown.Item onClick={this.handleFileInput('image')}>\n                        Add Image\n                      </Dropdown.Item>\n                      <Dropdown.Item onClick={this.openDrawingModal}>Add Drawing</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  <Menu.Item\n                    name={saving ? 'Saving...' : 'Save'}\n                    disabled={saving}\n                    onClick={this.savePDF} \n                  />\n                  <Menu.Item \n                    name=\"Upload New\"\n                    onClick={this.handleFileInput('pdf')} \n                  />\n                </>\n              )}\n              <Menu.Item onClick={() => this.setState({ helpModalOpen: true })}>\n                <Icon name=\"question circle outline\" />\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        \n        \n        {!pdfFile ? this.renderEmpty() : (\n          <Grid>\n              <Grid.Row>\n                <Grid.Column width={3} verticalAlign=\"middle\">\n                  {isMultiplePages && selectedPageIndex !== 0 && (\n                    <Button circular icon=\"angle left\" onClick={this.previousPage} />\n                  )}\n                </Grid.Column>\n                <Grid.Column width={10}>\n                  {currentPage && (\n                      <Segment\n                        style={{ position: 'relative' }}\n                        compact\n                        stacked={isMultiplePages && !isLastPage}\n                      >\n                        <PdfPage\n                          updateDimensions={(dimensions) => this.updatePageDimensions(selectedPageIndex, dimensions)}\n                          page={currentPage} />\n                          {allObjectsForCurrentPage && allObjectsForCurrentPage.map((data, index) => {\n                            const key = `${pdfName}-${index}`;\n                            if (data.type === 'image') {\n                              return (\n                                  <Image\n                                    removeImage={() => this.removeObject(index, selectedPageIndex)}\n                                    key={key}\n                                    pageWidth={currentPageDimensions.width}\n                                    pageHeight={currentPageDimensions.height}\n                                    updateImageObject={(image) => this.updateObject(index, selectedPageIndex, image)}\n                                    {...(data as ImageObject)}  \n                                  />\n                              )\n                            }\n\n                            if (data.type === 'drawing') {\n                              return (\n                                <Drawing\n                                  key={key}\n                                  removeDrawing={() => this.removeObject(index, selectedPageIndex)}\n                                  pageWidth={currentPageDimensions.width}\n                                  pageHeight={currentPageDimensions.height}\n                                  updateDrawingObject={(drawing) => this.updateObject(index, selectedPageIndex, drawing)}\n                                  {...data as DrawingObject}\n                                />\n                              )\n                            }\n                            return null;\n                          })}\n                      </Segment>\n                    )\n                  }\n                </Grid.Column>\n                <Grid.Column width={3} verticalAlign=\"middle\" textAlign=\"right\">\n                  {isMultiplePages && selectedPageIndex !== pages.length - 1 && (\n                    <Button circular icon=\"angle right\" onClick={this.nextPage}/>\n                  )}\n                </Grid.Column>\n              </Grid.Row>\n          </Grid>\n        )}\n\n        {\n          <DrawingModal \n            open={this.state.drawing} \n            dismiss={this.closeDrawingModal}\n            confirm={(drawingAttachment) => this.addDrawing(selectedPageIndex, drawingAttachment)}\n          />\n        }\n\n        {<HelpModal \n          open={this.state.helpModalOpen}\n          dismiss={() => this.setState({ helpModalOpen: false })}\n           />}\n      </Container>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}