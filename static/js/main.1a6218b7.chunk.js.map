{"version":3,"sources":["utils/prepareAssets.ts","utils/asyncReader.ts","utils/helpers.ts","utils/pdf.ts","components/PdfPage.tsx","entities/index.ts","ui/components/Div.ts","components/ConfirmContent.tsx","components/Image.tsx","containers/Image.tsx","components/DrawingModal.tsx","components/Drawing.tsx","containers/Drawing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scripts","name","src","assets","getAsset","scriptName","fonts","Courier","correction","size","lineHeight","Helvetica","Fonts","標楷體","fetchFont","font","Error","fetch","then","r","arrayBuffer","fontBuffer","fontFace","window","FontFace","display","load","document","add","buffer","readAsArrayBuffer","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","ggID","id","noop","getMovePosition","x","y","dragX","dragY","width","height","pageWidth","pageHeight","newPositionTop","newPositionLeft","top","left","save","pdfFile","objects","PDFLib","download","makeTextPDF","PDFDocument","pdfDoc","console","log","pagesProcesses","getPages","map","page","pageIndex","pageObjects","getHeight","getWidth","embedProcesses","object","type","embedJpg","embedPng","drawImage","lines","fontFamily","fontSize","dy","embedPdf","textPage","drawPage","path","scale","pushGraphicsState","setLineCap","popGraphicsState","setLineJoin","LineCapStyle","LineJoinStyle","pushOperators","Round","drawSvgPath","borderWidth","all","forEach","p","pdfBytes","DragActions","PdfPage","updateDimensions","canvasRef","createRef","useState","setWidth","innerHeight","setHeight","renderPage","_page","context","current","getContext","viewport","getViewport","render","canvasContext","useEffect","ref","Div","styled","div","ConfirmContent","title","onConfirm","onDismiss","Header","as","inverted","Button","onClick","negative","positionTop","positionLeft","handleMouseOut","handleMouseDown","handleMouseMove","handleMouseUp","handleImageScale","dimmerActive","cancelDelete","deleteImage","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onDoubleClick","style","position","borderStyle","borderColor","cursor","Dimmer","Dimmable","dimmed","active","onClickOutside","data-direction","payload","removeImage","updateImageObject","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","mouseDown","setMouseDown","setPositionTop","setPositionLeft","direction","setDirection","NO_MOVEMENT","operation","setOperation","setDimmerActive","event","preventDefault","MOVE","movementX","movementY","SCALE","canvas","Math","min","newCanvasWidth","newCanvasHeight","toBlob","renderImage","onCancelDelete","includes","directions","currentTarget","dataset","split","DrawingModal","open","dismiss","confirm","drawing","svgRef","paths","setPaths","setPath","svgX","setSvgX","svgY","setSvgY","Infinity","minX","setMinX","maxX","setMaxX","minY","setMinY","maxY","setMaxY","svg","getBoundingClientRect","closeModal","Modal","onClose","Content","clientX","clientY","max","strokeWidth","strokeLinejoin","strokeLinecap","stroke","fill","d","Actions","color","content","labelPosition","icon","length","dx","reduce","fullPath","lineItem","positive","Drawing","deleteDrawing","removeDrawing","updateDrawingObject","setAttribute","App","pdfInput","imageInput","state","undefined","selectedPageIndex","pdfName","pages","allObjects","pagesScale","pageDimensions","saving","uploading","selectedDrawing","onUploadPDF","e","setState","files","target","dataTransfer","addPDF","pdf","Array","numPages","_","i","getPage","savePDF","clearInput","value","renderHiddenInputs","accept","onChange","onUploadImage","addImage","pIndex","handleFileInput","inputName","input","click","renderEmpty","Segment","placeholder","loading","Icon","primary","nextPage","prevState","previousPage","updateObject","objectToUpdate","newObject","index","updatePageDimensions","dimensions","removeObject","splice","openDrawingModal","closeDrawingModal","addDrawing","React","this","isMultiplePages","isLastPage","currentPage","allObjectsForCurrentPage","currentPageDimensions","Container","margin","Menu","pointing","Item","header","Dropdown","item","closeOnBlur","simple","disabled","Grid","Row","Column","verticalAlign","circular","compact","stacked","data","key","image","textAlign","drawingAttachment","Component","Boolean","location","hostname","match","script","createElement","body","appendChild","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"8XAOMA,EAAoB,CACtB,CACEC,KAAM,WACNC,IAAK,yDAEP,CACED,KAAM,SACNC,IAAK,uDAEP,CACED,KAAM,WACNC,IAAK,sCAEP,CAAED,KAAM,cAAeC,IAAK,+EAG1BC,EAAiC,GAC1BC,EAAW,SAACC,GAAD,OAAwBF,EAAOE,IA6BjDC,EAAmB,CACrBC,QAAS,CACPC,WADO,SACIC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,EAAIA,EAAO,IAGnDE,UAAW,CACTH,WADS,SACEC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,EAAIA,EAAO,KAGnD,cAAe,CACbD,WADa,SACFC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,EAAIA,EAAO,KAMxCG,EAAK,eACbN,EADa,CAEhBO,qBAAK,CACHX,IAAK,UACLM,WAFG,SAEQC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,MAO7BK,EAAY,SAACb,GACxB,GAAIK,EAAML,GAAc,OAAOK,EAAML,GAErC,IAAMc,EAAOH,EAAMX,GACnB,IAAKc,EAAM,MAAM,IAAIC,MAAJ,gBAAmBf,EAAnB,kBAEjBK,EAAML,GAAQgB,MAAMF,EAAKb,KACtBgB,MAAK,SAACC,GAAD,OAAOA,EAAEC,iBACdF,MAAK,SAACG,GACL,IAAMC,EAAW,IAAKC,OAAeC,SAASvB,EAAMoB,GAGpD,OAFAC,EAASG,QAAU,OACnBH,EAASI,OAAOR,MAAK,kBAAOS,SAAiBrB,MAAMsB,IAAIN,MAChD,eACFP,EADL,CAEEc,OAAQR,QChGLS,EAAoB,SAACC,GAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,kBAAMJ,EAAQE,EAAOG,SACrCH,EAAOI,QAAUL,EACjBC,EAAOL,kBAAkBC,OAIhBS,EAAc,SAACtC,GAC1B,OAAO,IAAI8B,SAAQ,SAACC,EAASC,GAC3B,IAAMO,EAAM,IAAIC,MAGhB,GAFAD,EAAIJ,OAAS,kBAAMJ,EAAQQ,IAC3BA,EAAIF,QAAUL,EACVhC,aAAeyC,KAAM,CACvB,IAAMC,EAAMrB,OAAOsB,IAAIC,gBAAgB5C,GACvCuC,EAAIvC,IAAM0C,OAEVH,EAAIvC,IAAMA,MAKT,SAAS6C,EAAchB,GAC5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,kBAAMJ,EAAQE,EAAOG,SACrCH,EAAOI,QAAUL,EACjBC,EAAOY,cAAchB,MAIlB,SAAeiB,EAAtB,kC,4CAAO,WAAyBjB,GAAzB,mBAAAkB,EAAA,sEACkB7C,EAAS,YAD3B,cACC8C,EADD,OAGCC,EAAO,IAAIR,KAAK,CAACZ,IACjBa,EAAMrB,OAAOsB,IAAIC,gBAAgBK,GAJlC,kBAKED,EAASE,YAAYR,GAAKS,SAL5B,4C,iCC/BF,SAASC,IACZ,IAAIC,EAAK,EACT,OAAO,WACL,OAAOA,KAQN,IAAMC,EAAO,aAEPC,EAAkB,SAACC,EAAWC,EAAWC,EAAeC,EAAeC,EAAeC,EAAgBC,EAAmBC,GACpI,IAAMC,EAAiBP,EAAIE,EACrBM,EAAkBT,EAAIE,EAe5B,MAAO,CACHQ,IAZQF,EAAiB,EACnB,EAHgBA,EAAiBH,EAIbE,EAvBhB,GAwBJA,EAAaF,EAxBT,GAyBJG,EASNG,KARSF,EAAkB,EACzB,EATmBA,EAAkBL,EAUlBE,EA5BX,GA6BRA,EAAYF,EA7BJ,GA8BRK,IC3BD,SAAeG,EAAtB,sC,4CAAO,WAAoBC,EAAeC,EAAgBvE,GAAnD,yBAAAgD,EAAA,sEACgB7C,EAAS,UADzB,cACCqE,EADD,gBAEkBrE,EAAS,YAF3B,cAECsE,EAFD,gBAGqBtE,EAAS,eAH9B,cAGCuE,EAHD,qBAOYF,EAAOG,YAPnB,UAO0C9C,EAAkByC,GAP5D,0CAO+B7C,KAP/B,wBAOHmD,EAPG,+DASHC,QAAQC,IAAI,uBATT,oBAaCC,EAAiBH,EAAOI,WAAWC,IAAlB,uCAAsB,WAAOC,EAAMC,GAAb,qBAAAnC,EAAA,6DACrCoC,EAAcb,EAAQY,GAEtBnB,EAAakB,EAAKG,YAClBtB,EAAYmB,EAAKI,WACjBC,EAAiBH,EAAYH,IAAZ,uCAAgB,WAAOO,GAAP,iEAAAxC,EAAA,yDACjB,UAAhBwC,EAAOC,KAD0B,oBAE7B3D,EAA8B0D,EAA9B1D,KAAM2B,EAAwB+B,EAAxB/B,EAAGC,EAAqB8B,EAArB9B,EAAGG,EAAkB2B,EAAlB3B,MAAOC,EAAW0B,EAAX1B,OAFU,SAKf,eAAdhC,EAAK2D,KALwB,6BAMnBb,EANmB,SAMG/C,EAAkBC,GANrB,yCAMZ4D,SANY,wBAM/BlD,EAN+B,2CAQnBoC,EARmB,UAQG/C,EAAkBC,GARrB,0CAQZ6D,SARY,wBAQ/BnD,EAR+B,yCAU1B,kBACL0C,EAAKU,UAAUpD,EAAK,CAClBiB,IACAC,EAAGM,EAAaN,EAAII,EACpBD,QACAC,cAf6B,yCAkBjCe,QAAQC,IAAI,yBAAZ,MAlBiC,kBAmB1BvB,GAnB0B,mCAqBV,SAAhBiC,EAAOC,KArBmB,wBAsB7BhC,EAA8C+B,EAA9C/B,EAAGC,EAA2C8B,EAA3C9B,EAAGmC,EAAwCL,EAAxCK,MAAOpF,EAAiC+E,EAAjC/E,WAAYD,EAAqBgF,EAArBhF,KAAMsF,EAAeN,EAAfM,WAtBF,UAuBhBjF,EAAUiF,GAvBM,eAuB7BhF,EAvB6B,YAwBV8D,EAxBU,UAyB3BF,EAAY,CAChBmB,QACAE,SAAUvF,EACVC,aACAoD,MAAOE,EACPD,OAAQE,EACRlD,MAAU,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMc,SAAUkE,EACtBE,GAAIlF,GAAQA,EAAKP,YAAcO,EAAKP,WAAWC,EAAgBC,KAhChC,0CAwBHwF,SAxBG,2DAwB5BC,EAxB4B,wBAmC5B,kBACLhB,EAAKiB,SAASD,EAAU,CACtBrC,MAAOE,EACPD,OAAQE,EACRP,IACAC,GAAIA,OAxC2B,WA0CV,YAAhB8B,EAAOC,KA1CmB,wBA2C7BhC,EAAsB+B,EAAtB/B,EAAGC,EAAmB8B,EAAnB9B,EAAG0C,EAAgBZ,EAAhBY,KAAMC,EAAUb,EAAVa,MAEhBC,EAME9B,EANF8B,kBACAC,EAKE/B,EALF+B,WACAC,EAIEhC,EAJFgC,iBACAC,EAGEjC,EAHFiC,YACAC,EAEElC,EAFFkC,aACAC,EACEnC,EADFmC,cAlDiC,mBAoD5B,WACLzB,EAAK0B,cACHN,IACAC,EAAWG,EAAaG,OACxBJ,EAAYE,EAAcE,QAE5B3B,EAAK4B,YAAYV,EAAM,CACrBW,YAAa,EACbV,QACA5C,IACAC,EAAGM,EAAaN,IAElBwB,EAAK0B,cAAcJ,QAhEc,0DAAhB,uDALoB,SA0ERzE,QAAQiF,IAAIzB,GA1EJ,cA2E7B0B,SAAQ,SAACC,GAAD,OAAOA,OA3Ec,2CAAtB,yDAblB,UA0FCnF,QAAQiF,IAAIjC,GA1Fb,mCA4FoBH,EAAOP,OA5F3B,QA4FG8C,EA5FH,OA6FH1C,EAAS0C,EAAUnH,EAAM,mBA7FtB,yDA+FH6E,QAAQC,IAAI,uBA/FT,wE,sBCGA,ICPKsC,EDOCC,EAAU,SAAC,GAAuC,IAArCnC,EAAoC,EAApCA,KAAMoC,EAA8B,EAA9BA,iBACtBC,EAAYC,sBADwC,EAE9BC,mBAAS,KAFqB,mBAElD5D,EAFkD,KAE3C6D,EAF2C,OAG5BD,mBAASnG,OAAOqG,aAHY,mBAGlD7D,EAHkD,KAG1C8D,EAH0C,KAKpDC,EAAU,uCAAG,WAAOX,GAAP,uBAAAlE,EAAA,sEACIkE,EADJ,YACVY,EADU,4BAGNC,EAHM,UAGIR,EAAUS,eAHd,aAGI,EAAmBC,WAAW,MACxCC,EAAWJ,EAAMK,YAAY,CAAE9B,MAAO,IAE5CqB,EAASQ,EAASrE,OAClB+D,EAAUM,EAASpE,SAGfiE,EAVQ,kCAWDD,EAAMM,OAAO,CAChBC,cAAa,UAAEd,EAAUS,eAAZ,aAAE,EAAmBC,WAAW,MAC7CC,aACA9E,QAdI,QAgBPkE,EAAiB,CAAEzD,MAAOqE,EAASrE,MAAOC,OAAQoE,EAASpE,SAhBpD,4CAAH,sDAyBhB,OAJAwE,qBAAU,WACNT,EAAW3C,KACZ,CAACA,EAAMrB,EAAOC,IAGb,6BACI,4BACIyE,IAAKhB,EACL1D,MAAOA,EACPC,OAAQA,O,SC1CZsD,K,YAAAA,E,cAAAA,E,2BAAAA,M,0HCEL,IAAMoB,E,OAAMC,EAAOC,IAAV,KCOHC,EAAkC,SAAC,GAAD,IAC3CC,EAD2C,EAC3CA,MACAC,EAF2C,EAE3CA,UACAC,EAH2C,EAG3CA,UAH2C,OAK3C,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,GAAEL,GAE1B,kBAACM,EAAA,EAAD,CAAQC,QAASL,GAAjB,MACA,kBAACI,EAAA,EAAD,CAAQE,UAAQ,EAACD,QAASN,GAA1B,SCMKpG,EAAyB,SAAC,GAehC,IAdH8E,EAcE,EAdFA,UACA8B,EAaE,EAbFA,YACAC,EAYE,EAZFA,aACAzF,EAWE,EAXFA,MACAC,EAUE,EAVFA,OACAyF,EASE,EATFA,eACAC,EAQE,EARFA,gBACAC,EAOE,EAPFA,gBACAC,EAME,EANFA,cACAC,EAKE,EALFA,iBACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,YACAX,EACE,EADFA,QAIA,OACI,yBACIY,YAAaP,EACbQ,YAAaP,EACbQ,UAAWP,EACXQ,WAAYX,EACZY,cAAehB,EACfiB,MAAO,CACHC,SAAU,WACVlG,IAAKkF,EACLjF,KAAMkF,EACNgB,YAAa,SACbvD,YAAa,EACbwD,YAAc,OACd1G,MAAOA,EAAQ,EACfC,OAAQA,EAAS,EACjB0G,OAAQ,SAGZ,kBAACC,EAAA,EAAOC,SAAR,CACI1B,GAAIR,EACJhI,KAAK,SACLmK,OAAQf,GAER,4BACIrB,IAAKhB,EACL6C,MAAO,CACHvG,MAAO,OACPC,OAAQ,UAGhB,kBAAC2G,EAAA,EAAD,CAAQG,OAAQhB,EAAciB,eAAgBhB,GAC1C,kBAAC,EAAD,CACIjB,MAAM,UACNC,UAAWiB,EACXhB,UAAWe,MAIvB,yBACQiB,iBAAe,WACff,YAAaP,EACbS,UAAWP,EACXM,YAAaL,EACbS,MAAO,CACHC,SAAU,WACVG,OAAQ,cACRrG,KAAM,EACNC,MAAO,EACPP,MAtFK,GAuFLC,OAvFK,QCShBrB,EAAQ,SAAC,GAAkH,IAAhHgB,EAA+G,EAA/GA,EAAGC,EAA4G,EAA5GA,EAAGqH,EAAyG,EAAzGA,QAASlH,EAAgG,EAAhGA,MAAOC,EAAyF,EAAzFA,OAAQC,EAAiF,EAAjFA,UAAWiH,EAAsE,EAAtEA,YAAahH,EAAyD,EAAzDA,WAAYiH,EAA6C,EAA7CA,kBAChF1D,EAAYC,sBADiH,EAE7FC,mBAAS5D,GAFoF,mBAE5HqH,EAF4H,KAE/GC,EAF+G,OAG3F1D,mBAAS3D,GAHkF,mBAG5HsH,EAH4H,KAG9GC,EAH8G,OAIjG5D,oBAAS,GAJwF,mBAI5H6D,EAJ4H,KAIjHC,EAJiH,OAK7F9D,mBAAS/D,GALoF,mBAK5H2F,EAL4H,KAK/GmC,EAL+G,OAM3F/D,mBAAShE,GANkF,mBAM5H6F,EAN4H,KAM9GmC,EAN8G,OAOjGhE,mBAAmB,IAP8E,mBAO5HiE,EAP4H,KAOjHC,EAPiH,OAQjGlE,mBAAsBL,EAAYwE,aAR+D,mBAQ5HC,EAR4H,KAQjHC,EARiH,OAU3FrE,oBAAS,GAVkF,mBAU5HmC,EAV4H,KAU9GmC,EAV8G,KA8E7HrC,EAAgB,SAACsC,GAInB,GAHAA,EAAMC,iBACNV,GAAa,GAETM,IAAczE,EAAY8E,KAAM,CAAC,IAAD,EACV1I,EAClB8F,EACAD,EACA2C,EAAMG,UACNH,EAAMI,UACNlB,EACAE,EACArH,EACAC,GARIG,EADwB,EACxBA,IAAKC,EADmB,EACnBA,KAWb6G,EAAkB,CACdxH,EAAGW,EACHV,EAAGS,IAIP0H,IAAczE,EAAYiF,OAC1BpB,EAAkB,CACdxH,EAAG6F,EACH5F,EAAG2F,IAKXyC,EAAa1E,EAAYwE,cAiC7BtD,qBAAU,YAjIU,SAAC9F,GACjB,IAAM8J,EAAS/E,EAAUS,QACzB,GAAKsE,EAAL,CAEA,IAAMvE,EAAUuE,EAAOrE,WAAW,MAClC,GAAKF,EAAL,CAEA,IAAI1B,EAAQ,EACR6E,EA7BW,MA8BX7E,EA9BW,IA8Bc6E,GAGzBE,EAjCW,MAkCX/E,EAAQkG,KAAKC,IAAInG,EAlCN,IAkC8B+E,IAG7C,IAAMqB,EAAiBvB,EAAc7E,EAC/BqG,EAAkBtB,EAAe/E,EAEvC8E,EAAesB,GACfpB,EAAgBqB,GAEhBJ,EAAOzI,MAAQ4I,EACfH,EAAOxI,OAAS4I,EAEhB3E,EAAQnC,UAAUmF,EAAS,EAAG,EAAG0B,EAAgBC,GACjDJ,EAAOK,QAAO,SAAAzJ,GACV+H,EAAkB,CACdnJ,KAAMoB,EACLW,MAAO4I,EACP3I,OAAQ4I,SAoGjBE,KACD,CAAC7B,EAASG,EAAaE,IAE1B,IACMyB,EAAiB,kBAAMd,GAAgB,IAO7C,OACI,kBAAC,EAAD,CACI5C,QAVY,kBAAO4C,GAAgB,IAWnCnC,aAAcA,EACdC,aAAcgD,EACd/C,YAVY,WAChB+C,IACA7B,KASI1B,aAAcA,EACdD,YAAaA,EACb9B,UAAWA,EACX1D,MAAOqH,EACPpH,OAAQsH,EACRzB,iBA/CiB,SAACqC,GACtBA,EAAMC,iBAEFX,IACII,EAAUoB,SAAS,UACnBrB,EAAgBnC,EAAe0C,EAAMG,WACrChB,EAAeD,EAAcc,EAAMG,YAGnCT,EAAUoB,SAAS,SACnBtB,EAAenC,EAAc2C,EAAMI,WACnCf,EAAgBD,EAAeY,EAAMI,YAGrCV,EAAUoB,SAAS,UACnB3B,EAAeD,EAAcc,EAAMG,WAGnCT,EAAUoB,SAAS,WACnBzB,EAAgBD,EAAeY,EAAMI,aA6BzC5C,gBAtHgB,SAACwC,GACrBA,EAAMC,iBACNV,GAAa,GACbO,EAAa1E,EAAY8E,MACzB,IAAMa,EAAaf,EAAMgB,cAAcC,QAAQvB,UAC3CqB,IACApB,EAAaoB,EAAWG,MAAM,MAC9BpB,EAAa1E,EAAYiF,SAgHzB3C,cAAeA,EACfD,gBA7GgB,SAACuC,GAGrB,GAFAA,EAAMC,iBAEFX,EAAW,CAAC,IAAD,EACW9H,EAClB8F,EACAD,EACA2C,EAAMG,UACNH,EAAMI,UACNlB,EACAE,EACArH,EACAC,GARIG,EADG,EACHA,IAAKC,EADF,EACEA,KAWboH,EAAerH,GACfsH,EAAgBrH,KA8FhBmF,eAzDe,SAACyC,GAChBH,IAAczE,EAAY8E,MAC1BxC,EAAcsC,O,SCrHbmB,EAAe,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAC7CC,EAAShG,sBADyD,EAE9CC,mBAA0C,IAFI,mBAEjEgG,EAFiE,KAE1DC,EAF0D,OAGhDjG,mBAAU8F,GAAWA,EAAQnH,MAAS,IAHU,mBAGjEA,EAHiE,KAG3DuH,EAH2D,OAIhDlG,mBAAS,GAJuC,mBAIjEmG,EAJiE,KAI3DC,EAJ2D,OAKhDpG,mBAAS,GALuC,mBAKjEqG,EALiE,KAK3DC,EAL2D,OAMhDtG,mBAASuG,KANuC,mBAMjEC,EANiE,KAM3DC,EAN2D,OAOhDzG,mBAAS,GAPuC,mBAOjE0G,EAPiE,KAO3DC,EAP2D,OAQhD3G,mBAASuG,KARuC,mBAQjEK,EARiE,KAQ3DC,EAR2D,OAShD7G,mBAAS,GATuC,mBASjE8G,EATiE,KAS3DC,EAT2D,OAUtC/G,oBAAS,GAV6B,mBAUjE6D,EAViE,KAUtDC,EAVsD,KAYxEjD,qBAAU,WACN,IAAMmG,EAAMjB,EAAOxF,QACnB,GAAKyG,EAAL,CAFY,MAGKA,EAAIC,wBAAbjL,EAHI,EAGJA,EAAGC,EAHC,EAGDA,EACXmK,EAAQpK,GACRsK,EAAQrK,MACT,CAAC8J,IAEJ,IAiEMmB,EAAa,WA/BfjB,EAAS,IACTC,EAAQ,IACRO,EAAQF,KACRI,EAAQ,GACRE,EAAQN,KACRQ,EAAQ,GA4BRnB,KAGJ,OACI,kBAACuB,EAAA,EAAD,CACIpO,KAAK,QACL4M,KAAMA,EACNyB,QAASF,GAET,kBAACC,EAAA,EAAM7F,OAAP,yBACA,kBAAC6F,EAAA,EAAME,QAAP,KACI,yBACI/E,YA/EQ,SAACiC,GACrBA,EAAMC,iBACNV,GAAa,GAEb,IAAM9H,EAAIuI,EAAM+C,QAAUnB,EACpBlK,EAAIsI,EAAMgD,QAAUlB,EAC1BI,EAAQ3B,KAAKC,IAAIyB,EAAMxK,IACvB2K,EAAQ7B,KAAK0C,IAAId,EAAM1K,IACvB6K,EAAQ/B,KAAKC,IAAI6B,EAAM3K,IACvB8K,EAAQjC,KAAK0C,IAAIV,EAAM7K,IACvBiK,EAAQvH,EAAI,WAAO3C,EAAP,YAAYC,IACxBgK,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAC,IAAKhK,EAAGC,OAqEjBsG,YAlEQ,SAACgC,GAErB,GADAA,EAAMC,iBACDX,EAAL,CAEA,IAAM7H,EAAIuI,EAAM+C,QAAUnB,EACpBlK,EAAIsI,EAAMgD,QAAUlB,EAC1BI,EAAQ3B,KAAKC,IAAIyB,EAAMxK,IACvB2K,EAAQ7B,KAAK0C,IAAId,EAAM1K,IACvB6K,EAAQ/B,KAAKC,IAAI6B,EAAM3K,IACvB8K,EAAQjC,KAAK0C,IAAIV,EAAM7K,IACvBiK,EAAQvH,EAAI,WAAO3C,EAAP,YAAYC,IACxBgK,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAC,IAAKhK,EAAGC,QAwDjBuG,UArDM,SAAC+B,GACnBA,EAAMC,iBACNV,GAAa,KAqDD,yBACIhD,IAAKiF,EACLpD,MAAO,CACHvG,MAAO,OACPC,OAAQ,SAEZ,0BACIoL,YAAY,IACZC,eAAe,QACfC,cAAc,QACdC,OAAO,QACPC,KAAK,OACLC,EAAGnJ,OAKnB,kBAACwI,EAAA,EAAMY,QAAP,KACI,kBAACtG,EAAA,EAAD,CACIuG,MAAM,QACNC,QAAQ,SACRvG,QAASwF,IACb,kBAACzF,EAAA,EAAD,CACIwG,QAAQ,OACRC,cAAc,QACdC,KAAK,YACLzG,QAnEG,WACf,GAAKsE,EAAMoC,OAAX,CAKA,IAGMC,IAAO7B,EAAO,IACdjI,IAAOqI,EAAO,IAEpBf,EAAQ,CACJzJ,MAPkBsK,EAAOF,EAOF,GACvBnK,OAPmByK,EAAOF,EAOD,GACzBjI,KAAMqH,EAAMsC,QAAO,SAACC,EAAUC,GAAX,gBACZD,GADY,OACDC,EAAS,IADR,OACaA,EAAS,GAAKH,EAD3B,aACkCG,EAAS,GAAKjK,KACjE,MAGN2I,SAlBIrB,KAkEQ4C,UAAQ,OCvHfC,EAA2B,SAAC,GAelC,IAdHvG,EAcE,EAdFA,aACAC,EAaE,EAbFA,aACAuG,EAYE,EAZFA,cACA/G,EAWE,EAXFA,YACAC,EAUE,EAVFA,aACAzF,EASE,EATFA,MACAC,EAQE,EARFA,OACA0J,EAOE,EAPFA,OACApH,EAME,EANFA,KACAoD,EAKE,EALFA,gBACAC,EAIE,EAJFA,gBACAF,EAGE,EAHFA,eACAG,EAEE,EAFFA,cACAP,EACE,EADFA,QAGA,OACI,yBACIY,YAAaP,EACbQ,YAAaP,EACbQ,UAAWP,EACXQ,WAAYX,EACZY,cAAehB,EACfiB,MAAO,CACHC,SAAU,WACVlG,IAAKkF,EACLjF,KAAMkF,EACNzF,QACAC,SACA0G,OAAQ,SAGZ,kBAACC,EAAA,EAAOC,SAAR,CAAiB1B,GAAIR,EAAKmC,OAAQf,GAC9B,yBACIrB,IAAKiF,GAED,0BACI0B,YAAY,IACZE,cAAc,QACdD,eAAe,QACfE,OAAO,QACPC,KAAK,OACLC,EAAGnJ,KAGf,kBAACqE,EAAA,EAAD,CAAQG,OAAQhB,EAAciB,eAAgBhB,GAC1C,kBAAC,EAAD,CACIjB,MAAM,UACNC,UAAWuH,EACXtH,UAAWe,QC3DtBsG,EAAU,SAAC,GAAqH,IAAnH1M,EAAkH,EAAlHA,EAAGC,EAA+G,EAA/GA,EAAGG,EAA4G,EAA5GA,MAAOC,EAAqG,EAArGA,OAAQsC,EAA6F,EAA7FA,KAAMrC,EAAuF,EAAvFA,UAAWC,EAA4E,EAA5EA,WAAYqM,EAAgE,EAAhEA,cAAeC,EAAiD,EAAjDA,oBACjF9C,EAAShG,sBADyH,EAEtGC,oBAAS,GAF6F,mBAEjI6D,EAFiI,KAEtHC,EAFsH,OAGlG9D,mBAAS/D,GAHyF,mBAGjI2F,EAHiI,KAGpHmC,EAHoH,OAIhG/D,mBAAShE,GAJuF,mBAIjI6F,EAJiI,KAInHmC,EAJmH,OAKtGhE,mBAAsBL,EAAYwE,aALoE,mBAKjIC,EALiI,KAKtHC,EALsH,OAMhGrE,oBAAS,GANuF,mBAMjImC,EANiI,KAMnHmC,EANmH,KAQxIzD,qBAAU,WACN,IAAMmG,EAAMjB,EAAOxF,QACfyG,GACAA,EAAI8B,aAAa,UAAjB,cAAmC1M,EAAnC,YAA4CC,MAEjD,CAAC0J,EAAQ3J,EAAOC,IAEnB,IAyBM4F,EAAgB,SAACsC,GAInB,GAHAA,EAAMC,iBACNV,GAAa,GAETM,IAAczE,EAAY8E,KAAM,CAAC,IAAD,EACV1I,EAClB8F,EACAD,EACA2C,EAAMG,UACNH,EAAMI,UACNvI,EACAC,EACAC,EACAC,GARIG,EADwB,EACxBA,IAAKC,EADmB,EACnBA,KAWbkM,EAAoB,CAChB7M,EAAGW,EACHV,EAAGS,IAIP0H,IAAczE,EAAYiF,OAC1BiE,EAAoB,CAChB7M,EAAG6F,EACH5F,EAAG2F,IAKXyC,EAAa1E,EAAYwE,cAUvB/B,EAAe,kBAAMkC,GAAgB,IAM3C,OACI,kBAAC,EAAD,CACI3F,KAAMA,EACNvC,MAAOA,EACP2J,OAAQA,EACR1J,OAAQA,EACRqF,QAbY,kBAAM4C,GAAgB,IAclClC,aAAcA,EACdD,aAAcA,EACdwG,cAbc,WAClBvG,IACAwG,KAYI7G,gBAjFgB,SAACwC,GACrBT,GAAa,GACbO,EAAa1E,EAAY8E,OAgFrBzC,gBA7EgB,SAACuC,GAGrB,GAFAA,EAAMC,iBAEFX,EAAW,CAAC,IAAD,EACW9H,EAClB8F,EACAD,EACA2C,EAAMG,UACNH,EAAMI,UACNvI,EACAC,EACAC,EACAC,GARIG,EADG,EACHA,IAAKC,EADF,EACEA,KAWboH,EAAerH,GACfsH,EAAgBrH,KA8DhBmF,eAzBe,SAACyC,GAChBH,IAAczE,EAAY8E,MAC1BxC,EAAcsC,IAwBdtC,cAAeA,EACfJ,aAAcA,EACdD,YAAaA,KCmRVmH,G,kDAtVb,aAAe,IAAD,8BACZ,cAAM,KAlBRC,cAiBc,IAhBdC,gBAgBc,IAddC,MAAe,CACbrM,aAASsM,EACTC,mBAAoB,EACpBC,QAAS,GACTC,MAAO,GACPC,WAAY,GACZC,WAAY,GACZC,eAAgB,GAChBC,QAAQ,EACR5D,SAAS,EACT6D,WAAW,EACXC,gBAAiB,GAGL,EAOdC,YAPc,uCAOA,WAAOC,GAAP,iBAAAvO,EAAA,yDACZ,EAAKwO,SAAS,CAAEJ,WAAW,IACrBK,EAA+BF,EAAEG,OAAOD,OAAUF,EAAEI,cAAgBJ,EAAEI,aAAaF,MAF7E,qDAKN3P,EAAO2P,EAAM,KACQ,oBAAd3P,EAAK2D,KANN,wDAQZ,EAAK+L,SAAS,CACZX,mBAAoB,IATV,mBAaJ,EAAKe,OAAO9P,GAbR,QAeV,EAAK0P,SAAS,CACZX,kBAAmB,IAhBX,kDAmBVhM,QAAQC,IAAR,MAnBU,yBAqBV,EAAK0M,SAAS,CAAEJ,WAAW,IArBjB,6EAPA,wDAgCdQ,OAhCc,uCAgCL,WAAO9P,GAAP,eAAAkB,EAAA,+EAEaD,EAAUjB,GAFvB,OAEC+P,EAFD,OAGL,EAAKL,SAAS,CACZV,QAAShP,EAAK9B,KACdsE,QAASxC,EACTiP,MAAOe,MAAMD,EAAIE,UACdzC,KAAK,GACLrK,KAAI,SAAC+M,EAAGC,GAAJ,OAAUJ,EAAIK,QAAQD,EAAI,MACjCjB,WAAYc,MAAMD,EAAIE,UAAUzC,KAAK,IACrC2B,WAAYa,MAAMD,EAAIE,UAAUzC,KAAK,GACrC4B,eAAgBY,MAAMD,EAAIE,UAAUzC,KAAK,CAAEzL,MAAO,EAAGC,OAAQ,MAX1D,sDAcLe,QAAQC,IAAI,sBAdP,8DAhCK,wDAmDdqN,QAnDc,sBAmDJ,sCAAAnP,EAAA,2DACgD,EAAK2N,MAArDrM,EADA,EACAA,QAAS6M,EADT,EACSA,OAAQJ,EADjB,EACiBA,MAAOC,EADxB,EACwBA,WAAYF,EADpC,EACoCA,QACvCxM,IAAW6M,GAAWJ,EAAMlB,OAFzB,wDAIR,EAAK2B,SAAS,CAAEL,QAAQ,IAJhB,kBAOA9M,EAAKC,EAAS0M,EAAYF,GAP1B,uDASNjM,QAAQC,IAAR,MATM,yBAWN,EAAK0M,SAAS,CAAEL,QAAQ,IAXlB,4EAnDI,EAkEdiB,WAAa,SAACpG,GACZA,EAAMgB,cAAcqF,MAAQ,IAnEhB,EAsEdC,mBAAqB,kBACnB,oCACE,2BACE/J,IAAK,EAAKkI,SACVhL,KAAK,OACLzF,KAAK,MACLsD,GAAG,MACHiP,OAAO,kBACPC,SAAU,EAAKlB,YACfnI,QAAS,EAAKiJ,WACdhI,MAAO,CAAE5I,QAAS,UAClB,EAAKmP,MAAME,mBAAqB,GAC9B,2BACEtI,IAAK,EAAKmI,WACVjL,KAAK,OACLnC,GAAG,QACHtD,KAAK,QACLuS,OAAO,UACPpJ,QAAS,EAAKiJ,WACdhI,MAAO,CAAE5I,QAAS,QAClBgR,SAAU,EAAKC,kBA1FX,EAiGdA,cAAgB,SAAClB,GAA4C,IACnDV,EAAsB,EAAKF,MAA3BE,kBACF/O,EAAoByP,EAAEG,OAAOD,OAASF,EAAEG,OAAOD,MAAM,GACvD3P,GAAQ+O,GAAqB,GAC/B,EAAK6B,SAAS5Q,IArGJ,EAyGd4Q,SAzGc,uCAyGH,WAAO5Q,GAAP,+BAAAkB,EAAA,+DACiC,EAAK2N,MAAvCK,EADC,EACDA,WAAYH,EADX,EACWA,kBADX,kBAIW/N,EAAchB,GAJzB,cAIDa,EAJC,gBAKWJ,EAAYI,GALvB,OAKDH,EALC,OAMDc,EAAKD,IACHQ,EAAkBrB,EAAlBqB,MAAOC,EAAWtB,EAAXsB,OACT0B,EAAsB,CAC1BlC,KACAmC,KAAM,QACN5B,QACAC,SACAL,EAAG,EACHC,EAAG,EACHqH,QAASvI,EACTV,QAEF,EAAK0P,SAAS,CACZR,WAAYA,EAAW/L,KAAI,SAACV,EAASoO,GAAV,OACzBA,IAAW9B,EAAX,sBAAmCtM,GAAnC,CAA4CiB,IAAUjB,OApBnD,kDAwBPM,QAAQC,IAAR,2BAxBO,0DAzGG,wDAqId8N,gBAAkB,SAACC,GAAD,OAAuB,WACvC,IAAMC,EAAsB,QAAdD,EACZ,EAAKpC,SAASzI,QACA,UAAd6K,EACA,EAAKnC,WAAW1I,QAChB,KAEE8K,GACFA,EAAMC,UA7II,EAiJdC,YAAc,kBACZ,kBAACC,EAAA,EAAD,CAASC,aAAW,EAACC,QAAS,EAAKxC,MAAMS,UAAWhH,MAAO,CAAEtG,OAAQ,SACnE,kBAACiF,EAAA,EAAD,CAAQ6G,MAAI,GACV,kBAACwD,EAAA,EAAD,CAAMpT,KAAK,qBADb,qCAIA,kBAACkJ,EAAA,EAAD,CAAQmK,SAAO,EAAClK,QAAS,EAAKyJ,gBAAgB,QAA9C,cAvJU,EA2JdU,SAAW,WACT,EAAK9B,UAAS,SAAC+B,GAAD,MAAuB,CACnC1C,kBAAmB0C,EAAU1C,kBAAoB,OA7JvC,EAiKd2C,aAAe,WACb,EAAKhC,UAAS,SAAC+B,GAAD,MAAuB,CACnC1C,kBAAmB0C,EAAU1C,kBAAoB,OAnKvC,EAuKd4C,aAAe,SAACnQ,EAAY6B,EAAmB4F,GAAmC,IACxEiG,EAAe,EAAKL,MAApBK,WACJ5L,EAAc4L,EAAW7L,GACvBuO,EAAiBtO,EAAY9B,GAC7BqQ,EAAqB,eAAQD,EAAR,GAA4B3I,GACvD3F,EAAY9B,GAAMqQ,EAElB,EAAKnC,SAAS,CACZR,WAAYA,EAAW/L,KAAI,SAACV,EAASqP,GAAV,OACzBzO,IAAcyO,EAAQxO,EAAcb,QAhL5B,EAqLdsP,qBAAuB,SAAC1O,EAAmB2O,GACzC,EAAKtC,SAAS,CACZN,eAAgB,EAAKP,MAAMO,eAAejM,KAAI,SAACC,EAAM0O,GAAP,OAC5CzO,IAAcyO,EAAQE,EAAa5O,QAxL3B,EA6Ld6O,aAAe,SAACzQ,EAAY6B,GAAuB,IACzC6L,EAAe,EAAKL,MAApBK,WACF5L,EAAc4L,EAAW7L,GAC/BC,EAAY4O,OAAO1Q,EAAI,GACvB0N,EAAW7L,GAAaC,EACxB,EAAKoM,SAAS,CAAER,gBAlMJ,EAqMdiD,iBAAmB,WACjB,EAAKzC,SAAS,CACZjE,SAAS,KAvMC,EA2Md2G,kBAAoB,WAClB,EAAK1C,SAAS,CACZjE,SAAS,KA7MC,EAiNd4G,WAAa,SAAChP,EAAmBoI,GAA+D,IACtFyD,EAAe,EAAKL,MAApBK,WACR,GAAKzD,EAAL,CAEA,IAAMoG,EAAwB,aAC5BrQ,GAAID,IACJoC,KAAM,WACH8H,EAHyB,CAI5B9J,EAAG,EACHC,EAAG,IAGL,EAAK8N,SAAS,CACZR,WAAYA,EAAW/L,KAAI,SAACV,EAASqP,GAAV,OACzBzO,IAAcyO,EAAd,sBAA0BrP,GAA1B,CAAmCoP,IAAapP,SA5NpD,EAAKkM,SAAW2D,IAAM5M,YACtB,EAAKkJ,WAAa0D,IAAM5M,YAJZ,E,qDAoOJ,IAAD,SACoF6M,KAAK1D,MAAxFK,EADD,EACCA,WAAYF,EADb,EACaA,QAASxM,EADtB,EACsBA,QAASyM,EAD/B,EAC+BA,MAAOI,EADtC,EACsCA,OAAQN,EAD9C,EAC8CA,kBAAmBK,EADjE,EACiEA,eAClEoD,EAAkBvD,EAAMlB,OAAS,EACjC0E,EAAa1D,IAAsBE,EAAMlB,OAAS,EAClD2E,EAAczD,EAAMF,GACpB4D,EAA2BzD,EAAWH,GACtC6D,EAAwBxD,EAAeL,GAE7C,OACE,kBAAC8D,EAAA,EAAD,CAAWvK,MAAO,CAAEwK,OAAQ,KACzBP,KAAK/B,qBACJ,kBAACuC,EAAA,EAAD,CAAMC,UAAQ,GACZ,kBAACD,EAAA,EAAKE,KAAN,CAAWC,QAAM,GAAjB,cACA,kBAACH,EAAA,EAAKA,KAAN,CAAWxK,SAAS,SACjB/F,GACC,oCACE,kBAAC2Q,EAAA,EAAD,CACEC,MAAI,EACJC,aAAW,EACXvF,KAAK,eACLwF,QAAM,GACN,kBAACH,EAAA,EAASJ,KAAV,KACE,kBAACI,EAAA,EAASF,KAAV,CAAe5L,QAASkL,KAAKzB,gBAAgB,UAA7C,aAGA,kBAACqC,EAAA,EAASF,KAAV,CAAe5L,QAASkL,KAAKJ,kBAA7B,iBAGJ,kBAACY,EAAA,EAAKE,KAAN,CACE/U,KAAMmR,EAAS,YAAc,OAC7BkE,SAAUlE,EACVhI,QAASkL,KAAKlC,WAGnB,kBAAC0C,EAAA,EAAKE,KAAN,CACK/U,KAAK,iBACLmJ,QAASkL,KAAKzB,gBAAgB,WAKxCtO,EACA,kBAACgR,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,KACE,kBAACD,EAAA,EAAKE,OAAN,CAAa3R,MAAO,EAAG4R,cAAc,UAClCnB,GAAyC,IAAtBzD,GAClB,kBAAC3H,EAAA,EAAD,CAAQwM,UAAQ,EAAC9F,KAAK,aAAazG,QAASkL,KAAKb,gBAGrD,kBAAC8B,EAAA,EAAKE,OAAN,CAAa3R,MAAO,IACjB2Q,GACG,kBAACvB,EAAA,EAAD,CACE7I,MAAO,CAAEC,SAAU,YACnBsL,SAAO,EACPC,QAAStB,IAAoBC,GAE7B,kBAAC,EAAD,CACEjN,iBAAkB,SAACwM,GAAD,OAAgB,EAAKD,qBAAqBhD,EAAmBiD,IAC/E5O,KAAMsP,IACLC,GAA4BA,EAAyBxP,KAAI,SAAC4Q,EAAMjC,GAC/D,IAAMkC,EAAG,UAAMhF,EAAN,YAAiB8C,GAC1B,MAAkB,UAAdiC,EAAKpQ,KAEH,kBAAC,EAAD,eACEuF,YAAa,kBAAM,EAAK+I,aAAaH,EAAO/C,IAC5CiF,IAAKA,EACL/R,UAAW2Q,EAAsB7Q,MACjCG,WAAY0Q,EAAsB5Q,OAClCmH,kBAAmB,SAAC8K,GAAD,OAAW,EAAKtC,aAAaG,EAAO/C,EAAmBkF,KACrEF,IAKK,YAAdA,EAAKpQ,KAEL,kBAAC,EAAD,eACEqQ,IAAKA,EACLzF,cAAe,kBAAM,EAAK0D,aAAaH,EAAO/C,IAC9C9M,UAAW2Q,EAAsB7Q,MACjCG,WAAY0Q,EAAsB5Q,OAClCwM,oBAAqB,SAAC/C,GAAD,OAAa,EAAKkG,aAAaG,EAAO/C,EAAmBtD,KAC1EsI,IAIH,UAMnB,kBAACP,EAAA,EAAKE,OAAN,CAAa3R,MAAO,EAAG4R,cAAc,SAASO,UAAU,SACrD1B,GAAmBzD,IAAsBE,EAAMlB,OAAS,GACvD,kBAAC3G,EAAA,EAAD,CAAQwM,UAAQ,EAAC9F,KAAK,cAAczG,QAASkL,KAAKf,cArDlDe,KAAKrB,cA6Df,kBAAC,EAAD,CACE5F,KAAMiH,KAAK1D,MAAMpD,QACjBF,QAASgH,KAAKH,kBACd5G,QAAS,SAAC2I,GAAD,OAAuB,EAAK9B,WAAWtD,EAAmBoF,W,GA/V7D7B,IAAM8B,WChBJC,QACW,cAA7B7U,OAAO8U,SAASC,UAEe,UAA7B/U,OAAO8U,SAASC,UAEhB/U,OAAO8U,SAASC,SAASC,MACvB,2DdUFvW,EAAQkH,SAAQ,YAAoB,IAAjBjH,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACvBC,EAAOF,GAAQ,IAAI+B,SAAQ,SAACC,EAASC,GACnC,IAAMsU,EAAS7U,SAAS8U,cAAc,UACtCD,EAAOtW,IAAMA,EACbsW,EAAOnU,OAAS,WACdJ,EAAQV,OAAOtB,IACf6E,QAAQC,IAAR,UAAe9E,EAAf,iBAEFuW,EAAOjU,QAAU,kBACfL,EAAO,cAAD,OAAejC,EAAf,6BACR0B,SAAS+U,KAAKC,YAAYH,Se7BlCI,IAASvO,OACP,kBAAC,IAAMwO,WAAP,KACE,kBAAC,GAAD,OAEFlV,SAASmV,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/V,MAAK,SAAAgW,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvS,QAAQuS,MAAMA,EAAMC,c","file":"static/js/main.1a6218b7.chunk.js","sourcesContent":["type ScriptName = 'pdfjsLib' | 'PDFLib' | 'download' | 'makeTextPDF';\n\ninterface Script {\n    name: ScriptName;\n    src: string;\n};\n\nconst scripts: Script[] = [\n    {\n      name: 'pdfjsLib',\n      src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n    },\n    {\n      name: 'PDFLib',\n      src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n    },\n    {\n      name: 'download',\n      src: 'https://unpkg.com/downloadjs@1.4.7',\n    },\n    { name: 'makeTextPDF', src: 'https://cdn.jsdelivr.net/gh/snamoah/react-pdf-editor/public/makeTextPDF.js' },\n];\n  \nconst assets: { [key: string]: any } = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n  \n  export const prepareAssets = () => {\n    // prepare scripts\n    scripts.forEach(({ name, src }) => {\n      assets[name] = new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = src;\n        script.onload = () => {\n          resolve(window[name as any]);\n          console.log(`${name} is loaded.`);\n        };\n        script.onerror = () =>\n          reject(`The script ${name} didn't load correctly.`);\n        document.body.appendChild(script);\n      });\n    });\n}\n\ninterface Font {\n    src?: string;\n    correction?: (size: number, lineHeight: number) => number;\n    [key: string]: any;\n};\n\ninterface FontsType {\n    [key: string]: Font\n}\n\nconst fonts: FontsType = {\n    Courier: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 6;\n      },\n    },\n    Helvetica: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 10;\n      },\n    },\n    'Times-Roman': {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 7;\n      },\n    },\n  };\n\n  // Available fonts\n  export const Fonts = {\n    ...fonts,\n    標楷體: {\n      src: '/CK.ttf', // 9.9 MB\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2;\n      },\n    },\n  };\n\n\n\n  export const fetchFont = (name: string) => {\n    if (fonts[name as any]) return fonts[name as any];\n\n    const font = Fonts[name as keyof typeof Fonts];\n    if (!font) throw new Error(`Font '${name}' not exists.`);\n\n    fonts[name] = fetch(font.src)\n      .then((r) => r.arrayBuffer())\n      .then((fontBuffer) => {\n        const fontFace = new (window as any).FontFace(name, fontBuffer);\n        fontFace.display = 'swap';\n        fontFace.load().then(() => (document as any).fonts.add(fontFace));\n        return {\n          ...font,\n          buffer: fontBuffer,\n        };\n      });\n  }","import { getAsset } from \"./prepareAssets\";\n\nexport const readAsArrayBuffer = (file: File) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  }\n  \n  export const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n      if (src instanceof Blob) {\n        const url = window.URL.createObjectURL(src);\n        img.src = url;\n      } else {\n        img.src = src;\n      }\n    });\n  }\n  \n  export function readAsDataURL(file: File) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  }\n  \n  export async function readAsPDF(file: File) {\n    const pdfjsLib = await getAsset('pdfjsLib');\n    // Safari possibly get webkitblobresource error 1 when using origin file blob\n    const blob = new Blob([file]);\n    const url = window.URL.createObjectURL(blob);\n    return pdfjsLib.getDocument(url).promise;\n  }","\nconst PADDING = 25;\n\nexport function ggID() {\n    let id = 0;\n    return function genId() {\n      return id++;\n    };\n}\n\nexport function timeout(ms: number) {\n    return new Promise((res) => setTimeout(res, ms));\n}\n\nexport const noop = () => {};\n\nexport const getMovePosition = (x: number, y: number, dragX: number, dragY: number, width: number, height: number, pageWidth: number, pageHeight: number) => {\n  const newPositionTop = y + dragY;\n  const newPositionLeft = x + dragX;\n  const newPositionRight = newPositionLeft + width;\n  const newPositionBottom = newPositionTop + height;\n\n  const top = newPositionTop < 0 \n          ? 0 \n          : newPositionBottom > pageHeight + PADDING\n          ? pageHeight - height + PADDING\n          : newPositionTop;\n  const left = newPositionLeft < 0 \n      ? 0 \n      : newPositionRight > pageWidth + PADDING\n      ? pageWidth - width + PADDING\n      : newPositionLeft\n\n  return {\n      top,\n      left,\n  }\n};","import { readAsArrayBuffer } from './asyncReader';\nimport { fetchFont, getAsset } from './prepareAssets';\nimport { noop } from './helpers';\n\nexport async function save(pdfFile: File, objects: any[], name: string) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  const makeTextPDF = await getAsset('makeTextPDF');\n  let pdfDoc: { getPages: () => any[]; embedJpg: (arg0: unknown) => any; embedPng: (arg0: unknown) => any; embedPdf: (arg0: any) => [any] | PromiseLike<[any]>; save: () => any; };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const pageWidth = page.getWidth();\n    const embedProcesses = pageObjects.map(async (object: { type?: any; file?: any; x?: any; y?: any; width?: any; height?: any; lines?: any; lineHeight?: any; size?: any; fontFamily?: any; path?: any; scale?: any; }) => {\n      if (object.type === 'image') {\n        let { file, x, y, width, height } = object;\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          return noop;\n        }\n      } else if (object.type === 'text') {\n        let { x, y, lines, lineHeight, size, fontFamily } = object;\n        const font = await fetchFont(fontFamily);\n        const [textPage] = await pdfDoc.embedPdf(\n          await makeTextPDF({\n            lines,\n            fontSize: size,\n            lineHeight,\n            width: pageWidth,\n            height: pageHeight,\n            font: font?.buffer || fontFamily, // built-in font family\n            dy: font && font.correction && font.correction(size as number, lineHeight as number),\n          })\n        );\n        return () =>\n          page.drawPage(textPage, {\n            width: pageWidth,\n            height: pageHeight,\n            x,\n            y: -y,\n          });\n      } else if (object.type === 'drawing') {\n        let { x, y, path, scale } = object;\n        const {\n          pushGraphicsState,\n          setLineCap,\n          popGraphicsState,\n          setLineJoin,\n          LineCapStyle,\n          LineJoinStyle,\n        } = PDFLib;\n        return () => {\n          page.pushOperators(\n            pushGraphicsState(),\n            setLineCap(LineCapStyle.Round),\n            setLineJoin(LineJoinStyle.Round)\n          );\n          page.drawSvgPath(path, {\n            borderWidth: 5,\n            scale,\n            x,\n            y: pageHeight - y,\n          });\n          page.pushOperators(popGraphicsState());\n        };\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}","import React, { useState, createRef, useEffect } from 'react';\n\ninterface Props {\n    page: any;\n    updateDimensions: ({ width, height }: { width: number, height: number}) => void;\n}\n\nexport const PdfPage = ({ page, updateDimensions }: Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [ width, setWidth ] = useState(500);\n    const [ height, setHeight ] = useState(window.innerHeight);\n\n    const renderPage = async (p: Promise<any>) => {\n       const _page = await p;\n       if (_page) {\n           const context = canvasRef.current?.getContext('2d');\n           const viewport = _page.getViewport({ scale: 1 });\n    \n           setWidth(viewport.width);\n           setHeight(viewport.height);\n           \n           \n           if (context) {\n                await _page.render({\n                   canvasContext: canvasRef.current?.getContext('2d'),\n                   viewport \n                }).promise;\n            \n                updateDimensions({ width: viewport.width, height: viewport.height });\n           }\n       }\n    }\n\n    useEffect(() => {\n        renderPage(page);\n    }, [page, width, height])\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={width} \n                height={height} />\n        </div>\n    )\n}","export enum DragActions {\n    MOVE = 'MOVE',\n    SCALE = 'SCALE',\n    NO_MOVEMENT = 'NO_MOVEMENT'\n  }\n  ","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    position: relative\n`;\n\n","import React from 'react';\nimport { Header, Button } from 'semantic-ui-react';\n\ninterface Props {\n    onConfirm: () => void;\n    onDismiss: () => void;\n    title: string;\n}\n\nexport const ConfirmContent: React.FC<Props> = ({\n    title,\n    onConfirm,\n    onDismiss\n}) => (\n    <div>\n        <Header as='h4' inverted>{title}</Header>\n\n        <Button onClick={onDismiss}>No</Button>\n        <Button negative onClick={onConfirm}>Yes</Button>\n    </div>\n);","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\nconst ADJUSTERS_DIMENSIONS = 20;\n\ninterface Props {\n    dimmerActive: boolean;\n    cancelDelete: () => void;\n    deleteImage: () => void;\n    width: number;\n    height: number;\n    canvasRef: RefObject<HTMLCanvasElement>;\n    positionTop: number;\n    positionLeft: number;\n    onClick: DragEventListener<HTMLDivElement>;\n    handleMouseOut: DragEventListener<HTMLDivElement>;\n    handleMouseDown: DragEventListener<HTMLDivElement>;\n    handleMouseMove: DragEventListener<HTMLDivElement>;\n    handleMouseUp : DragEventListener<HTMLDivElement>;\n    handleImageScale: DragEventListener<HTMLDivElement>;\n}\n\nexport const Image: React.FC<Props> = ({\n    canvasRef,\n    positionTop,\n    positionLeft,\n    width,\n    height,\n    handleMouseOut,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleImageScale,\n    dimmerActive,\n    cancelDelete,\n    deleteImage,\n    onClick\n}) => {\n\n\n    return ( \n        <div\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseOut}\n            onDoubleClick={onClick}\n            style={{\n                position: \"absolute\",\n                top: positionTop,\n                left: positionLeft,\n                borderStyle: \"dashed\",\n                borderWidth: 1,\n                borderColor:  'grey',\n                width: width + 2,\n                height: height + 2,\n                cursor: 'move',\n            }}\n        >\n            <Dimmer.Dimmable \n                as={Div}\n                size='medium'\n                dimmed={dimmerActive}\n            >\n                <canvas \n                    ref={canvasRef}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                />\n                <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n                    <ConfirmContent \n                        title=\"Delete?\" \n                        onConfirm={deleteImage}\n                        onDismiss={cancelDelete}\n                    />\n                </Dimmer>\n            </Dimmer.Dimmable>\n            <div\n                    data-direction=\"top-left\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleImageScale}\n                    style={{\n                        position: 'absolute',\n                        cursor: 'nwse-resize',\n                        top: -5,\n                        left: -5,\n                        width: ADJUSTERS_DIMENSIONS,\n                        height: ADJUSTERS_DIMENSIONS,\n                    }} \n                />\n        </div>\n    )\n\n}","import React, { useState, createRef, useEffect } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Image as ImageComponent } from '../components/Image';\n\nconst IMAGE_MAX_SIZE = 300;\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    removeImage: () => void;\n    updateImageObject: (imageObject: Partial<ImageObject>) => void;\n}\n\nexport const Image = ({ x, y, payload, width, height, pageWidth, removeImage, pageHeight, updateImageObject }: ImageObject & Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [canvasWidth, setCanvasWidth] = useState(width);\n    const [canvasHeight, setCanvasHeight] = useState(height);\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [direction, setDirection] = useState<string[]>([]);\n    const [operation, setOperation] = useState<DragActions>(DragActions.NO_MOVEMENT);\n\n    const [dimmerActive, setDimmerActive] = useState(false);\n\n    const renderImage = (img: HTMLImageElement) => {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n\n        const context = canvas.getContext('2d');\n        if (!context) return;\n\n        let scale = 1;\n        if (canvasWidth > IMAGE_MAX_SIZE) {\n            scale = IMAGE_MAX_SIZE / canvasWidth;\n        } \n\n        if (canvasHeight > IMAGE_MAX_SIZE) {\n            scale = Math.min(scale, IMAGE_MAX_SIZE / canvasHeight);\n        }\n\n        const newCanvasWidth = canvasWidth * scale;\n        const newCanvasHeight = canvasHeight * scale;\n\n        setCanvasWidth(newCanvasWidth);\n        setCanvasHeight(newCanvasHeight);\n\n        canvas.width = newCanvasWidth;\n        canvas.height = newCanvasHeight;\n\n        context.drawImage(payload, 0, 0, newCanvasWidth, newCanvasHeight);\n        canvas.toBlob(blob => {\n            updateImageObject({ \n                file: blob as File, \n                 width: newCanvasWidth,\n                 height: newCanvasHeight,\n            });\n        });\n    }\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(true);\n        setOperation(DragActions.MOVE);\n        const directions = event.currentTarget.dataset.direction;\n        if (directions) {\n            setDirection(directions.split('-'));\n            setOperation(DragActions.SCALE);\n        }\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                canvasWidth,\n                canvasHeight,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n\n        if (operation === DragActions.MOVE) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                canvasWidth,\n                canvasHeight,\n                pageWidth,\n                pageHeight\n            );\n        \n            updateImageObject({\n                x: left,\n                y: top,\n            });\n        }\n\n        if (operation === DragActions.SCALE) {\n            updateImageObject({\n                x: positionLeft,\n                y: positionTop,\n            });\n\n        }\n\n        setOperation(DragActions.NO_MOVEMENT);\n    }\n\n    const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (operation === DragActions.MOVE) {\n            handleMouseUp(event);\n        }\n    }\n\n    const handleImageScale = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            if (direction.includes('left')) {\n                setPositionLeft(positionLeft + event.movementX);\n                setCanvasWidth(canvasWidth - event.movementX);\n            }\n\n            if (direction.includes('top')) {\n                setPositionTop(positionTop + event.movementY);\n                setCanvasHeight(canvasHeight - event.movementY);\n            }\n\n            if (direction.includes('right')) {\n                setCanvasWidth(canvasWidth + event.movementX);\n            }\n\n            if (direction.includes('bottom')) {\n                setCanvasHeight(canvasHeight + event.movementY);\n            }\n        }\n    }\n\n    useEffect(() => {\n        renderImage(payload);\n    }, [payload, canvasWidth, canvasHeight]);\n\n    const handleClick = () =>  setDimmerActive(true);\n    const onCancelDelete = () => setDimmerActive(false);\n\n    const deleteImage = () => {\n        onCancelDelete();\n        removeImage();\n    }\n\n    return (\n        <ImageComponent\n            onClick={handleClick}\n            dimmerActive={dimmerActive}\n            cancelDelete={onCancelDelete}\n            deleteImage={deleteImage}\n            positionLeft={positionLeft}\n            positionTop={positionTop}\n            canvasRef={canvasRef}\n            width={canvasWidth}\n            height={canvasHeight}\n            handleImageScale={handleImageScale}\n            handleMouseDown={handleMouseDown}\n            handleMouseUp={handleMouseUp}\n            handleMouseMove={handleMouseMove}\n            handleMouseOut={handleMouseOut}\n        />\n    );\n}\n","import React, { useState, createRef, useEffect } from 'react';\nimport { Modal, Button } from \"semantic-ui-react\";\n\ninterface Props {\n    open: boolean;\n    dismiss: () => void;\n    confirm: (drawing?: { width: number, height: number, path: string }) => void;\n    drawing?: DrawingObject;\n}\n\nexport const DrawingModal = ({ open, dismiss, confirm, drawing }: Props) => {\n    const svgRef = createRef<SVGSVGElement>();\n    const [paths, setPaths] = useState<Array<[string, number, number]>>([]);\n    const [path, setPath] = useState((drawing && drawing.path) || '');\n    const [svgX, setSvgX] = useState(0);\n    const [svgY, setSvgY] = useState(0);\n    const [minX, setMinX] = useState(Infinity);\n    const [maxX, setMaxX] = useState(0);\n    const [minY, setMinY] = useState(Infinity);\n    const[ maxY, setMaxY] = useState(0);\n    const [mouseDown, setMouseDown] = useState(false);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        if (!svg) return;\n        const { x, y } = svg.getBoundingClientRect();\n        setSvgX(x);\n        setSvgY(y);\n    }, [svgRef]);\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(true);\n\n        const x = event.clientX - svgX;\n        const y = event.clientY - svgY;\n        setMinX(Math.min(minX, x));\n        setMaxX(Math.max(maxX, x));\n        setMinY(Math.min(minY, y));\n        setMaxY(Math.max(maxY, y));\n        setPath(path + `M${x},${y}`);\n        setPaths([...paths, ['M', x, y]]);\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        if (!mouseDown) return;\n\n        const x = event.clientX - svgX;\n        const y = event.clientY - svgY;\n        setMinX(Math.min(minX, x));\n        setMaxX(Math.max(maxX, x));\n        setMinY(Math.min(minY, y));\n        setMaxY(Math.max(maxY, y));\n        setPath(path + `L${x},${y}`);\n        setPaths([...paths, ['L', x, y]]);\n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n    }\n\n    const resetDrawingBoard = () => {\n        setPaths([]);\n        setPath('');\n        setMinX(Infinity);\n        setMaxX(0);\n        setMinY(Infinity);\n        setMaxY(0);\n    }\n\n    const handleDone = () => {\n        if (!paths.length) {\n            confirm();\n            return;\n        }\n        \n        const boundingWidth = maxX - minX;\n        const boundingHeight = maxY - minY;\n        \n        const dx = -(minX - 10);\n        const dy = -(minY - 10);\n\n        confirm({\n            width: boundingWidth + 20,\n            height: boundingHeight + 20,\n            path: paths.reduce((fullPath, lineItem) => \n                `${fullPath}${lineItem[0]}${lineItem[1] + dx}, ${lineItem[2] + dy}`\n            , ''),\n        });  \n\n        closeModal();\n    }\n\n    const closeModal = () => {\n        resetDrawingBoard();\n        dismiss();\n    }\n\n    return (\n        <Modal \n            size=\"small\"\n            open={open}\n            onClose={closeModal}\n        >\n            <Modal.Header>Add your Drawing</Modal.Header>\n            <Modal.Content>\n                <div\n                    onMouseDown={handleMouseDown}\n                    onMouseMove={handleMouseMove}\n                    onMouseUp={handleMouseUp}\n                >\n                    <svg \n                        ref={svgRef}\n                        style={{\n                            width: '100%',\n                            height: '50vh',\n                        }}>\n                        <path\n                            strokeWidth=\"5\"\n                            strokeLinejoin=\"round\"\n                            strokeLinecap=\"round\"\n                            stroke=\"black\"\n                            fill=\"none\"\n                            d={path}\n                        />\n                    </svg>\n                </div>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button\n                    color=\"black\"\n                    content=\"Cancel\"\n                    onClick={closeModal} />\n                <Button\n                    content=\"Done\"\n                    labelPosition=\"right\"\n                    icon=\"checkmark\"\n                    onClick={handleDone}\n                    positive />\n            </Modal.Actions>\n        </Modal>\n    )\n}","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\ninterface Props {\n    path?: string;\n    width: number;\n    height: number;\n    positionTop: number;\n    positionLeft: number;\n    dimmerActive: boolean;\n    cancelDelete: () => void;\n    deleteDrawing: () => void;\n    onClick: () => void;\n    svgRef: RefObject<SVGSVGElement>;\n    handleMouseDown: DragEventListener<HTMLDivElement>\n    handleMouseUp: DragEventListener<HTMLDivElement>\n    handleMouseMove: DragEventListener<HTMLDivElement>\n    handleMouseOut: DragEventListener<HTMLDivElement>\n}\nexport const Drawing: React.FC<Props> = ({\n    dimmerActive,\n    cancelDelete,\n    deleteDrawing,\n    positionTop,\n    positionLeft,\n    width,\n    height,\n    svgRef,\n    path,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseOut,\n    handleMouseUp,\n    onClick,\n}) => {\n\n    return (\n        <div\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseOut}\n            onDoubleClick={onClick}\n            style={{\n                position: 'absolute',\n                top: positionTop,\n                left: positionLeft,\n                width,\n                height,\n                cursor: 'move',\n            }}\n        >\n            <Dimmer.Dimmable as={Div} dimmed={dimmerActive}>\n                <svg\n                    ref={svgRef}\n                >\n                        <path\n                            strokeWidth=\"5\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            stroke=\"black\"\n                            fill=\"none\"\n                            d={path}\n                        />\n                </svg>\n                <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n                    <ConfirmContent \n                        title=\"Delete?\" \n                        onConfirm={deleteDrawing}\n                        onDismiss={cancelDelete}\n                    />\n                </Dimmer>\n            </Dimmer.Dimmable>\n        </div>\n    )\n}","import React, { createRef, useEffect, useState } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Drawing as DrawingComponent } from '../components/Drawing';\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    removeDrawing: () => void;\n    updateDrawingObject: (drawingObject: Partial<DrawingObject>) => void;\n}\n\nexport const Drawing = ({ x, y, width, height, path, pageWidth, pageHeight, removeDrawing, updateDrawingObject }: DrawingObject & Props) => {\n    const svgRef = createRef<SVGSVGElement>();\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [operation, setOperation] = useState<DragActions>(DragActions.NO_MOVEMENT);\n    const [dimmerActive, setDimmerActive] = useState(false);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        if (svg) {\n            svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n        }\n    }, [svgRef, width, height]);\n\n    const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n        setMouseDown(true);\n        setOperation(DragActions.MOVE);\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n\n        if (operation === DragActions.MOVE) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n        \n            updateDrawingObject({\n                x: left,\n                y: top,\n            });\n        }\n\n        if (operation === DragActions.SCALE) {\n            updateDrawingObject({\n                x: positionLeft,\n                y: positionTop,\n            });\n\n        }\n\n        setOperation(DragActions.NO_MOVEMENT);\n    }\n\n    const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (operation === DragActions.MOVE) {\n            handleMouseUp(event);\n        }\n    }\n\n    const handleClick = () => setDimmerActive(true);\n    const cancelDelete = () => setDimmerActive(false);\n\n    const confirmDelete = () => {\n        cancelDelete();\n        removeDrawing();\n    }\n    return (\n        <DrawingComponent \n            path={path}\n            width={width}\n            svgRef={svgRef}\n            height={height}\n            onClick={handleClick}\n            cancelDelete={cancelDelete}\n            dimmerActive={dimmerActive}\n            deleteDrawing={confirmDelete}\n            handleMouseDown={handleMousedown}\n            handleMouseMove={handleMouseMove}\n            handleMouseOut={handleMouseOut}\n            handleMouseUp={handleMouseUp}\n            positionLeft={positionLeft}\n            positionTop={positionTop}\n        />\n    )\n}","\nimport React, { RefObject } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Menu, Container, Segment, Header, Icon, Button, Grid, Dropdown } from 'semantic-ui-react';\nimport { readAsPDF, readAsDataURL, readAsImage } from './utils/asyncReader';\nimport { save } from './utils/pdf';\nimport { PdfPage } from './components/PdfPage';\nimport { Image } from './containers/Image';\nimport { ggID } from './utils/helpers';\nimport { DrawingModal } from './components/DrawingModal';\nimport { Drawing } from './containers/Drawing';\n\n\ninterface State {\n  pdfFile?: File;\n    selectedPageIndex: number;\n    pdfName: string;\n    pages: any[];\n    allObjects: AllObjects[];\n    pagesScale: any[];\n    pageDimensions: Dimensions[];\n    saving: boolean;\n    drawing: boolean;\n    uploading: boolean;\n    selectedDrawing: number;\n}\n\nclass App extends React.Component {\n  pdfInput: RefObject<HTMLInputElement>;\n  imageInput: RefObject<HTMLInputElement>;\n\n  state: State = {\n    pdfFile: undefined,\n    selectedPageIndex: -1,\n    pdfName: '',\n    pages: [],\n    allObjects: [],\n    pagesScale: [],\n    pageDimensions: [],\n    saving: false,\n    drawing: false,\n    uploading: false,\n    selectedDrawing: 0,\n  }\n\n  constructor() {\n    super({});\n\n    this.pdfInput = React.createRef<HTMLInputElement>();\n    this.imageInput = React.createRef<HTMLInputElement>();\n  }\n\n  onUploadPDF = async (e: React.ChangeEvent<HTMLInputElement>  & { dataTransfer?: DataTransfer }) => {\n    this.setState({ uploading: true });\n    const files: FileList | undefined =  e.target.files || (e.dataTransfer && e.dataTransfer.files);\n    if (!files) return;\n    \n    const file = files[0];\n    if (!file || file.type !== \"application/pdf\") return;\n\n    this.setState({\n      selectedPageIndex: -1\n    });\n\n    try {\n      await this.addPDF(file);\n\n      this.setState({\n        selectedPageIndex: 0\n      });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ uploading: false })\n    }\n  }\n\n  addPDF = async (file: File) => {\n    try {\n      const pdf = await readAsPDF(file);\n      this.setState({\n        pdfName: file.name,\n        pdfFile: file,\n        pages: Array(pdf.numPages)\n          .fill(0)\n          .map((_, i) => pdf.getPage(i + 1)),\n        allObjects: Array(pdf.numPages).fill([]),\n        pagesScale: Array(pdf.numPages).fill(1),\n        pageDimensions: Array(pdf.numPages).fill({ width: 0, height: 0 }) \n      });\n    } catch (e) {\n      console.log(\"Failed to add pdf.\");\n      throw e;\n    }\n  }\n\n  savePDF = async () => {\n    const { pdfFile, saving, pages, allObjects, pdfName } = this.state;\n    if (!pdfFile || saving || !pages.length) return;\n\n    this.setState({ saving: true });\n    \n    try {\n      await save(pdfFile, allObjects, pdfName);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ saving: false });\n    }\n  }\n\n  clearInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.value = '';\n  }\n\n  renderHiddenInputs = () => (\n    <>\n      <input\n        ref={this.pdfInput}\n        type=\"file\"\n        name=\"pdf\"\n        id=\"pdf\"\n        accept=\"application/pdf\"\n        onChange={this.onUploadPDF}\n        onClick={this.clearInput}\n        style={{ display: 'none' }} />\n      { this.state.selectedPageIndex > -1 && (\n          <input\n            ref={this.imageInput}\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            onClick={this.clearInput}\n            style={{ display: 'none' }}\n            onChange={this.onUploadImage} \n          /> \n        ) \n      }\n    </>\n  )\n\n  onUploadImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { selectedPageIndex } = this.state;\n    const file: File | null = e.target.files && e.target.files[0];\n    if (file && selectedPageIndex >= 0) {\n      this.addImage(file);\n    }\n  }\n\n  addImage = async (file: File) => {\n    const { allObjects, selectedPageIndex } = this.state;\n    try {\n      // get dataURL to prevent canvas from tainted\n      const url = await readAsDataURL(file);\n      const img = await readAsImage(url as any);\n      const id = ggID();\n      const { width, height } = img;\n      const object: ImageObject = {\n        id,\n        type: \"image\",\n        width,\n        height,\n        x: 0,\n        y: 0,\n        payload: img,\n        file\n      };\n      this.setState({\n        allObjects: allObjects.map((objects, pIndex) =>\n          pIndex === selectedPageIndex ? [...objects, object] : objects\n        )\n      });\n    } catch (e) {\n      console.log(`Fail to add image.`, e);\n    }\n  }\n\n  handleFileInput = (inputName: string) => () => {\n    const input = inputName === 'pdf' \n    ? this.pdfInput.current\n    : inputName === 'image'\n    ? this.imageInput.current\n    : null;\n\n    if (input) {\n      input.click();\n    }\n  }\n\n  renderEmpty = () => (\n    <Segment placeholder loading={this.state.uploading} style={{ height: '80vh' }}>\n      <Header icon>\n        <Icon name='file pdf outline' />\n        Upload your PDF to start editing!\n      </Header>\n      <Button primary onClick={this.handleFileInput('pdf')}>Load PDF</Button>\n    </Segment>\n  );\n\n  nextPage = () => {\n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex + 1,\n    }))\n  }\n\n  previousPage = () => { \n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex - 1,\n    }))\n  }\n\n  updateObject = (id: number, pageIndex: number, payload: Partial<ImageObject>) => {\n    const { allObjects } = this.state;\n    let pageObjects = allObjects[pageIndex];\n    const objectToUpdate = pageObjects[id];\n    const newObject: Attachment = { ...objectToUpdate, ...(payload as Attachment)};\n    pageObjects[id] = newObject;\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? pageObjects : objects\n      )\n    })\n  }\n\n  updatePageDimensions = (pageIndex: number, dimensions: { width: number, height: number }) => {\n    this.setState({\n      pageDimensions: this.state.pageDimensions.map((page, index) => \n        pageIndex === index ? dimensions : page\n      )\n    });\n  }\n\n  removeObject = (id: number, pageIndex: number) => {\n    const { allObjects } = this.state;\n    const pageObjects = allObjects[pageIndex];\n    pageObjects.splice(id, 1);\n    allObjects[pageIndex] = pageObjects;\n    this.setState({ allObjects });\n  }\n\n  openDrawingModal = () => {\n    this.setState({\n      drawing: true\n    });\n  }\n\n  closeDrawingModal = () => {\n    this.setState({\n      drawing: false\n    })\n  }\n\n  addDrawing = (pageIndex: number, drawing?: { width: number, height: number, path: string }) => {\n    const { allObjects } = this.state;\n    if (!drawing) return;\n\n    const newObject: DrawingObject = {\n      id: ggID(),\n      type: 'drawing',\n      ...drawing,\n      x: 0,\n      y: 0,\n    }\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? [...objects, newObject] : objects\n      )\n    })\n  }\n\n  render() {\n    const { allObjects, pdfName, pdfFile, pages, saving, selectedPageIndex, pageDimensions } = this.state;\n    const isMultiplePages = pages.length > 1;\n    const isLastPage = selectedPageIndex === pages.length - 1;\n    const currentPage = pages[selectedPageIndex];\n    const allObjectsForCurrentPage = allObjects[selectedPageIndex];\n    const currentPageDimensions = pageDimensions[selectedPageIndex];\n  \n    return (\n      <Container style={{ margin: 30 }}>\n        {this.renderHiddenInputs()}\n          <Menu pointing>\n            <Menu.Item header>PDF Editor</Menu.Item>\n            <Menu.Menu position=\"right\">\n              {pdfFile && (\n                <>\n                  <Dropdown \n                    item \n                    closeOnBlur\n                    icon=\"edit outline\" \n                    simple>\n                    <Dropdown.Menu>\n                      <Dropdown.Item onClick={this.handleFileInput('image')}>\n                        Add Image\n                      </Dropdown.Item>\n                      <Dropdown.Item onClick={this.openDrawingModal}>Add Drawing</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  <Menu.Item\n                    name={saving ? 'Saving...' : 'Save'}\n                    disabled={saving}\n                    onClick={this.savePDF} />\n                </>\n              )}\n               <Menu.Item \n                    name=\"Upload new PDF\"\n                    onClick={this.handleFileInput('pdf')} />\n              </Menu.Menu>\n          </Menu>\n        \n        \n        {!pdfFile ? this.renderEmpty() : (\n          <Grid>\n              <Grid.Row>\n                <Grid.Column width={3} verticalAlign=\"middle\">\n                  {isMultiplePages && selectedPageIndex !== 0 && (\n                    <Button circular icon=\"angle left\" onClick={this.previousPage} />\n                  )}\n                </Grid.Column>\n                <Grid.Column width={10}>\n                  {currentPage && (\n                      <Segment\n                        style={{ position: 'relative' }}\n                        compact\n                        stacked={isMultiplePages && !isLastPage}\n                      >\n                        <PdfPage\n                          updateDimensions={(dimensions) => this.updatePageDimensions(selectedPageIndex, dimensions)}\n                          page={currentPage} />\n                          {allObjectsForCurrentPage && allObjectsForCurrentPage.map((data, index) => {\n                            const key = `${pdfName}-${index}`;\n                            if (data.type === 'image') {\n                              return (\n                                  <Image\n                                    removeImage={() => this.removeObject(index, selectedPageIndex)}\n                                    key={key}\n                                    pageWidth={currentPageDimensions.width}\n                                    pageHeight={currentPageDimensions.height}\n                                    updateImageObject={(image) => this.updateObject(index, selectedPageIndex, image)}\n                                    {...(data as ImageObject)}  \n                                  />\n                              )\n                            }\n\n                            if (data.type === 'drawing') {\n                              return (\n                                <Drawing\n                                  key={key}\n                                  removeDrawing={() => this.removeObject(index, selectedPageIndex)}\n                                  pageWidth={currentPageDimensions.width}\n                                  pageHeight={currentPageDimensions.height}\n                                  updateDrawingObject={(drawing) => this.updateObject(index, selectedPageIndex, drawing)}\n                                  {...data as DrawingObject}\n                                />\n                              )\n                            }\n                            return null;\n                          })}\n                      </Segment>\n                    )\n                  }\n                </Grid.Column>\n                <Grid.Column width={3} verticalAlign=\"middle\" textAlign=\"right\">\n                  {isMultiplePages && selectedPageIndex !== pages.length - 1 && (\n                    <Button circular icon=\"angle right\" onClick={this.nextPage}/>\n                  )}\n                </Grid.Column>\n              </Grid.Row>\n          </Grid>\n        )}\n\n        {\n          <DrawingModal \n            open={this.state.drawing} \n            dismiss={this.closeDrawingModal}\n            confirm={(drawingAttachment) => this.addDrawing(selectedPageIndex, drawingAttachment)}\n          />\n        }\n      </Container>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}