{"version":3,"sources":["utils/prepareAssets.ts","utils/asyncReader.ts","utils/helpers.ts","utils/pdf.ts","entities/index.ts","components/PdfPage.tsx","ui/components/Div.ts","components/ConfirmContent.tsx","components/Image.tsx","containers/Image.tsx","components/Text.tsx","containers/Text.tsx","components/Drawing.tsx","containers/Drawing.tsx","entities/helpContent.ts","components/HelpModal.tsx","components/DrawingModal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scripts","name","src","assets","getAsset","scriptName","fonts","Courier","correction","size","lineHeight","Helvetica","readAsArrayBuffer","標楷體","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","window","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","ggID","id","noop","getMovePosition","x","y","dragX","dragY","width","height","pageWidth","pageHeight","newPositionTop","newPositionLeft","top","left","normalize","value","parseFloat","toFixed","save","pdfFile","objects","PDFLib","download","PDFDocument","load","pdfDoc","console","log","pagesProcesses","getPages","map","page","pageIndex","pageObjects","getHeight","getWidth","embedProcesses","object","type","embedJpg","embedPng","drawImage","text","fontFamily","embedFont","pdfFont","drawText","maxWidth","font","path","scale","stroke","strokeWidth","pushGraphicsState","setLineCap","popGraphicsState","setLineJoin","LineCapStyle","LineJoinStyle","rgb","pushOperators","Round","color","w3color","toRgb","drawSvgPath","borderColor","r","g","b","borderWidth","all","forEach","p","pdfBytes","DragActions","Color","Attachment","TextMode","PdfPage","updateDimensions","canvasRef","createRef","useState","setWidth","innerHeight","setHeight","renderPage","_page","context","current","getContext","viewport","getViewport","render","canvasContext","useEffect","ref","Div","styled","div","ConfirmContent","title","onConfirm","onDismiss","Header","as","inverted","Button","onClick","negative","positionTop","positionLeft","handleMouseOut","handleMouseDown","handleMouseMove","handleMouseUp","handleImageScale","dimmerActive","cancelDelete","deleteImage","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onDoubleClick","style","position","borderStyle","cursor","Dimmer","Dimmable","dimmed","active","onClickOutside","data-direction","payload","removeImage","updateImageObject","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","mouseDown","setMouseDown","setPositionTop","setPositionLeft","direction","setDirection","NO_MOVEMENT","operation","setOperation","setDimmerActive","event","preventDefault","MOVE","movementX","movementY","SCALE","canvas","Math","min","newCanvasWidth","newCanvasHeight","toBlob","renderImage","onCancelDelete","includes","directions","currentTarget","dataset","split","Text","inputRef","mode","onChangeText","toggleEditMode","border","fontSize","COMMAND","wordWrap","padding","onChange","readOnly","outline","boxSizing","margin","backgroundColor","updateTextObject","useRef","content","setContent","textMode","setTextMode","prepareTextAndUpdate","document","getSelection","removeAllRanges","lines","input","INSERT","focus","select","Drawing","deleteDrawing","svgRef","strokeLinecap","strokeLinejoin","fill","d","removeDrawing","updateDrawingObject","svg","setAttribute","helpContent","HelpModal","open","dismiss","activeIndex","setActiveIndex","handleClick","data","index","Modal","onClose","dimmer","Icon","Content","scrolling","Accordion","fluid","Fragment","key","Title","DrawingModal","confirm","drawing","paths","setPaths","setPath","svgX","setSvgX","svgY","setSvgY","Infinity","minX","setMinX","maxX","setMaxX","minY","setMinY","maxY","setMaxY","setStrokeWidth","BLACK","setStroke","strokeDropdownOpen","setStrokeDropdownOpen","getBoundingClientRect","closeModal","handleStrokeSelect","Menu","Item","header","Dropdown","item","selected","trigger","Label","onBlur","display","gridTemplateColumns","Object","values","clientX","clientY","max","Actions","labelPosition","icon","length","dx","dy","reduce","fullPath","lineItem","positive","App","pdfInput","imageInput","state","undefined","selectedPageIndex","pdfName","pages","allObjects","pagesScale","pageDimensions","saving","uploading","selectedDrawing","helpModalOpen","onUploadPDF","e","setState","files","target","dataTransfer","addPDF","pdf","Array","numPages","_","i","getPage","savePDF","clearInput","renderHiddenInputs","accept","onUploadImage","addImage","pIndex","handleFileInput","inputName","click","renderEmpty","Segment","placeholder","loading","primary","nextPage","prevState","previousPage","updateObject","objectToUpdate","newObject","updatePageDimensions","dimensions","removeObject","splice","openDrawingModal","closeDrawingModal","addDrawing","addText","React","this","isMultiplePages","isLastPage","currentPage","allObjectsForCurrentPage","currentPageDimensions","Container","pointing","closeOnBlur","simple","disabled","Grid","Row","Column","verticalAlign","circular","compact","stacked","image","textObject","textAlign","drawingAttachment","Component","Boolean","location","hostname","match","script","createElement","body","appendChild","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aff710f8.chunk.js","sourcesContent":["type ScriptName = 'pdfjsLib' | 'PDFLib' | 'download' | 'makeTextPDF' | 'w3Color';\n\ninterface Script {\n    name: ScriptName;\n    src: string;\n};\n\nconst scripts: Script[] = [\n    {\n      name: 'pdfjsLib',\n      src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n    },\n    {\n      name: 'PDFLib',\n      src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n    },\n    {\n      name: 'download',\n      src: 'https://unpkg.com/downloadjs@1.4.7',\n    },\n    { name: 'makeTextPDF', src: 'https://cdn.jsdelivr.net/gh/snamoah/react-pdf-editor/public/makeTextPDF.js' },\n    { name: 'w3Color', src: 'https://www.w3schools.com/lib/w3color.js' }\n];\n  \nconst assets: { [key: string]: any } = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n  \n  export const prepareAssets = () => {\n    // prepare scripts\n    scripts.forEach(({ name, src }) => {\n      assets[name] = new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = src;\n        script.onload = () => {\n          resolve(window[name as any]);\n          console.log(`${name} is loaded.`);\n        };\n        script.onerror = () =>\n          reject(`The script ${name} didn't load correctly.`);\n        document.body.appendChild(script);\n      });\n    });\n}\n\ninterface Font {\n    src?: string;\n    correction?: (size: number, lineHeight: number) => number;\n    [key: string]: any;\n};\n\ninterface FontsType {\n    [key: string]: Font\n}\n\nconst fonts: FontsType = {\n    Courier: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 6;\n      },\n    },\n    Helvetica: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 10;\n      },\n    },\n    'Times-Roman': {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 7;\n      },\n    },\n  };\n\n  // Available fonts\n  export const Fonts = {\n    ...fonts,\n    標楷體: {\n      src: '/CK.ttf', // 9.9 MB\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2;\n      },\n    },\n  };\n\n\n\n  export const fetchFont = (name: string) => {\n    if (fonts[name as any]) return fonts[name as any];\n\n    const font = Fonts[name as keyof typeof Fonts];\n    if (!font) throw new Error(`Font '${name}' not exists.`);\n\n    fonts[name] = fetch(font.src)\n      .then((r) => r.arrayBuffer())\n      .then((fontBuffer) => {\n        const fontFace = new (window as any).FontFace(name, fontBuffer);\n        fontFace.display = 'swap';\n        fontFace.load().then(() => (document as any).fonts.add(fontFace));\n        return {\n          ...font,\n          buffer: fontBuffer,\n        };\n      });\n  }","import { getAsset } from \"./prepareAssets\";\n\nexport const readAsArrayBuffer = (file: File) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  }\n  \n  export const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n      if (src instanceof Blob) {\n        const url = window.URL.createObjectURL(src);\n        img.src = url;\n      } else {\n        img.src = src;\n      }\n    });\n  }\n  \n  export function readAsDataURL(file: File) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  }\n  \n  export async function readAsPDF(file: File) {\n    const pdfjsLib = await getAsset('pdfjsLib');\n    // Safari possibly get webkitblobresource error 1 when using origin file blob\n    const blob = new Blob([file]);\n    const url = window.URL.createObjectURL(blob);\n    return pdfjsLib.getDocument(url).promise;\n  }","\nconst PADDING = 25;\n\nexport function ggID() {\n    let id = 0;\n    return function genId() {\n      return id++;\n    };\n}\n\nexport function timeout(ms: number) {\n    return new Promise((res) => setTimeout(res, ms));\n}\n\nexport const noop = () => {};\n\nexport const getMovePosition = (x: number, y: number, dragX: number, dragY: number, width: number, height: number, pageWidth: number, pageHeight: number) => {\n  const newPositionTop = y + dragY;\n  const newPositionLeft = x + dragX;\n  const newPositionRight = newPositionLeft + width;\n  const newPositionBottom = newPositionTop + height;\n\n  const top = newPositionTop < 0 \n          ? 0 \n          : newPositionBottom > pageHeight + PADDING\n          ? pageHeight - height + PADDING\n          : newPositionTop;\n  const left = newPositionLeft < 0 \n      ? 0 \n      : newPositionRight > pageWidth + PADDING\n      ? pageWidth - width + PADDING\n      : newPositionLeft\n\n  return {\n      top,\n      left,\n  }\n};\n\nexport const normalize = (value: number) => parseFloat((value / 255).toFixed(1))","import { readAsArrayBuffer } from './asyncReader';\nimport { fetchFont, getAsset } from './prepareAssets';\nimport { noop, normalize } from './helpers';\n\nexport async function save(pdfFile: File, objects: any[], name: string) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  const makeTextPDF = await getAsset('makeTextPDF');\n  let pdfDoc: { getPages: () => any[]; embedFont: (arg0: unknown) => any; embedJpg: (arg0: unknown) => any; embedPng: (arg0: unknown) => any; embedPdf: (arg0: any) => [any] | PromiseLike<[any]>; save: () => any; };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const pageWidth = page.getWidth();\n    const embedProcesses = pageObjects.map(async (object: Attachment) => {\n      if (object.type === 'image') {\n        let { file, x, y, width, height } = (object as ImageObject);\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          return noop;\n        }\n      } else if (object.type === 'text') {\n        let { x, y, text, lineHeight, size, fontFamily, width } = (object as TextObject);\n        const pdfFont = await pdfDoc.embedFont(fontFamily);\n        return () =>\n          page.drawText(text, {\n            maxWidth: width,\n            font: pdfFont,\n            size,\n            lineHeight,\n            x,\n            y: pageHeight - size! - y,\n          });\n      } else if (object.type === 'drawing') {\n        let { x, y, path, scale, stroke, strokeWidth } = (object as DrawingObject);\n        const {\n          pushGraphicsState,\n          setLineCap,\n          popGraphicsState,\n          setLineJoin,\n          LineCapStyle,\n          LineJoinStyle,\n          rgb,\n        } = PDFLib;\n        return () => {\n          page.pushOperators(\n            pushGraphicsState(),\n            setLineCap(LineCapStyle.Round),\n            setLineJoin(LineJoinStyle.Round)\n          );\n          \n          const color = window.w3color(stroke!).toRgb();\n\n          page.drawSvgPath(path, {\n            borderColor: rgb(\n              normalize(color.r), \n              normalize(color.g), \n              normalize(color.b),\n            ),\n            borderWidth: strokeWidth,\n            scale,\n            x,\n            y: pageHeight - y,\n          });\n          page.pushOperators(popGraphicsState());\n        };\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}","export enum DragActions {\n    MOVE = 'MOVE',\n    SCALE = 'SCALE',\n    NO_MOVEMENT = 'NO_MOVEMENT'\n}\n\nexport enum Color {\n  RED = 'red',\n  ORANGE = 'orange',\n  YELLOW = 'yellow',\n  OLIVE = 'olive',\n  GREEN = 'green',\n  TEAL = 'teal',\n  BLUE = 'blue',\n  VIOLOET = 'violet',\n  PURPLE = 'purple',\n  BROWN = 'brown',\n  GREY = 'grey',\n  BLACK = 'black',\n}\n\nexport enum Attachment {\n    IMAGE = 'image',\n    DRAWING  = 'drawing',\n    TEXT = 'text',\n}\n\nexport enum TextMode {\n    INSERT = 'insert',\n    COMMAND = 'command'\n}","import React, { useState, createRef, useEffect } from 'react';\n\ninterface Props {\n    page: any;\n    updateDimensions: ({ width, height }: { width: number, height: number}) => void;\n}\n\nexport const PdfPage = ({ page, updateDimensions }: Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [ width, setWidth ] = useState(500);\n    const [ height, setHeight ] = useState(window.innerHeight);\n\n    const renderPage = async (p: Promise<any>) => {\n       const _page = await p;\n       if (_page) {\n           const context = canvasRef.current?.getContext('2d');\n           const viewport = _page.getViewport({ scale: 1 });\n    \n           setWidth(viewport.width);\n           setHeight(viewport.height);\n           \n           \n           if (context) {\n                await _page.render({\n                   canvasContext: canvasRef.current?.getContext('2d'),\n                   viewport \n                }).promise;\n            \n                updateDimensions({ width: viewport.width, height: viewport.height });\n           }\n       }\n    }\n\n    useEffect(() => {\n        renderPage(page);\n    }, [page, width, height])\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={width} \n                height={height} />\n        </div>\n    )\n}","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    position: relative\n`;\n\n","import React from 'react';\nimport { Header, Button } from 'semantic-ui-react';\n\ninterface Props {\n    onConfirm: () => void;\n    onDismiss: () => void;\n    title: string;\n}\n\nexport const ConfirmContent: React.FC<Props> = ({\n    title,\n    onConfirm,\n    onDismiss\n}) => (\n    <div>\n        <Header as='h4' inverted>{title}</Header>\n\n        <Button onClick={onDismiss}>No</Button>\n        <Button negative onClick={onConfirm}>Yes</Button>\n    </div>\n);","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\nconst ADJUSTERS_DIMENSIONS = 20;\n\ninterface Props {\n    dimmerActive: boolean;\n    cancelDelete: () => void;\n    deleteImage: () => void;\n    width: number;\n    height: number;\n    canvasRef: RefObject<HTMLCanvasElement>;\n    positionTop: number;\n    positionLeft: number;\n    onClick: DragEventListener<HTMLDivElement>;\n    handleMouseOut: DragEventListener<HTMLDivElement>;\n    handleMouseDown: DragEventListener<HTMLDivElement>;\n    handleMouseMove: DragEventListener<HTMLDivElement>;\n    handleMouseUp : DragEventListener<HTMLDivElement>;\n    handleImageScale: DragEventListener<HTMLDivElement>;\n}\n\nexport const Image: React.FC<Props> = ({\n    canvasRef,\n    positionTop,\n    positionLeft,\n    width,\n    height,\n    handleMouseOut,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleImageScale,\n    dimmerActive,\n    cancelDelete,\n    deleteImage,\n    onClick\n}) => {\n\n\n    return ( \n        <div\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseOut}\n            onDoubleClick={onClick}\n            style={{\n                position: \"absolute\",\n                top: positionTop,\n                left: positionLeft,\n                borderStyle: \"dashed\",\n                borderWidth: 1,\n                borderColor:  'grey',\n                width: width + 2,\n                height: height + 2,\n                cursor: 'move',\n            }}\n        >\n            <Dimmer.Dimmable \n                as={Div}\n                size='medium'\n                dimmed={dimmerActive}\n            >\n                <canvas \n                    ref={canvasRef}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                />\n                <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n                    <ConfirmContent \n                        title=\"Delete?\" \n                        onConfirm={deleteImage}\n                        onDismiss={cancelDelete}\n                    />\n                </Dimmer>\n            </Dimmer.Dimmable>\n            <div\n                    data-direction=\"top-left\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleImageScale}\n                    style={{\n                        position: 'absolute',\n                        cursor: 'nwse-resize',\n                        top: -5,\n                        left: -5,\n                        width: ADJUSTERS_DIMENSIONS,\n                        height: ADJUSTERS_DIMENSIONS,\n                    }} \n                />\n        </div>\n    )\n\n}","import React, { useState, createRef, useEffect } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Image as ImageComponent } from '../components/Image';\n\nconst IMAGE_MAX_SIZE = 300;\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    removeImage: () => void;\n    updateImageObject: (imageObject: Partial<ImageObject>) => void;\n}\n\nexport const Image = ({ x, y, payload, width, height, pageWidth, removeImage, pageHeight, updateImageObject }: ImageObject & Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [canvasWidth, setCanvasWidth] = useState(width);\n    const [canvasHeight, setCanvasHeight] = useState(height);\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [direction, setDirection] = useState<string[]>([]);\n    const [operation, setOperation] = useState<DragActions>(DragActions.NO_MOVEMENT);\n\n    const [dimmerActive, setDimmerActive] = useState(false);\n\n    const renderImage = (img: HTMLImageElement) => {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n\n        const context = canvas.getContext('2d');\n        if (!context) return;\n\n        let scale = 1;\n        if (canvasWidth > IMAGE_MAX_SIZE) {\n            scale = IMAGE_MAX_SIZE / canvasWidth;\n        } \n\n        if (canvasHeight > IMAGE_MAX_SIZE) {\n            scale = Math.min(scale, IMAGE_MAX_SIZE / canvasHeight);\n        }\n\n        const newCanvasWidth = canvasWidth * scale;\n        const newCanvasHeight = canvasHeight * scale;\n\n        setCanvasWidth(newCanvasWidth);\n        setCanvasHeight(newCanvasHeight);\n\n        canvas.width = newCanvasWidth;\n        canvas.height = newCanvasHeight;\n\n        context.drawImage(payload, 0, 0, newCanvasWidth, newCanvasHeight);\n        canvas.toBlob(blob => {\n            updateImageObject({ \n                file: blob as File, \n                 width: newCanvasWidth,\n                 height: newCanvasHeight,\n            });\n        });\n    }\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(true);\n        setOperation(DragActions.MOVE);\n        const directions = event.currentTarget.dataset.direction;\n        if (directions) {\n            setDirection(directions.split('-'));\n            setOperation(DragActions.SCALE);\n        }\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                canvasWidth,\n                canvasHeight,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n\n        if (operation === DragActions.MOVE) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                canvasWidth,\n                canvasHeight,\n                pageWidth,\n                pageHeight\n            );\n        \n            updateImageObject({\n                x: left,\n                y: top,\n            });\n        }\n\n        if (operation === DragActions.SCALE) {\n            updateImageObject({\n                x: positionLeft,\n                y: positionTop,\n            });\n\n        }\n\n        setOperation(DragActions.NO_MOVEMENT);\n    }\n\n    const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (operation === DragActions.MOVE) {\n            handleMouseUp(event);\n        }\n    }\n\n    const handleImageScale = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            if (direction.includes('left')) {\n                setPositionLeft(positionLeft + event.movementX);\n                setCanvasWidth(canvasWidth - event.movementX);\n            }\n\n            if (direction.includes('top')) {\n                setPositionTop(positionTop + event.movementY);\n                setCanvasHeight(canvasHeight - event.movementY);\n            }\n\n            if (direction.includes('right')) {\n                setCanvasWidth(canvasWidth + event.movementX);\n            }\n\n            if (direction.includes('bottom')) {\n                setCanvasHeight(canvasHeight + event.movementY);\n            }\n        }\n    }\n\n    useEffect(() => {\n        renderImage(payload);\n    }, [payload, canvasWidth, canvasHeight]);\n\n    const handleClick = () =>  setDimmerActive(true);\n    const onCancelDelete = () => setDimmerActive(false);\n\n    const deleteImage = () => {\n        onCancelDelete();\n        removeImage();\n    }\n\n    return (\n        <ImageComponent\n            onClick={handleClick}\n            dimmerActive={dimmerActive}\n            cancelDelete={onCancelDelete}\n            deleteImage={deleteImage}\n            positionLeft={positionLeft}\n            positionTop={positionTop}\n            canvasRef={canvasRef}\n            width={canvasWidth}\n            height={canvasHeight}\n            handleImageScale={handleImageScale}\n            handleMouseDown={handleMouseDown}\n            handleMouseUp={handleMouseUp}\n            handleMouseMove={handleMouseMove}\n            handleMouseOut={handleMouseOut}\n        />\n    );\n}\n","import React, { RefObject } from 'react';\nimport { TextMode } from '../entities';\n\ninterface Props {\n    inputRef: RefObject<HTMLInputElement>,\n    text?: string;\n    mode: string;\n    width: number;\n    size?: number,\n    height: number;\n    lineHeight?: number;\n    fontFamily?: string;\n    positionTop: number;\n    positionLeft: number;\n    toggleEditMode: () => void;\n    handleMouseDown: DragEventListener<HTMLDivElement>;\n    handleMouseUp: DragEventListener<HTMLDivElement>;\n    handleMouseMove: DragEventListener<HTMLDivElement>;\n    handleMouseOut: DragEventListener<HTMLDivElement>;\n    onChangeText: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Text: React.FC<Props> = ({\n    text,\n    width,\n    height,\n    inputRef,\n    mode,\n    size,\n    fontFamily,\n    positionTop,\n    positionLeft,\n    onChangeText,\n    toggleEditMode,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseOut,\n    handleMouseUp,\n    lineHeight,\n}) => {\n\n    return (\n        <div \n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseOut}\n            onDoubleClick={toggleEditMode}\n            style={{\n                width,\n                border: 1,\n                height,\n                fontFamily,\n                fontSize: size,\n                lineHeight,\n                cursor: mode === TextMode.COMMAND \n                    ? 'move' \n                    : 'default',\n                top: positionTop,\n                left: positionLeft,\n                borderColor: 'gray',\n                borderStyle: 'solid',\n                wordWrap: 'break-word',\n                padding: 0,\n                position: 'absolute',\n            }}\n        >\n                <input\n                    type=\"text\"\n                    ref={inputRef}\n                    onChange={onChangeText}\n                    readOnly={mode === TextMode.COMMAND}\n                    style={{\n                        width: '100%',\n                        borderStyle: 'none',\n                        borderWidth: 0,\n                        fontFamily,\n                        fontSize: size,\n                        outline: 'none',\n                        padding: 0,\n                        boxSizing: 'border-box',\n                        lineHeight,\n                        height,\n                        margin: 0,\n                        backgroundColor: 'transparent',\n                        cursor: mode === TextMode.COMMAND \n                            ? 'move' \n                            : 'text',\n                    }}\n                    value={text} />\n        </div>\n    )\n}","import React, { useState, useRef } from 'react';\nimport { Text as Component } from '../components/Text'\nimport { getMovePosition } from '../utils/helpers';\nimport { DragActions, TextMode } from '../entities';\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    updateTextObject: (textObject: Partial<TextObject>) => void;\n}\n\nexport const Text = ({ \n    x, \n    y, \n    text, \n    width, \n    height, \n    lineHeight,\n    size,\n    fontFamily,\n    pageHeight, \n    pageWidth, \n    updateTextObject \n}: TextObject & Props) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [content, setContent] = useState(text || '');\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [operation, setOperation] = useState<DragActions>(DragActions.NO_MOVEMENT);\n    const [textMode, setTextMode] = useState<TextMode>(TextMode.COMMAND);\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (textMode !== TextMode.COMMAND) {\n            return;\n        }\n\n        setMouseDown(true);\n        setOperation(DragActions.MOVE);\n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (textMode !== TextMode.COMMAND) {\n            return;\n        }\n\n        setMouseDown(false);\n\n        if (operation === DragActions.MOVE) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n        \n            updateTextObject({\n                x: left,\n                y: top,\n            });\n        }\n\n        // if (operation === DragActions.SCALE) {\n        //     updateTextObject({\n        //         x: positionLeft,\n        //         y: positionTop,\n        //     });\n\n        // }\n\n        setOperation(DragActions.NO_MOVEMENT);\n    }\n\n    const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (operation === DragActions.MOVE) {\n            handleMouseUp(event);\n        }\n\n        if (textMode === TextMode.INSERT) {\n            setTextMode(TextMode.COMMAND);\n            prepareTextAndUpdate();\n        }\n    }\n\n    const prepareTextAndUpdate = () => {\n        // Deselect any selection when returning to command mode\n        document.getSelection()?.removeAllRanges();\n\n        const lines = [content];\n        updateTextObject({\n            lines,\n            text: content,\n        });\n    }\n\n    const toggleEditMode = () => {\n        const input = inputRef.current;\n        const mode =  textMode === TextMode.COMMAND \n            ? TextMode.INSERT \n            : TextMode.COMMAND;\n\n        setTextMode(mode);\n\n        if (input && mode === TextMode.INSERT) {\n            input.focus();\n            input.select();\n        } else {\n           prepareTextAndUpdate();\n        }\n    }\n\n    const onChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.currentTarget.value;\n        setContent(value);\n    }\n\n    return (\n        <Component\n            text={content}\n            width={width}\n            height={height}\n            mode={textMode}\n            size={size}\n            lineHeight={lineHeight}\n            inputRef={inputRef}\n            fontFamily={fontFamily}\n            positionTop={positionTop}\n            onChangeText={onChangeText}\n            positionLeft={positionLeft}\n            handleMouseUp={handleMouseUp}\n            toggleEditMode={toggleEditMode}\n            handleMouseOut={handleMouseOut}\n            handleMouseDown={handleMousedown}\n            handleMouseMove={handleMouseMove}\n        />\n    );\n}","import React, { RefObject } from 'react';\nimport { Dimmer } from 'semantic-ui-react';\nimport { Div } from '../ui/components/Div';\nimport { ConfirmContent } from './ConfirmContent';\n\ninterface Props {\n    path?: string;\n    stroke?: string;\n    width: number;\n    height: number;\n    strokeWidth?: number;\n    positionTop: number;\n    positionLeft: number;\n    dimmerActive: boolean;\n    cancelDelete: () => void;\n    deleteDrawing: () => void;\n    onClick: () => void;\n    svgRef: RefObject<SVGSVGElement>;\n    handleMouseDown: DragEventListener<HTMLDivElement>\n    handleMouseUp: DragEventListener<HTMLDivElement>\n    handleMouseMove: DragEventListener<HTMLDivElement>\n    handleMouseOut: DragEventListener<HTMLDivElement>\n}\nexport const Drawing: React.FC<Props> = ({\n    dimmerActive,\n    cancelDelete,\n    deleteDrawing,\n    positionTop,\n    positionLeft,\n    width,\n    height,\n    svgRef,\n    path,\n    stroke,\n    strokeWidth,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseOut,\n    handleMouseUp,\n    onClick,\n}) => {\n\n    return (\n        <div\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseOut}\n            onDoubleClick={onClick}\n            style={{\n                position: 'absolute',\n                top: positionTop,\n                left: positionLeft,\n                width,\n                height,\n                cursor: 'move',\n            }}\n        >\n            <Dimmer.Dimmable as={Div} dimmed={dimmerActive}>\n                <svg\n                    ref={svgRef}\n                >\n                        <path\n                            strokeWidth={strokeWidth}\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            stroke={stroke}\n                            fill=\"none\"\n                            d={path}\n                        />\n                </svg>\n                <Dimmer active={dimmerActive} onClickOutside={cancelDelete}>\n                    <ConfirmContent \n                        title=\"Delete?\" \n                        onConfirm={deleteDrawing}\n                        onDismiss={cancelDelete}\n                    />\n                </Dimmer>\n            </Dimmer.Dimmable>\n        </div>\n    )\n}","import React, { createRef, useEffect, useState } from 'react';\nimport { DragActions } from '../entities';\nimport { getMovePosition } from '../utils/helpers';\nimport { Drawing as DrawingComponent } from '../components/Drawing';\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    removeDrawing: () => void;\n    updateDrawingObject: (drawingObject: Partial<DrawingObject>) => void;\n}\n\nexport const Drawing = ({ x, y, width, height, stroke, strokeWidth, path, pageWidth, pageHeight, removeDrawing, updateDrawingObject }: DrawingObject & Props) => {\n    const svgRef = createRef<SVGSVGElement>();\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [operation, setOperation] = useState<DragActions>(DragActions.NO_MOVEMENT);\n    const [dimmerActive, setDimmerActive] = useState(false);\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        if (svg) {\n            svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n        }\n    }, [svgRef, width, height]);\n\n    const handleMousedown = (event: React.MouseEvent<HTMLDivElement>) => {\n        setMouseDown(true);\n        setOperation(DragActions.MOVE);\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n\n        if (operation === DragActions.MOVE) {\n            const { top, left } = getMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                width,\n                height,\n                pageWidth,\n                pageHeight\n            );\n        \n            updateDrawingObject({\n                x: left,\n                y: top,\n            });\n        }\n\n        if (operation === DragActions.SCALE) {\n            updateDrawingObject({\n                x: positionLeft,\n                y: positionTop,\n            });\n\n        }\n\n        setOperation(DragActions.NO_MOVEMENT);\n    }\n\n    const handleMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (operation === DragActions.MOVE) {\n            handleMouseUp(event);\n        }\n    }\n\n    const handleClick = () => setDimmerActive(true);\n    const cancelDelete = () => setDimmerActive(false);\n\n    const confirmDelete = () => {\n        cancelDelete();\n        removeDrawing();\n    }\n    return (\n        <DrawingComponent\n            stroke={stroke} \n            strokeWidth={strokeWidth}\n            path={path}\n            width={width}\n            svgRef={svgRef}\n            height={height}\n            onClick={handleClick}\n            cancelDelete={cancelDelete}\n            dimmerActive={dimmerActive}\n            deleteDrawing={confirmDelete}\n            handleMouseDown={handleMousedown}\n            handleMouseMove={handleMouseMove}\n            handleMouseOut={handleMouseOut}\n            handleMouseUp={handleMouseUp}\n            positionLeft={positionLeft}\n            positionTop={positionTop}\n        />\n    )\n}","export const helpContent = [\n    {\n        title: `What's this?`,\n        content: [\n            'This is a piece of sofware that allows you to edit your PDFs. You can add images and drawings to your pdf.',\n            `And there are more features coming up like adding text.`,\n        ]\n    },\n    {\n        title: 'How do I delete an attached image or drawing?',\n        content: [\n            `Easy! Just double click the image or drawing. You will be asked to confirm delete and then, voila, it's gone!`\n        ]\n    },\n    {\n        title: 'Can I add multiple images or drawings on a page?',\n        content: [\n            `Yes.`\n        ]\n    },\n    {\n        title: 'How can I delete my uploaded pdf?',\n        content: [\n            `You can't delete the uploaded pdf.`,\n            `You will have to upload a new one. This is a client-side app so you did not actually uploaded it to any server. Don't worry :)`\n        ]\n    },\n    {\n        title: 'Can I resize a drawing?',\n        content: [\n            `No. Currently it is not possible to resize a drawing`,\n        ]\n    },\n    {\n        title: 'Can I resize an image?',\n        content: [\n            `Yes you can. Move your mouse to the top-left corner of the image.`,\n            `The cursor should change and you should be able to resize from there`\n        ]\n    },\n    {\n        title: 'Can I load multi-page pdf?',\n        content: [\n            'Yes.'\n        ]\n    },\n    {\n        title: 'How do I add text to the pdf?',\n        content: [\n            '-  In the dropdown menu for edit, select add Text. This will add a text object to your pdf',\n            '-  You should see a textbox with placeholder text `Enter Text Here`',\n            '-  The textbox has two modes, edit mode and command mode, you can toggle between either by double clicking any area within the textbox.',\n            '-  In Edit Mode, you can enter your desired text',\n            `-  In Command Mode, you can move the textbox around to change it's position`,\n        ]\n    },\n    {\n        title: `Why can't I enter multi-line text?`,\n        content: [\n            'The textfield feature is in beta. There are more functionalities to be added like resizing, selecting fonts, changing font size etc which are in development.',\n            'These functionalities should be available in the next release',\n        ]\n    },\n]","import React, { useState } from 'react';\nimport { Modal, Accordion, Icon, AccordionTitleProps } from 'semantic-ui-react';\nimport { helpContent } from '../entities/helpContent';\ninterface Props {\n    open: boolean;\n    dismiss: () => void;\n}\n\nexport const HelpModal: React.FC<Props> = ({ open, dismiss }) => {\n    const [activeIndex, setActiveIndex] = useState(-1);\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>, data: AccordionTitleProps) => {\n        const { index } = data;\n        const newIndex = activeIndex === index ? -1 : (index as number);\n        setActiveIndex(newIndex);\n    }\n\n    return (\n    <>\n        <Modal \n            open={open}\n            onClose={dismiss}\n            size='small'\n            dimmer='inverted'\n        >\n            <Modal.Header>\n                <Icon name=\"question\" />\n                FAQ\n            </Modal.Header>\n            <Modal.Content scrolling>\n                <Accordion fluid styled>\n                    {helpContent.map((content, index) => (\n                        <React.Fragment key={index}>\n                            <Accordion.Title\n                                active={activeIndex === index} \n                                index={index}\n                                onClick={handleClick}\n                            >\n                                <Icon name=\"dropdown\" />\n                                {content.title}\n                            </Accordion.Title>\n                            <Accordion.Content active={activeIndex === index}>\n                                {content.content.map((text, index) => (\n                                    <p key={index}>{text}</p>\n                                ))}\n                            </Accordion.Content>\n                        </React.Fragment>\n                    ))}\n                </Accordion>\n            </Modal.Content>\n        </Modal>\n    </>\n)\n                    \n};","import React, { useState, createRef, useEffect } from 'react';\nimport { Modal, Button, Menu, Dropdown, Label } from \"semantic-ui-react\";\nimport { Color } from '../entities';\n\ninterface Props {\n    open: boolean;\n    dismiss: () => void;\n    confirm: (drawing?: { width: number, height: number, path: string, strokeWidth: number, stroke: string }) => void;\n    drawing?: DrawingObject;\n}\n\nexport const DrawingModal = ({ open, dismiss, confirm, drawing }: Props) => {\n    const svgRef = createRef<SVGSVGElement>();\n    const [paths, setPaths] = useState<Array<[string, number, number]>>([]);\n    const [path, setPath] = useState((drawing && drawing.path) || '');\n    const [svgX, setSvgX] = useState(0);\n    const [svgY, setSvgY] = useState(0);\n    const [minX, setMinX] = useState(Infinity);\n    const [maxX, setMaxX] = useState(0);\n    const [minY, setMinY] = useState(Infinity);\n    const[ maxY, setMaxY] = useState(0);\n    const [mouseDown, setMouseDown] = useState(false);\n    const [strokeWidth, setStrokeWidth] = useState(5);\n    const [stroke, setStroke] = useState(Color.BLACK);\n    const [strokeDropdownOpen, setStrokeDropdownOpen] = useState(false)\n\n    useEffect(() => {\n        const svg = svgRef.current;\n        if (!svg) return;\n        const { x, y } = svg.getBoundingClientRect();\n        setSvgX(x);\n        setSvgY(y);\n    }, [svgRef]);\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(true);\n\n        const x = event.clientX - svgX;\n        const y = event.clientY - svgY;\n        setMinX(Math.min(minX, x));\n        setMaxX(Math.max(maxX, x));\n        setMinY(Math.min(minY, y));\n        setMaxY(Math.max(maxY, y));\n        setPath(path + `M${x},${y}`);\n        setPaths([...paths, ['M', x, y]]);\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        if (!mouseDown) return;\n\n        const x = event.clientX - svgX;\n        const y = event.clientY - svgY;\n        setMinX(Math.min(minX, x));\n        setMaxX(Math.max(maxX, x));\n        setMinY(Math.min(minY, y));\n        setMaxY(Math.max(maxY, y));\n        setPath(path + `L${x},${y}`);\n        setPaths([...paths, ['L', x, y]]);\n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n    }\n\n    const resetDrawingBoard = () => {\n        setPaths([]);\n        setPath('');\n        setMinX(Infinity);\n        setMaxX(0);\n        setMinY(Infinity);\n        setMaxY(0);\n        setStrokeWidth(5);\n        setStroke(Color.BLACK);\n    }\n\n    const handleDone = () => {\n        if (!paths.length) {\n            confirm();\n            return;\n        }\n        \n        const boundingWidth = maxX - minX;\n        const boundingHeight = maxY - minY;\n        \n        const dx = -(minX - 10);\n        const dy = -(minY - 10);\n\n        confirm({\n            stroke,\n            strokeWidth,\n            width: boundingWidth + 20,\n            height: boundingHeight + 20,\n            path: paths.reduce((fullPath, lineItem) => \n                `${fullPath}${lineItem[0]}${lineItem[1] + dx}, ${lineItem[2] + dy}`\n            , ''),\n        });  \n\n        closeModal();\n    }\n\n    const closeModal = () => {\n        resetDrawingBoard();\n        dismiss();\n    }\n\n    // TODO: Move to config\n    const strokeSizes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleStrokeSelect = (color: Color) => () => {\n        setStroke(color);\n        setStrokeDropdownOpen(false);\n    }\n\n    return (\n        <Modal \n            size=\"small\"\n            dimmer=\"inverted\"\n            open={open}\n            onClose={closeModal}\n        >\n            <Modal.Header>Add your Drawing</Modal.Header>\n            <Modal.Content>\n                <Menu size='tiny'>\n                    <Menu.Item header>Tools</Menu.Item>\n                    {/* <Menu.Item><Icon name=\"undo\" /></Menu.Item>\n                    <Menu.Item><Icon name=\"redo\" /></Menu.Item> */}\n                    <Menu.Menu position=\"right\">\n                        <Dropdown item text={`${strokeWidth}`}>\n                            <Dropdown.Menu>\n                            {strokeSizes.map(size => (\n                                <Dropdown.Item \n                                    key={size} \n                                    selected={size === strokeWidth}\n                                    onClick={() => setStrokeWidth(size)}\n                                >\n                                    {size}\n                                </Dropdown.Item>\n                            )) }\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <Dropdown\n                            item \n                            trigger={(\n                              <Label color={stroke} /> \n                            )}\n                            onClick={() => setStrokeDropdownOpen(true)} \n                            onBlur={() => setStrokeDropdownOpen(false)}\n                        >\n                            <Dropdown.Menu open={strokeDropdownOpen}>\n                                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', padding: 5 }}>\n                                    {Object.values(Color).map((color, index) => (\n                                        <div style={{ margin: 2.5 }}>\n                                            <Label\n                                                key={index} \n                                                color={color} \n                                                onClick={handleStrokeSelect(color)} \n                                            />\n                                        </div>\n                                    ))}\n                                </div>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        {/* <Dropdown item text={stroke}>\n                            <Dropdown.Menu>\n                                <Card.Group itemsPerRow={3}>\n                                    {Object.values(Color).map((color, index) => (\n                                        <Card inverted key={index} color={color} />\n                                    ))}\n                                </Card.Group>\n                            </Dropdown.Menu>\n                        </Dropdown> */}\n                    </Menu.Menu>\n                </Menu>\n                <div\n                    onMouseDown={handleMouseDown}\n                    onMouseMove={handleMouseMove}\n                    onMouseUp={handleMouseUp}\n                >\n                    <svg \n                        ref={svgRef}\n                        style={{\n                            width: '100%',\n                            height: '50vh',\n                        }}>\n                        <path\n                            strokeWidth={strokeWidth}\n                            strokeLinejoin=\"round\"\n                            strokeLinecap=\"round\"\n                            stroke={stroke}\n                            fill=\"none\"\n                            d={path}\n                        />\n                    </svg>\n                </div>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button\n                    color=\"black\"\n                    content=\"Cancel\"\n                    onClick={closeModal} />\n                <Button\n                    content=\"Done\"\n                    labelPosition=\"right\"\n                    icon=\"checkmark\"\n                    onClick={handleDone}\n                    positive />\n            </Modal.Actions>\n        </Modal>\n    )\n}","\nimport React, { RefObject } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Menu, Container, Segment, Header, Icon, Button, Grid, Dropdown } from 'semantic-ui-react';\nimport { readAsPDF, readAsDataURL, readAsImage } from './utils/asyncReader';\nimport { save } from './utils/pdf';\nimport { PdfPage } from './components/PdfPage';\nimport { Image } from './containers/Image';\nimport { ggID } from './utils/helpers';\nimport { Text } from './containers/Text';\nimport { Drawing } from './containers/Drawing';\nimport { HelpModal } from './components/HelpModal';\nimport { DrawingModal } from './components/DrawingModal';\n\n\ninterface State {\n  pdfFile?: File;\n    selectedPageIndex: number;\n    pdfName: string;\n    pages: any[];\n    allObjects: AllObjects[];\n    pagesScale: any[];\n    pageDimensions: Dimensions[];\n    saving: boolean;\n    drawing: boolean;\n    uploading: boolean;\n    selectedDrawing: number;\n    helpModalOpen: boolean;\n}\n\nclass App extends React.Component {\n  pdfInput: RefObject<HTMLInputElement>;\n  imageInput: RefObject<HTMLInputElement>;\n\n  state: State = {\n    pdfFile: undefined,\n    selectedPageIndex: -1,\n    pdfName: '',\n    pages: [],\n    allObjects: [],\n    pagesScale: [],\n    pageDimensions: [],\n    saving: false,\n    drawing: false,\n    uploading: false,\n    selectedDrawing: 0,\n    helpModalOpen: false,\n  }\n\n  constructor() {\n    super({});\n\n    this.pdfInput = React.createRef<HTMLInputElement>();\n    this.imageInput = React.createRef<HTMLInputElement>();\n  }\n\n  onUploadPDF = async (e: React.ChangeEvent<HTMLInputElement>  & { dataTransfer?: DataTransfer }) => {\n    this.setState({ uploading: true });\n    const files: FileList | undefined =  e.target.files || (e.dataTransfer && e.dataTransfer.files);\n    if (!files) return;\n    \n    const file = files[0];\n    if (!file || file.type !== \"application/pdf\") return;\n\n    this.setState({\n      selectedPageIndex: -1\n    });\n\n    try {\n      await this.addPDF(file);\n\n      this.setState({\n        selectedPageIndex: 0\n      });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ uploading: false })\n    }\n  }\n\n  addPDF = async (file: File) => {\n    try {\n      const pdf = await readAsPDF(file);\n      this.setState({\n        pdfName: file.name,\n        pdfFile: file,\n        pages: Array(pdf.numPages)\n          .fill(0)\n          .map((_, i) => pdf.getPage(i + 1)),\n        allObjects: Array(pdf.numPages).fill([]),\n        pagesScale: Array(pdf.numPages).fill(1),\n        pageDimensions: Array(pdf.numPages).fill({ width: 0, height: 0 }) \n      });\n    } catch (e) {\n      console.log(\"Failed to add pdf.\");\n      throw e;\n    }\n  }\n\n  savePDF = async () => {\n    const { pdfFile, saving, pages, allObjects, pdfName } = this.state;\n    if (!pdfFile || saving || !pages.length) return;\n\n    this.setState({ saving: true });\n    \n    try {\n      await save(pdfFile, allObjects, pdfName);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ saving: false });\n    }\n  }\n\n  clearInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.value = '';\n  }\n\n  renderHiddenInputs = () => (\n    <>\n      <input\n        ref={this.pdfInput}\n        type=\"file\"\n        name=\"pdf\"\n        id=\"pdf\"\n        accept=\"application/pdf\"\n        onChange={this.onUploadPDF}\n        onClick={this.clearInput}\n        style={{ display: 'none' }} />\n      { this.state.selectedPageIndex > -1 && (\n          <input\n            ref={this.imageInput}\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            onClick={this.clearInput}\n            style={{ display: 'none' }}\n            onChange={this.onUploadImage} \n          /> \n        ) \n      }\n    </>\n  )\n\n  onUploadImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { selectedPageIndex } = this.state;\n    const file: File | null = e.target.files && e.target.files[0];\n    if (file && selectedPageIndex >= 0) {\n      this.addImage(file);\n    }\n  }\n\n  addImage = async (file: File) => {\n    const { allObjects, selectedPageIndex } = this.state;\n    try {\n      // get dataURL to prevent canvas from tainted\n      const url = await readAsDataURL(file);\n      const img = await readAsImage(url as any);\n      const id = ggID();\n      const { width, height } = img;\n      const object: ImageObject = {\n        id,\n        type: \"image\",\n        width,\n        height,\n        x: 0,\n        y: 0,\n        payload: img,\n        file\n      };\n      this.setState({\n        allObjects: allObjects.map((objects, pIndex) =>\n          pIndex === selectedPageIndex ? [...objects, object] : objects\n        )\n      });\n    } catch (e) {\n      console.log(`Fail to add image.`, e);\n    }\n  }\n\n  handleFileInput = (inputName: string) => () => {\n    const input = inputName === 'pdf' \n    ? this.pdfInput.current\n    : inputName === 'image'\n    ? this.imageInput.current\n    : null;\n\n    if (input) {\n      input.click();\n    }\n  }\n\n  renderEmpty = () => (\n    <Segment placeholder loading={this.state.uploading} style={{ height: '80vh' }}>\n      <Header icon>\n        <Icon name='file pdf outline' />\n        Upload your PDF to start editing!\n      </Header>\n      <Button primary onClick={this.handleFileInput('pdf')}>Load PDF</Button>\n    </Segment>\n  );\n\n  nextPage = () => {\n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex + 1,\n    }))\n  }\n\n  previousPage = () => { \n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex - 1,\n    }))\n  }\n\n  updateObject = (id: number, pageIndex: number, payload: Partial<ImageObject>) => {\n    const { allObjects } = this.state;\n    let pageObjects = allObjects[pageIndex];\n    const objectToUpdate = pageObjects[id];\n    const newObject: Attachment = { ...objectToUpdate, ...(payload as Attachment)};\n    pageObjects[id] = newObject;\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? pageObjects : objects\n      )\n    })\n  }\n\n  updatePageDimensions = (pageIndex: number, dimensions: { width: number, height: number }) => {\n    this.setState({\n      pageDimensions: this.state.pageDimensions.map((page, index) => \n        pageIndex === index ? dimensions : page\n      )\n    });\n  }\n\n  removeObject = (id: number, pageIndex: number) => {\n    const { allObjects } = this.state;\n    const pageObjects = allObjects[pageIndex];\n    pageObjects.splice(id, 1);\n    allObjects[pageIndex] = pageObjects;\n    this.setState({ allObjects });\n  }\n\n  openDrawingModal = () => {\n    this.setState({\n      drawing: true\n    });\n  }\n\n  closeDrawingModal = () => {\n    this.setState({\n      drawing: false\n    })\n  }\n\n  addDrawing = (pageIndex: number, drawing?: { width: number, height: number, path: string }) => {\n    const { allObjects } = this.state;\n    if (!drawing) return;\n\n    const newObject: DrawingObject = {\n      id: ggID(),\n      type: 'drawing',\n      ...drawing,\n      x: 0,\n      y: 0,\n      scale: 1,\n    }\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? [...objects, newObject] : objects\n      )\n    })\n  }\n\n  addText = () => {\n    const { allObjects, selectedPageIndex } = this.state;\n\n    const newObject: TextObject = {\n      id: ggID(),\n      type: 'text',\n      x: 0,\n      y: 0,\n      width: 120,\n      height: 25,\n      size: 16,\n      lineHeight: 1.4,\n      fontFamily: 'Times-Roman',\n      text: 'Enter Text Here',\n    };\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        selectedPageIndex === index ? [...objects, newObject] : objects\n      )\n    })    \n  }\n\n  render() {\n    const { allObjects, pdfName, pdfFile, pages, saving, selectedPageIndex, pageDimensions } = this.state;\n    const isMultiplePages = pages.length > 1;\n    const isLastPage = selectedPageIndex === pages.length - 1;\n    const currentPage = pages[selectedPageIndex];\n    const allObjectsForCurrentPage = allObjects[selectedPageIndex];\n    const currentPageDimensions = pageDimensions[selectedPageIndex];\n  \n    return (\n      <Container style={{ margin: 30 }}>\n        {this.renderHiddenInputs()}\n          <Menu pointing>\n            <Menu.Item header>PDF Editor</Menu.Item>\n            <Menu.Menu position=\"right\">\n              {pdfFile && (\n                <>\n                  <Dropdown \n                    item \n                    closeOnBlur\n                    icon=\"edit outline\" \n                    simple>\n                    <Dropdown.Menu>\n                    <Dropdown.Item\n                        onClick={this.addText}>\n                          Add Text\n                      </Dropdown.Item>\n                      <Dropdown.Item \n                        onClick={this.handleFileInput('image')}\n                      >\n                        Add Image\n                      </Dropdown.Item>\n                      <Dropdown.Item \n                        onClick={this.openDrawingModal}\n                      >\n                        Add Drawing\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  <Menu.Item\n                    name={saving ? 'Saving...' : 'Save'}\n                    disabled={saving}\n                    onClick={this.savePDF} \n                  />\n                  <Menu.Item \n                    name=\"Upload New\"\n                    onClick={this.handleFileInput('pdf')} \n                  />\n                </>\n              )}\n              <Menu.Item onClick={() => this.setState({ helpModalOpen: true })}>\n                <Icon name=\"question circle outline\" />\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        \n        \n        {!pdfFile ? this.renderEmpty() : (\n          <Grid>\n              <Grid.Row>\n                <Grid.Column width={3} verticalAlign=\"middle\">\n                  {isMultiplePages && selectedPageIndex !== 0 && (\n                    <Button circular icon=\"angle left\" onClick={this.previousPage} />\n                  )}\n                </Grid.Column>\n                <Grid.Column width={10}>\n                  {currentPage && (\n                      <Segment\n                        style={{ position: 'relative' }}\n                        compact\n                        stacked={isMultiplePages && !isLastPage}\n                      >\n                        <PdfPage\n                          updateDimensions={(dimensions) => this.updatePageDimensions(selectedPageIndex, dimensions)}\n                          page={currentPage} />\n                          {allObjectsForCurrentPage && allObjectsForCurrentPage.map((data, index) => {\n                            const key = `${pdfName}-${index}`;\n                            if (data.type === 'image') {\n                              return (\n                                  <Image\n                                    removeImage={() => this.removeObject(index, selectedPageIndex)}\n                                    key={key}\n                                    pageWidth={currentPageDimensions.width}\n                                    pageHeight={currentPageDimensions.height}\n                                    updateImageObject={(image) => this.updateObject(index, selectedPageIndex, image)}\n                                    {...(data as ImageObject)}  \n                                  />\n                              )\n                            }\n\n                            if (data.type === 'drawing') {\n                              return (\n                                <Drawing\n                                  key={key}\n                                  removeDrawing={() => this.removeObject(index, selectedPageIndex)}\n                                  pageWidth={currentPageDimensions.width}\n                                  pageHeight={currentPageDimensions.height}\n                                  updateDrawingObject={(drawing) => this.updateObject(index, selectedPageIndex, drawing)}\n                                  {...data as DrawingObject}\n                                />\n                              )\n                            }\n\n                            if (data.type === 'text') {\n                              return (\n                                <Text\n                                  key={key}\n                                  pageWidth={currentPageDimensions.width}\n                                  pageHeight={currentPageDimensions.height}\n                                  updateTextObject={(textObject) => this.updateObject(index, selectedPageIndex, textObject)}\n                                  {...data as TextObject}\n                                />\n                              )\n                            }\n                            return null;\n                          })}\n                      </Segment>\n                    )\n                  }\n                </Grid.Column>\n                <Grid.Column width={3} verticalAlign=\"middle\" textAlign=\"right\">\n                  {isMultiplePages && selectedPageIndex !== pages.length - 1 && (\n                    <Button circular icon=\"angle right\" onClick={this.nextPage}/>\n                  )}\n                </Grid.Column>\n              </Grid.Row>\n          </Grid>\n        )}\n\n        {\n          <DrawingModal \n            open={this.state.drawing} \n            dismiss={this.closeDrawingModal}\n            confirm={(drawingAttachment) => this.addDrawing(selectedPageIndex, drawingAttachment)}\n          />\n        }\n\n        {<HelpModal \n          open={this.state.helpModalOpen}\n          dismiss={() => this.setState({ helpModalOpen: false })}\n           />}\n      </Container>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}