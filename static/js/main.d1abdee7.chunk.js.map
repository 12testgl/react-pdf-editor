{"version":3,"sources":["utils/prepareAssets.ts","utils/asyncReader.ts","utils/helpers.ts","utils/pdf.ts","PdfPage.tsx","Image.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scripts","name","src","assets","getAsset","scriptName","fonts","Courier","correction","size","lineHeight","Helvetica","Fonts","標楷體","fetchFont","font","Error","fetch","then","r","arrayBuffer","fontBuffer","fontFace","window","FontFace","display","load","document","add","buffer","readAsArrayBuffer","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","ggID","id","noop","save","pdfFile","objects","PDFLib","download","makeTextPDF","PDFDocument","pdfDoc","console","log","pagesProcesses","getPages","map","page","pageIndex","pageObjects","pageHeight","getHeight","pageWidth","getWidth","embedProcesses","object","type","x","y","width","height","embedJpg","embedPng","drawImage","lines","fontFamily","fontSize","dy","embedPdf","textPage","drawPage","path","scale","pushGraphicsState","setLineCap","popGraphicsState","setLineJoin","LineCapStyle","LineJoinStyle","pushOperators","Round","drawSvgPath","borderWidth","all","forEach","p","pdfBytes","PdfPage","updateDimensions","canvasRef","createRef","useState","setWidth","innerHeight","setHeight","renderPage","_page","context","current","getContext","viewport","getViewport","render","canvasContext","useEffect","ref","getImageMovePosition","dragX","dragY","newPositionTop","newPositionLeft","top","left","payload","updateImageObject","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","mouseDown","setMouseDown","positionTop","setPositionTop","positionLeft","setPositionLeft","direction","setDirection","handleMouseDown","event","preventDefault","directions","currentTarget","dataset","split","handleMouseUp","movementX","movementY","handleScale","includes","newCanvasWidth","newCanvasHeight","toBlob","renderImage","onMouseDown","onMouseMove","onMouseUp","onMouseOut","style","position","borderStyle","borderColor","cursor","data-direction","right","bottom","Math","round","ADJUSTERS_DIMENSIONS","App","state","undefined","selectedPageIndex","pdfName","pages","allObjects","pagesScale","pageDimensions","saving","uploading","onUploadPDF","e","setState","files","target","dataTransfer","addPDF","pdf","Array","numPages","fill","_","i","getPage","savePDF","length","renderHiddenInputs","accept","onChange","onUploadImage","addImage","value","pIndex","handleFileInput","inputName","getElementById","click","renderEmpty","Segment","placeholder","loading","Header","icon","Icon","Button","primary","onClick","nextPage","prevState","previousPage","updateObject","objectToUpdate","newObject","index","updatePageDimensions","dimensions","removeObject","splice","this","isMultiplePages","isLastPage","currentPage","allObjectsForCurrentPage","currentPageDimensions","Container","margin","Menu","pointing","Item","header","Dropdown","item","closeOnBlur","simple","disabled","Grid","Row","Column","verticalAlign","circular","compact","stacked","data","removeImage","key","image","textAlign","React","Component","Boolean","location","hostname","match","script","createElement","body","appendChild","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d1abdee7.chunk.js","sourcesContent":["type ScriptName = 'pdfjsLib' | 'PDFLib' | 'download' | 'makeTextPDF';\n\ninterface Script {\n    name: ScriptName;\n    src: string;\n};\n\nconst scripts: Script[] = [\n    {\n      name: 'pdfjsLib',\n      src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n    },\n    {\n      name: 'PDFLib',\n      src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n    },\n    {\n      name: 'download',\n      src: 'https://unpkg.com/downloadjs@1.4.7',\n    },\n    { name: 'makeTextPDF', src: 'https://cdn.jsdelivr.net/gh/snamoah/react-pdf-editor/public/makeTextPDF.js' },\n];\n  \nconst assets: { [key: string]: any } = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n  \n  export const prepareAssets = () => {\n    // prepare scripts\n    scripts.forEach(({ name, src }) => {\n      assets[name] = new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = src;\n        script.onload = () => {\n          resolve(window[name as any]);\n          console.log(`${name} is loaded.`);\n        };\n        script.onerror = () =>\n          reject(`The script ${name} didn't load correctly.`);\n        document.body.appendChild(script);\n      });\n    });\n}\n\ninterface Font {\n    src?: string;\n    correction?: (size: number, lineHeight: number) => number;\n    [key: string]: any;\n};\n\ninterface FontsType {\n    [key: string]: Font\n}\n\nconst fonts: FontsType = {\n    Courier: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 6;\n      },\n    },\n    Helvetica: {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 10;\n      },\n    },\n    'Times-Roman': {\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2 + size / 7;\n      },\n    },\n  };\n\n  // Available fonts\n  export const Fonts = {\n    ...fonts,\n    標楷體: {\n      src: '/CK.ttf', // 9.9 MB\n      correction(size: number, lineHeight: number) {\n        return (size * lineHeight - size) / 2;\n      },\n    },\n  };\n\n\n\n  export const fetchFont = (name: string) => {\n    if (fonts[name as any]) return fonts[name as any];\n\n    const font = Fonts[name as keyof typeof Fonts];\n    if (!font) throw new Error(`Font '${name}' not exists.`);\n\n    fonts[name] = fetch(font.src)\n      .then((r) => r.arrayBuffer())\n      .then((fontBuffer) => {\n        const fontFace = new (window as any).FontFace(name, fontBuffer);\n        fontFace.display = 'swap';\n        fontFace.load().then(() => (document as any).fonts.add(fontFace));\n        return {\n          ...font,\n          buffer: fontBuffer,\n        };\n      });\n  }","import { getAsset } from \"./prepareAssets\";\n\nexport const readAsArrayBuffer = (file: File) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(file);\n    });\n  }\n  \n  export const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n      if (src instanceof Blob) {\n        const url = window.URL.createObjectURL(src);\n        img.src = url;\n      } else {\n        img.src = src;\n      }\n    });\n  }\n  \n  export function readAsDataURL(file: File) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  }\n  \n  export async function readAsPDF(file: File) {\n    const pdfjsLib = await getAsset('pdfjsLib');\n    // Safari possibly get webkitblobresource error 1 when using origin file blob\n    const blob = new Blob([file]);\n    const url = window.URL.createObjectURL(blob);\n    return pdfjsLib.getDocument(url).promise;\n  }","\nexport function ggID() {\n    let id = 0;\n    return function genId() {\n      return id++;\n    };\n}\n\nexport function timeout(ms: number) {\n    return new Promise((res) => setTimeout(res, ms));\n}\n\nexport const noop = () => {};","import { readAsArrayBuffer } from './asyncReader';\nimport { fetchFont, getAsset } from './prepareAssets';\nimport { noop } from './helpers';\n\nexport async function save(pdfFile: File, objects: any[], name: string) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  const makeTextPDF = await getAsset('makeTextPDF');\n  let pdfDoc: { getPages: () => any[]; embedJpg: (arg0: unknown) => any; embedPng: (arg0: unknown) => any; embedPdf: (arg0: any) => [any] | PromiseLike<[any]>; save: () => any; };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const pageWidth = page.getWidth();\n    const embedProcesses = pageObjects.map(async (object: { type?: any; file?: any; x?: any; y?: any; width?: any; height?: any; lines?: any; lineHeight?: any; size?: any; fontFamily?: any; path?: any; scale?: any; }) => {\n      if (object.type === 'image') {\n        let { file, x, y, width, height } = object;\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          return noop;\n        }\n      } else if (object.type === 'text') {\n        let { x, y, lines, lineHeight, size, fontFamily } = object;\n        const font = await fetchFont(fontFamily);\n        const [textPage] = await pdfDoc.embedPdf(\n          await makeTextPDF({\n            lines,\n            fontSize: size,\n            lineHeight,\n            width: pageWidth,\n            height: pageHeight,\n            font: font?.buffer || fontFamily, // built-in font family\n            dy: font && font.correction && font.correction(size as number, lineHeight as number),\n          })\n        );\n        return () =>\n          page.drawPage(textPage, {\n            width: pageWidth,\n            height: pageHeight,\n            x,\n            y: -y,\n          });\n      } else if (object.type === 'drawing') {\n        let { x, y, path, scale } = object;\n        const {\n          pushGraphicsState,\n          setLineCap,\n          popGraphicsState,\n          setLineJoin,\n          LineCapStyle,\n          LineJoinStyle,\n        } = PDFLib;\n        return () => {\n          page.pushOperators(\n            pushGraphicsState(),\n            setLineCap(LineCapStyle.Round),\n            setLineJoin(LineJoinStyle.Round)\n          );\n          page.drawSvgPath(path, {\n            borderWidth: 5,\n            scale,\n            x,\n            y: pageHeight - y,\n          });\n          page.pushOperators(popGraphicsState());\n        };\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}","import React, { useState, createRef, useEffect } from 'react';\n\ninterface Props {\n    page: any;\n    updateDimensions: ({ width, height }: { width: number, height: number}) => void;\n}\n\nexport const PdfPage = ({ page, updateDimensions }: Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [ width, setWidth ] = useState(500);\n    const [ height, setHeight ] = useState(window.innerHeight);\n\n    const renderPage = async (p: Promise<any>) => {\n       const _page = await p;\n       if (_page) {\n           const context = canvasRef.current?.getContext('2d');\n           const viewport = _page.getViewport({ scale: 1 });\n    \n           setWidth(viewport.width);\n           setHeight(viewport.height);\n           \n           \n           if (context) {\n                await _page.render({\n                   canvasContext: canvasRef.current?.getContext('2d'),\n                   viewport \n                }).promise;\n            \n                updateDimensions({ width: viewport.width, height: viewport.height });\n           }\n       }\n    }\n\n    useEffect(() => {\n        renderPage(page);\n    }, [page, width, height])\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={width} \n                height={height} />\n        </div>\n    )\n}","import React, { useState, createRef, useEffect } from 'react';\n\nconst IMAGE_MAX_SIZE = 300;\nconst PADDING = 25;\nconst ADJUSTERS_DIMENSIONS = 20;\n\ninterface Props {\n    pageWidth: number;\n    pageHeight: number;\n    removeImage: () => void;\n    updateImageObject: (imageObject: Partial<ImageObject>) => void;\n}\n\nconst getImageMovePosition = (x: number, y: number, dragX: number, dragY: number, width: number, height: number, pageWidth: number, pageHeight: number) => {\n    const newPositionTop = y + dragY;\n    const newPositionLeft = x + dragX;\n    const newPositionRight = newPositionLeft + width;\n    const newPositionBottom = newPositionTop + height;\n\n    const top = newPositionTop < 0 \n            ? 0 \n            : newPositionBottom > pageHeight + PADDING\n            ? pageHeight - height + PADDING\n            : newPositionTop;\n    const left = newPositionLeft < 0 \n        ? 0 \n        : newPositionRight > pageWidth + PADDING\n        ? pageWidth - width + PADDING\n        : newPositionLeft\n\n    return {\n        top,\n        left,\n    }\n};\n\nexport const Image = ({ x, y, payload, width, height, pageWidth, pageHeight, updateImageObject }: ImageObject & Props) => {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    const [canvasWidth, setCanvasWidth] = useState(width);\n    const [canvasHeight, setCanvasHeight] = useState(height);\n    const [mouseDown, setMouseDown] = useState(false);\n    const [positionTop, setPositionTop] = useState(y);\n    const [positionLeft, setPositionLeft] = useState(x);\n    const [direction, setDirection] = useState<string[]>([]);\n\n    const renderImage = (img: HTMLImageElement) => {\n        const context = canvasRef.current && canvasRef.current.getContext('2d');\n        if (context) {\n            let newCanvasWidth = canvasWidth;\n            let newCanvasHeight = canvasHeight;\n\n            if (canvasWidth > IMAGE_MAX_SIZE) {\n                const newScale = IMAGE_MAX_SIZE / canvasWidth;\n                newCanvasWidth = canvasWidth * newScale;\n                setCanvasWidth(newCanvasWidth);\n            } \n\n            if (canvasHeight > IMAGE_MAX_SIZE) {\n                const newScale = IMAGE_MAX_SIZE / height;\n                newCanvasHeight = canvasHeight * newScale;\n                setCanvasHeight(newCanvasHeight);\n            }\n\n            context.drawImage(payload, 0, 0, newCanvasWidth, newCanvasHeight);\n\n            canvasRef.current && canvasRef.current.toBlob(blob => {\n                updateImageObject({ file: blob as File, width: newCanvasWidth, height: newCanvasHeight });\n            });\n        }\n    }\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(true);\n        const directions = event.currentTarget.dataset.direction;\n        if (directions) {\n            setDirection(directions.split('-'));\n        }\n    }\n\n    const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            const { top, left } = getImageMovePosition(\n                positionLeft,\n                positionTop,\n                event.movementX,\n                event.movementY,\n                canvasWidth,\n                canvasHeight,\n                pageWidth,\n                pageHeight\n            );\n\n            setPositionTop(top);\n            setPositionLeft(left);\n        }      \n    }\n\n    const handleMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setMouseDown(false);\n\n        const { top, left } = getImageMovePosition(\n            positionLeft,\n            positionTop,\n            event.movementX,\n            event.movementY,\n            canvasWidth,\n            canvasHeight,\n            pageWidth,\n            pageHeight\n        );\n        updateImageObject({\n            x: left,\n            y: top,\n            width: canvasWidth,\n            height: canvasHeight,\n        });\n    }\n\n    const handleScale = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n\n        if (mouseDown) {\n            if (direction.includes('left')) {\n                setPositionLeft(positionLeft + event.movementX);\n                setCanvasWidth(canvasWidth - event.movementX);\n            }\n\n            if (direction.includes('top')) {\n                setPositionTop(positionTop + event.movementY);\n                setCanvasHeight(canvasHeight - event.movementY);\n            }\n\n            if (direction.includes('right')) {\n                setPositionLeft(positionLeft - event.movementX);\n                setCanvasWidth(canvasWidth + event.movementX);\n            }\n\n            if (direction.includes('bottom')) {\n                setPositionTop(positionTop - event.movementY);\n                setCanvasHeight(canvasHeight + event.movementY);\n            }\n        }\n    }\n\n    useEffect(() => {\n        renderImage(payload);\n    }, [payload, canvasWidth, canvasHeight]);\n\n    return (\n        <div\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseOut={handleMouseUp}\n            style={{\n                position: \"absolute\",\n                top: positionTop,\n                left: positionLeft,\n                borderStyle: \"dashed\",\n                borderWidth: '1px',\n                borderColor:  'grey',\n                width: canvasWidth + 2,\n                height: canvasHeight +  2,\n                cursor: 'move',\n            }}\n        >\n            <div style={{ position: 'relative' }}>\n                <canvas \n                    ref={canvasRef}\n                    width={canvasWidth}\n                    height={canvasHeight}\n                />\n                <div\n                    data-direction=\"top-left\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleScale}\n                    style={{\n                        position: 'absolute',\n                        cursor: 'nwse-resize',\n                        top: 0,\n                        left: 0,\n                        width: ADJUSTERS_DIMENSIONS,\n                        height: ADJUSTERS_DIMENSIONS,\n                    }} />\n                <div\n                    data-direction=\"top-right\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleScale}\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        right: 0,\n                        cursor: 'nesw-resize',\n                        width: ADJUSTERS_DIMENSIONS,\n                        height: ADJUSTERS_DIMENSIONS,\n                    }} />\n                <div\n                    data-direction=\"bottom-left\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleScale} \n                    style={{\n                        position: 'absolute',\n                        cursor: 'nesw-resize',\n                        left: 0,\n                        bottom: Math.round(ADJUSTERS_DIMENSIONS / 2),\n                        width: ADJUSTERS_DIMENSIONS,\n                        height: ADJUSTERS_DIMENSIONS,\n                    }} />\n                <div\n                    data-direction=\"bottom-right\"\n                    onMouseDown={handleMouseDown}\n                    onMouseUp={handleMouseUp}\n                    onMouseMove={handleScale} \n                    style={{\n                        position: 'absolute',\n                        bottom: Math.round(ADJUSTERS_DIMENSIONS / 2),\n                        right: 0,\n                        width: ADJUSTERS_DIMENSIONS,\n                        height: ADJUSTERS_DIMENSIONS,\n                        cursor: 'nwse-resize'\n                    }} />\n            </div>\n        </div>\n    );\n}\n","\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { Menu, Container, Segment, Header, Icon, Button, Grid, Dropdown } from 'semantic-ui-react';\nimport { readAsPDF, readAsDataURL, readAsImage } from './utils/asyncReader';\nimport { save } from './utils/pdf';\nimport { PdfPage } from './PdfPage';\nimport { Image } from './Image';\nimport { ggID } from './utils/helpers';\n\n\ninterface State {\n  pdfFile?: File;\n    selectedPageIndex: number;\n    pdfName: string;\n    pages: any[];\n    allObjects: AllObjects[];\n    pagesScale: any[];\n    pageDimensions: Dimensions[];\n    saving: boolean;\n    uploading: boolean;\n}\n\nclass App extends React.Component {\n\n  state: State = {\n    pdfFile: undefined,\n    selectedPageIndex: -1,\n    pdfName: '',\n    pages: [],\n    allObjects: [],\n    pagesScale: [],\n    pageDimensions: [],\n    saving: false,\n    uploading: false,\n  }\n\n  onUploadPDF = async (e: React.ChangeEvent<HTMLInputElement>  & { dataTransfer?: DataTransfer }) => {\n    this.setState({ uploading: true });\n    const files: FileList | undefined =  e.target.files || (e.dataTransfer && e.dataTransfer.files);\n    if (!files) return;\n    \n    const file = files[0];\n    if (!file || file.type !== \"application/pdf\") return;\n\n    this.setState({\n      selectedPageIndex: -1\n    });\n\n    try {\n      await this.addPDF(file);\n\n      this.setState({\n        selectedPageIndex: 0\n      });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ uploading: false })\n    }\n  }\n\n  addPDF = async (file: File) => {\n    try {\n      const pdf = await readAsPDF(file);\n      this.setState({\n        pdfName: file.name,\n        pdfFile: file,\n        pages: Array(pdf.numPages)\n          .fill(0)\n          .map((_, i) => pdf.getPage(i + 1)),\n        allObjects: Array(pdf.numPages).fill([]),\n        pagesScale: Array(pdf.numPages).fill(1),\n        pageDimensions: Array(pdf.numPages).fill({ width: 0, height: 0 }) \n      });\n    } catch (e) {\n      console.log(\"Failed to add pdf.\");\n      throw e;\n    }\n  }\n\n  savePDF = async () => {\n    const { pdfFile, saving, pages, allObjects, pdfName } = this.state;\n    if (!pdfFile || saving || !pages.length) return;\n\n    this.setState({ saving: true });\n    \n    try {\n      await save(pdfFile, allObjects, pdfName);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({ saving: false });\n    }\n  }\n\n  renderHiddenInputs = () => (\n    <>\n      <input\n        type=\"file\"\n        name=\"pdf\"\n        id=\"pdf\"\n        accept=\"application/pdf\"\n        onChange={this.onUploadPDF}\n        style={{ display: 'none' }} />\n      { this.state.selectedPageIndex > -1 && (\n          <input\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            style={{ display: 'none' }}\n            onChange={this.onUploadImage} \n          /> \n        ) \n      }\n    </>\n  )\n\n  onUploadImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { selectedPageIndex } = this.state;\n    console.log('====> this upload image is called', selectedPageIndex);\n    const file: File | null = e.target.files && e.target.files[0];\n    if (file && selectedPageIndex >= 0) {\n      this.addImage(file);\n      e.currentTarget.value = '';\n    }\n  }\n\n  addImage = async (file: File) => {\n    console.log('==> add image is called', file);\n    const { allObjects, selectedPageIndex } = this.state;\n    try {\n      // get dataURL to prevent canvas from tainted\n      const url = await readAsDataURL(file);\n      const img = await readAsImage(url as any);\n      const id = ggID();\n      const { width, height } = img;\n      const object: ImageObject = {\n        id,\n        type: \"image\",\n        width,\n        height,\n        x: 0,\n        y: 0,\n        payload: img,\n        file\n      };\n      this.setState({\n        allObjects: allObjects.map((objects, pIndex) =>\n          pIndex === selectedPageIndex ? [...objects, object] : objects\n        )\n      });\n      console.log('===> inside add image', object)\n    } catch (e) {\n      console.log(`Fail to add image.`, e);\n    }\n  }\n\n  handleFileInput = (inputName: string) => () => {\n    document.getElementById(inputName)?.click();\n  }\n\n  renderEmpty = () => (\n    <Segment placeholder loading={this.state.uploading} style={{ height: '80vh' }}>\n      <Header icon>\n        <Icon name='file pdf outline' />\n        Upload your PDF to start editing!\n      </Header>\n      <Button primary onClick={this.handleFileInput('pdf')}>Load PDF</Button>\n    </Segment>\n  );\n\n  nextPage = () => {\n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex + 1,\n    }))\n  }\n\n  previousPage = () => { \n    this.setState((prevState: State) => ({\n      selectedPageIndex: prevState.selectedPageIndex - 1,\n    }))\n  }\n\n  updateObject = (id: number, pageIndex: number, payload: Partial<ImageObject>) => {\n    const { allObjects } = this.state;\n    let pageObjects = allObjects[pageIndex];\n    const objectToUpdate = pageObjects[id];\n    const newObject: ImageObject = { ...objectToUpdate, ...payload };\n    pageObjects[id] = newObject;\n\n    this.setState({\n      allObjects: allObjects.map((objects, index) =>\n        pageIndex === index ? pageObjects : objects\n      )\n    })\n  }\n\n  updatePageDimensions = (pageIndex: number, dimensions: { width: number, height: number }) => {\n    this.setState({\n      pageDimensions: this.state.pageDimensions.map((page, index) => \n        pageIndex === index ? dimensions : page\n      )\n    });\n  }\n\n  removeObject = (id: number, pageIndex: number) => {\n    const { allObjects } = this.state;\n    const pageObjects = allObjects[pageIndex];\n    pageObjects.splice(id, 1);\n    allObjects[pageIndex] = pageObjects;\n    this.setState({ allObjects });\n  }\n\n  render() {\n    const { allObjects, pdfName, pdfFile, pages, saving, selectedPageIndex, pageDimensions } = this.state;\n    const isMultiplePages = pages.length > 1;\n    const isLastPage = selectedPageIndex === pages.length - 1;\n    const currentPage = pages[selectedPageIndex];\n    const allObjectsForCurrentPage = allObjects[selectedPageIndex];\n    const currentPageDimensions = pageDimensions[selectedPageIndex];\n  \n    return (\n      <Container style={{ margin: 30 }}>\n        {this.renderHiddenInputs()}\n          <Menu pointing>\n            <Menu.Item header>PDF Editor</Menu.Item>\n            <Menu.Menu position=\"right\">\n              {pdfFile && (\n                <>\n                  <Dropdown \n                    item \n                    closeOnBlur\n                    icon=\"edit outline\" \n                    simple>\n                    <Dropdown.Menu>\n                      <Dropdown.Item onClick={this.handleFileInput('image')}>\n                        Add Image\n                      </Dropdown.Item>\n                      <Dropdown.Item>Add Drawing</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  <Menu.Item\n                    name={saving ? 'Saving...' : 'Save'}\n                    disabled={saving}\n                    onClick={this.savePDF} />\n                </>\n              )}\n               <Menu.Item \n                    name=\"Upload new PDF\"\n                    onClick={this.handleFileInput('pdf')} />\n              </Menu.Menu>\n          </Menu>\n        \n        \n        {!pdfFile ? this.renderEmpty() : (\n          <Grid>\n              <Grid.Row>\n                <Grid.Column width={3} verticalAlign=\"middle\">\n                  {isMultiplePages && selectedPageIndex !== 0 && (\n                    <Button circular icon=\"angle left\" onClick={this.previousPage} />\n                  )}\n                </Grid.Column>\n                <Grid.Column width={10}>\n                  {currentPage && (\n                      <Segment\n                        style={{ position: 'relative' }}\n                        compact\n                        stacked={isMultiplePages && !isLastPage}\n                      >\n                        <PdfPage\n                          updateDimensions={(dimensions) => this.updatePageDimensions(selectedPageIndex, dimensions)}\n                          page={currentPage} />\n                          {allObjectsForCurrentPage && allObjectsForCurrentPage.map((data, index) => {\n                            if (data.type === 'image') {\n                              return (\n                                  <Image\n                                    removeImage={() => this.removeObject(index, selectedPageIndex)}\n                                    key={`${pdfName}-${index}`}\n                                    pageWidth={currentPageDimensions.width}\n                                    pageHeight={currentPageDimensions.height}\n                                    updateImageObject={(image) => this.updateObject(index, selectedPageIndex, image)}\n                                    {...data}  \n                                  />\n                              )\n                            }\n\n                            return null;\n                          })}\n                      </Segment>\n                    )\n                  }\n                </Grid.Column>\n                <Grid.Column width={3} verticalAlign=\"middle\" textAlign=\"right\">\n                  {isMultiplePages && selectedPageIndex !== pages.length - 1 && (\n                    <Button circular icon=\"angle right\" onClick={this.nextPage}/>\n                  )}\n                </Grid.Column>\n              </Grid.Row>\n          </Grid>\n        )}\n      </Container>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}